%------------------------------------------------------------------------------
% File     : ITP053^2 : TPTP v8.2.0. Released v7.5.0.
% Domain   : Interactive Theorem Proving
% Problem  : Sledgehammer EdmondsKarp_Termination_Abstract problem prob_81__7582066_1
% Version  : Especial.
% English  :

% Refs     : [BH+15] Blanchette et al. (2015), Mining the Archive of Formal
%          : [Des21] Desharnais (2021), Email to Geoff Sutcliffe
% Source   : [Des21]
% Names    : EdmondsKarp_Termination_Abstract/prob_81__7582066_1 [Des21]

% Status   : Theorem
% Rating   : 0.00 v8.1.0, 0.25 v7.5.0
% Syntax   : Number of formulae    :  359 (  86 unt;  54 typ;   0 def)
%            Number of atoms       :  837 ( 194 equ;   0 cnn)
%            Maximal formula atoms :   13 (   2 avg)
%            Number of connectives : 4403 (  84   ~;   6   |;  39   &;3821   @)
%                                         (   0 <=>; 453  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   28 (   9 avg)
%            Number of types       :    3 (   2 usr)
%            Number of type conns  :  164 ( 164   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :   53 (  52 usr;   8 con; 0-5 aty)
%            Number of variables   : 1167 (  50   ^;1043   !;  30   ?;1167   :)
%                                         (  44  !>;   0  ?*;   0  @-;   0  @+)
% SPC      : TH1_THM_EQU_NAR

% Comments : This file was generated by Sledgehammer 2021-02-23 16:15:24.178
%------------------------------------------------------------------------------
% Could-be-implicit typings (5)
thf(ty_t_Product__Type_Oprod,type,
    product_prod: $tType > $tType > $tType ).

thf(ty_t_List_Olist,type,
    list: $tType > $tType ).

thf(ty_tf_capacity,type,
    capacity: $tType ).

thf(ty_t_Set_Oset,type,
    set: $tType > $tType ).

thf(ty_t_Nat_Onat,type,
    nat: $tType ).

% Explicit typings (49)
thf(sy_cl_HOL_Otype,type,
    type: 
      !>[A: $tType] : $o ).

thf(sy_cl_Nat_Osize,type,
    size: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Oone,type,
    one: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Oord,type,
    ord: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Oorder,type,
    order: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Ogroup__add,type,
    group_add: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Olinorder,type,
    linorder: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Opreorder,type,
    preorder: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Owellorder,type,
    wellorder: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Osemigroup__add,type,
    semigroup_add: 
      !>[A: $tType] : $o ).

thf(sy_cl_Rings_Olinordered__idom,type,
    linordered_idom: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Ocomm__monoid__add,type,
    comm_monoid_add: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Oab__semigroup__add,type,
    ab_semigroup_add: 
      !>[A: $tType] : $o ).

thf(sy_cl_Rings_Olinordered__semidom,type,
    linordered_semidom: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Ocancel__semigroup__add,type,
    cancel_semigroup_add: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Oordered__ab__semigroup__add,type,
    ordere779506340up_add: 
      !>[A: $tType] : $o ).

thf(sy_cl_Rings_Olinordered__nonzero__semiring,type,
    linord1659791738miring: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Ocanonically__ordered__monoid__add,type,
    canoni770627133id_add: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Oordered__ab__semigroup__add__imp__le,type,
    ordere236663937imp_le: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Oordered__cancel__ab__semigroup__add,type,
    ordere223160158up_add: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Ostrict__ordered__ab__semigroup__add,type,
    strict2144017051up_add: 
      !>[A: $tType] : $o ).

thf(sy_cl_Divides_Ounique__euclidean__semiring__numeral,type,
    unique1598680935umeral: 
      !>[A: $tType] : $o ).

thf(sy_c_Graph_OGraph_Oconnected,type,
    connected: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > $o ) ).

thf(sy_c_Graph_OGraph_Odist,type,
    dist: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > nat > $o ) ).

thf(sy_c_Graph_OGraph_OisPath,type,
    isPath: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( list @ ( product_prod @ nat @ nat ) ) > nat > $o ) ).

thf(sy_c_Graph_OGraph_OisShortestPath,type,
    isShortestPath: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( list @ ( product_prod @ nat @ nat ) ) > nat > $o ) ).

thf(sy_c_Graph_OGraph_OisSimplePath,type,
    isSimplePath: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( list @ ( product_prod @ nat @ nat ) ) > nat > $o ) ).

thf(sy_c_Graph_OGraph_Omin__dist,type,
    min_dist: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > nat ) ).

thf(sy_c_Groups_Oone__class_Oone,type,
    one_one: 
      !>[A: $tType] : A ).

thf(sy_c_Groups_Oplus__class_Oplus,type,
    plus_plus: 
      !>[A: $tType] : ( A > A > A ) ).

thf(sy_c_List_Olist_ONil,type,
    nil: 
      !>[A: $tType] : ( list @ A ) ).

thf(sy_c_List_Olist_Oset,type,
    set2: 
      !>[A: $tType] : ( ( list @ A ) > ( set @ A ) ) ).

thf(sy_c_Nat_Osize__class_Osize,type,
    size_size: 
      !>[A: $tType] : ( A > nat ) ).

thf(sy_c_Orderings_Oord__class_Oless,type,
    ord_less: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Orderings_Oord__class_Oless__eq,type,
    ord_less_eq: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Product__Type_OPair,type,
    product_Pair: 
      !>[A: $tType,B: $tType] : ( A > B > ( product_prod @ A @ B ) ) ).

thf(sy_c_Product__Type_Oold_Oprod_Orec__prod,type,
    product_rec_prod: 
      !>[A: $tType,B: $tType,T: $tType] : ( ( A > B > T ) > ( product_prod @ A @ B ) > T ) ).

thf(sy_c_Product__Type_Oprod_Oswap,type,
    product_swap: 
      !>[A: $tType,B: $tType] : ( ( product_prod @ A @ B ) > ( product_prod @ B @ A ) ) ).

thf(sy_c_Set_OCollect,type,
    collect: 
      !>[A: $tType] : ( ( A > $o ) > ( set @ A ) ) ).

thf(sy_c_member,type,
    member: 
      !>[A: $tType] : ( A > ( set @ A ) > $o ) ).

thf(sy_v_c,type,
    c: ( product_prod @ nat @ nat ) > capacity ).

thf(sy_v_p,type,
    p: list @ ( product_prod @ nat @ nat ) ).

thf(sy_v_p1____,type,
    p1: list @ ( product_prod @ nat @ nat ) ).

thf(sy_v_p2____,type,
    p2: list @ ( product_prod @ nat @ nat ) ).

thf(sy_v_p_H,type,
    p3: list @ ( product_prod @ nat @ nat ) ).

thf(sy_v_s,type,
    s: nat ).

thf(sy_v_t,type,
    t: nat ).

thf(sy_v_u,type,
    u: nat ).

thf(sy_v_v,type,
    v: nat ).

% Relevant facts (255)
thf(fact_0_MIN_H,axiom,
    ( ( min_dist @ capacity @ c @ s @ t )
    = ( plus_plus @ nat @ ( plus_plus @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p1 ) @ ( one_one @ nat ) ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p2 ) ) ) ).

% MIN'
thf(fact_1__092_060open_062min__dist_As_At_A_061_Alength_Ap1_A_L_A_I1_A_L_Alength_Ap2_J_A_092_060Longrightarrow_062_Amin__dist_As_Au_A_061_Alength_Ap1_092_060close_062,axiom,
    ( ( ( min_dist @ capacity @ c @ s @ t )
      = ( plus_plus @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p1 ) @ ( plus_plus @ nat @ ( one_one @ nat ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p2 ) ) ) )
   => ( ( min_dist @ capacity @ c @ s @ u )
      = ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p1 ) ) ) ).

% \<open>min_dist s t = length p1 + (1 + length p2) \<Longrightarrow> min_dist s u = length p1\<close>
thf(fact_2__092_060open_062min__dist_As_At_A_061_Alength_Ap1_A_L_A_I1_A_L_Alength_Ap2_J_A_092_060Longrightarrow_062_Amin__dist_Au_At_A_061_A1_A_L_Alength_Ap2_092_060close_062,axiom,
    ( ( ( min_dist @ capacity @ c @ s @ t )
      = ( plus_plus @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p1 ) @ ( plus_plus @ nat @ ( one_one @ nat ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p2 ) ) ) )
   => ( ( min_dist @ capacity @ c @ u @ t )
      = ( plus_plus @ nat @ ( one_one @ nat ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p2 ) ) ) ) ).

% \<open>min_dist s t = length p1 + (1 + length p2) \<Longrightarrow> min_dist u t = 1 + length p2\<close>
thf(fact_3__092_060open_062min__dist_Av_At_A_061_Alength_Ap2_092_060close_062,axiom,
    ( ( min_dist @ capacity @ c @ v @ t )
    = ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p2 ) ) ).

% \<open>min_dist v t = length p2\<close>
thf(fact_4_MIN,axiom,
    ( ( min_dist @ capacity @ c @ s @ t )
    = ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p ) ) ).

% MIN
thf(fact_5__092_060open_062u_A_092_060noteq_062_Av_092_060close_062,axiom,
    u != v ).

% \<open>u \<noteq> v\<close>
thf(fact_6_MDSV,axiom,
    ( ( min_dist @ capacity @ c @ s @ v )
    = ( plus_plus @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p1 ) @ ( one_one @ nat ) ) ) ).

% MDSV
thf(fact_7_min__dist__split_I2_J,axiom,
    ! [U: nat,D1: nat,W: nat,D2: nat,V: nat] :
      ( ( dist @ capacity @ c @ U @ D1 @ W )
     => ( ( dist @ capacity @ c @ W @ D2 @ V )
       => ( ( ( min_dist @ capacity @ c @ U @ V )
            = ( plus_plus @ nat @ D1 @ D2 ) )
         => ( ( min_dist @ capacity @ c @ W @ V )
            = D2 ) ) ) ) ).

% min_dist_split(2)
thf(fact_8_min__dist__split_I1_J,axiom,
    ! [U: nat,D1: nat,W: nat,D2: nat,V: nat] :
      ( ( dist @ capacity @ c @ U @ D1 @ W )
     => ( ( dist @ capacity @ c @ W @ D2 @ V )
       => ( ( ( min_dist @ capacity @ c @ U @ V )
            = ( plus_plus @ nat @ D1 @ D2 ) )
         => ( ( min_dist @ capacity @ c @ U @ W )
            = D1 ) ) ) ) ).

% min_dist_split(1)
thf(fact_9_add__left__cancel,axiom,
    ! [A: $tType] :
      ( ( cancel_semigroup_add @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ( plus_plus @ A @ A2 @ B2 )
            = ( plus_plus @ A @ A2 @ C ) )
          = ( B2 = C ) ) ) ).

% add_left_cancel
thf(fact_10_add__right__cancel,axiom,
    ! [A: $tType] :
      ( ( cancel_semigroup_add @ A )
     => ! [B2: A,A2: A,C: A] :
          ( ( ( plus_plus @ A @ B2 @ A2 )
            = ( plus_plus @ A @ C @ A2 ) )
          = ( B2 = C ) ) ) ).

% add_right_cancel
thf(fact_11_dist__trans,axiom,
    ! [U: nat,D1: nat,W: nat,D2: nat,V: nat] :
      ( ( dist @ capacity @ c @ U @ D1 @ W )
     => ( ( dist @ capacity @ c @ W @ D2 @ V )
       => ( dist @ capacity @ c @ U @ ( plus_plus @ nat @ D1 @ D2 ) @ V ) ) ) ).

% dist_trans
thf(fact_12_assms_I3_J,axiom,
    isPath @ capacity @ c @ s @ p3 @ t ).

% assms(3)
thf(fact_13_DISTS_I1_J,axiom,
    dist @ capacity @ c @ s @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p1 ) @ u ).

% DISTS(1)
thf(fact_14_isPath__distD,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isPath @ capacity @ c @ U @ P @ V )
     => ( dist @ capacity @ c @ U @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P ) @ V ) ) ).

% isPath_distD
thf(fact_15_dist__def,axiom,
    ! [V: nat,D: nat,V2: nat] :
      ( ( dist @ capacity @ c @ V @ D @ V2 )
      = ( ? [P2: list @ ( product_prod @ nat @ nat )] :
            ( ( isPath @ capacity @ c @ V @ P2 @ V2 )
            & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P2 )
              = D ) ) ) ) ).

% dist_def
thf(fact_16_DISTS_I2_J,axiom,
    dist @ capacity @ c @ u @ ( one_one @ nat ) @ v ).

% DISTS(2)
thf(fact_17_P,axiom,
    isPath @ capacity @ c @ s @ p @ t ).

% P
thf(fact_18_DISTS_I3_J,axiom,
    dist @ capacity @ c @ v @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p2 ) @ t ).

% DISTS(3)
thf(fact_19_assms_I1_J,axiom,
    isShortestPath @ capacity @ c @ s @ p @ t ).

% assms(1)
thf(fact_20_add__right__imp__eq,axiom,
    ! [A: $tType] :
      ( ( cancel_semigroup_add @ A )
     => ! [B2: A,A2: A,C: A] :
          ( ( ( plus_plus @ A @ B2 @ A2 )
            = ( plus_plus @ A @ C @ A2 ) )
         => ( B2 = C ) ) ) ).

% add_right_imp_eq
thf(fact_21_add__left__imp__eq,axiom,
    ! [A: $tType] :
      ( ( cancel_semigroup_add @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ( plus_plus @ A @ A2 @ B2 )
            = ( plus_plus @ A @ A2 @ C ) )
         => ( B2 = C ) ) ) ).

% add_left_imp_eq
thf(fact_22_add_Oleft__commute,axiom,
    ! [A: $tType] :
      ( ( ab_semigroup_add @ A )
     => ! [B2: A,A2: A,C: A] :
          ( ( plus_plus @ A @ B2 @ ( plus_plus @ A @ A2 @ C ) )
          = ( plus_plus @ A @ A2 @ ( plus_plus @ A @ B2 @ C ) ) ) ) ).

% add.left_commute
thf(fact_23_add_Ocommute,axiom,
    ! [A: $tType] :
      ( ( ab_semigroup_add @ A )
     => ( ( plus_plus @ A )
        = ( ^ [A3: A,B3: A] : ( plus_plus @ A @ B3 @ A3 ) ) ) ) ).

% add.commute
thf(fact_24_add_Oright__cancel,axiom,
    ! [A: $tType] :
      ( ( group_add @ A )
     => ! [B2: A,A2: A,C: A] :
          ( ( ( plus_plus @ A @ B2 @ A2 )
            = ( plus_plus @ A @ C @ A2 ) )
          = ( B2 = C ) ) ) ).

% add.right_cancel
thf(fact_25_add_Oleft__cancel,axiom,
    ! [A: $tType] :
      ( ( group_add @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ( plus_plus @ A @ A2 @ B2 )
            = ( plus_plus @ A @ A2 @ C ) )
          = ( B2 = C ) ) ) ).

% add.left_cancel
thf(fact_26_add_Oassoc,axiom,
    ! [A: $tType] :
      ( ( semigroup_add @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( plus_plus @ A @ ( plus_plus @ A @ A2 @ B2 ) @ C )
          = ( plus_plus @ A @ A2 @ ( plus_plus @ A @ B2 @ C ) ) ) ) ).

% add.assoc
thf(fact_27_group__cancel_Oadd2,axiom,
    ! [A: $tType] :
      ( ( comm_monoid_add @ A )
     => ! [B4: A,K: A,B2: A,A2: A] :
          ( ( B4
            = ( plus_plus @ A @ K @ B2 ) )
         => ( ( plus_plus @ A @ A2 @ B4 )
            = ( plus_plus @ A @ K @ ( plus_plus @ A @ A2 @ B2 ) ) ) ) ) ).

% group_cancel.add2
thf(fact_28_group__cancel_Oadd1,axiom,
    ! [A: $tType] :
      ( ( comm_monoid_add @ A )
     => ! [A4: A,K: A,A2: A,B2: A] :
          ( ( A4
            = ( plus_plus @ A @ K @ A2 ) )
         => ( ( plus_plus @ A @ A4 @ B2 )
            = ( plus_plus @ A @ K @ ( plus_plus @ A @ A2 @ B2 ) ) ) ) ) ).

% group_cancel.add1
thf(fact_29_add__mono__thms__linordered__semiring_I4_J,axiom,
    ! [A: $tType] :
      ( ( ordere779506340up_add @ A )
     => ! [I: A,J: A,K: A,L: A] :
          ( ( ( I = J )
            & ( K = L ) )
         => ( ( plus_plus @ A @ I @ K )
            = ( plus_plus @ A @ J @ L ) ) ) ) ).

% add_mono_thms_linordered_semiring(4)
thf(fact_30_ab__semigroup__add__class_Oadd__ac_I1_J,axiom,
    ! [A: $tType] :
      ( ( ab_semigroup_add @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( plus_plus @ A @ ( plus_plus @ A @ A2 @ B2 ) @ C )
          = ( plus_plus @ A @ A2 @ ( plus_plus @ A @ B2 @ C ) ) ) ) ).

% ab_semigroup_add_class.add_ac(1)
thf(fact_31_one__reorient,axiom,
    ! [A: $tType] :
      ( ( one @ A )
     => ! [X: A] :
          ( ( ( one_one @ A )
            = X )
          = ( X
            = ( one_one @ A ) ) ) ) ).

% one_reorient
thf(fact_32_isShortestPath__min__dist__def,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ capacity @ c @ U @ P @ V )
      = ( ( isPath @ capacity @ c @ U @ P @ V )
        & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P )
          = ( min_dist @ capacity @ c @ U @ V ) ) ) ) ).

% isShortestPath_min_dist_def
thf(fact_33_Graph_OisPath__distD,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat] :
          ( ( isPath @ Capacity @ C @ U @ P @ V )
         => ( dist @ Capacity @ C @ U @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P ) @ V ) ) ) ).

% Graph.isPath_distD
thf(fact_34_Graph_Odist__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( dist @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,V3: nat,D3: nat,V4: nat] :
            ? [P2: list @ ( product_prod @ nat @ nat )] :
              ( ( isPath @ Capacity @ C2 @ V3 @ P2 @ V4 )
              & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P2 )
                = D3 ) ) ) ) ) ).

% Graph.dist_def
thf(fact_35_min__dist__minD,axiom,
    ! [V: nat,D: nat,V2: nat] :
      ( ( dist @ capacity @ c @ V @ D @ V2 )
     => ( ord_less_eq @ nat @ ( min_dist @ capacity @ c @ V @ V2 ) @ D ) ) ).

% min_dist_minD
thf(fact_36_min__distI__eq,axiom,
    ! [V: nat,D: nat,V2: nat] :
      ( ( dist @ capacity @ c @ V @ D @ V2 )
     => ( ! [D4: nat] :
            ( ( dist @ capacity @ c @ V @ D4 @ V2 )
           => ( ord_less_eq @ nat @ D @ D4 ) )
       => ( ( min_dist @ capacity @ c @ V @ V2 )
          = D ) ) ) ).

% min_distI_eq
thf(fact_37_Graph_Omin__dist__split_I1_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,D1: nat,W: nat,D2: nat,V: nat] :
          ( ( dist @ Capacity @ C @ U @ D1 @ W )
         => ( ( dist @ Capacity @ C @ W @ D2 @ V )
           => ( ( ( min_dist @ Capacity @ C @ U @ V )
                = ( plus_plus @ nat @ D1 @ D2 ) )
             => ( ( min_dist @ Capacity @ C @ U @ W )
                = D1 ) ) ) ) ) ).

% Graph.min_dist_split(1)
thf(fact_38_Graph_Omin__dist__split_I2_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,D1: nat,W: nat,D2: nat,V: nat] :
          ( ( dist @ Capacity @ C @ U @ D1 @ W )
         => ( ( dist @ Capacity @ C @ W @ D2 @ V )
           => ( ( ( min_dist @ Capacity @ C @ U @ V )
                = ( plus_plus @ nat @ D1 @ D2 ) )
             => ( ( min_dist @ Capacity @ C @ W @ V )
                = D2 ) ) ) ) ) ).

% Graph.min_dist_split(2)
thf(fact_39_min__dist__is__dist,axiom,
    ! [V: nat,V2: nat] :
      ( ( connected @ capacity @ c @ V @ V2 )
     => ( dist @ capacity @ c @ V @ ( min_dist @ capacity @ c @ V @ V2 ) @ V2 ) ) ).

% min_dist_is_dist
thf(fact_40_shortestPath__is__path,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ capacity @ c @ U @ P @ V )
     => ( isPath @ capacity @ c @ U @ P @ V ) ) ).

% shortestPath_is_path
thf(fact_41_assms_I4_J,axiom,
    member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ v @ u ) @ ( set2 @ ( product_prod @ nat @ nat ) @ p3 ) ).

% assms(4)
thf(fact_42_connected__def,axiom,
    ! [U: nat,V: nat] :
      ( ( connected @ capacity @ c @ U @ V )
      = ( ? [P2: list @ ( product_prod @ nat @ nat )] : ( isPath @ capacity @ c @ U @ P2 @ V ) ) ) ).

% connected_def
thf(fact_43_connected__by__dist,axiom,
    ! [V: nat,V2: nat] :
      ( ( connected @ capacity @ c @ V @ V2 )
      = ( ? [D3: nat] : ( dist @ capacity @ c @ V @ D3 @ V2 ) ) ) ).

% connected_by_dist
thf(fact_44_mem__Collect__eq,axiom,
    ! [A: $tType,A2: A,P3: A > $o] :
      ( ( member @ A @ A2 @ ( collect @ A @ P3 ) )
      = ( P3 @ A2 ) ) ).

% mem_Collect_eq
thf(fact_45_Collect__mem__eq,axiom,
    ! [A: $tType,A4: set @ A] :
      ( ( collect @ A
        @ ^ [X2: A] : ( member @ A @ X2 @ A4 ) )
      = A4 ) ).

% Collect_mem_eq
thf(fact_46_Collect__cong,axiom,
    ! [A: $tType,P3: A > $o,Q: A > $o] :
      ( ! [X3: A] :
          ( ( P3 @ X3 )
          = ( Q @ X3 ) )
     => ( ( collect @ A @ P3 )
        = ( collect @ A @ Q ) ) ) ).

% Collect_cong
thf(fact_47_ext,axiom,
    ! [B: $tType,A: $tType,F: A > B,G: A > B] :
      ( ! [X3: A] :
          ( ( F @ X3 )
          = ( G @ X3 ) )
     => ( F = G ) ) ).

% ext
thf(fact_48_obtain__shortest__path,axiom,
    ! [U: nat,V: nat] :
      ( ( connected @ capacity @ c @ U @ V )
     => ~ ! [P4: list @ ( product_prod @ nat @ nat )] :
            ~ ( isShortestPath @ capacity @ c @ U @ P4 @ V ) ) ).

% obtain_shortest_path
thf(fact_49_assms_I2_J,axiom,
    member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ u @ v ) @ ( set2 @ ( product_prod @ nat @ nat ) @ p ) ).

% assms(2)
thf(fact_50_isPath__ex__edge1,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat] :
      ( ( isPath @ capacity @ c @ U @ P @ V )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( U1 != U )
         => ? [U2: nat] : ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U2 @ U1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% isPath_ex_edge1
thf(fact_51_isPath__ex__edge2,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat] :
      ( ( isPath @ capacity @ c @ U @ P @ V )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( V1 != V )
         => ? [V22: nat] : ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ V1 @ V22 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% isPath_ex_edge2
thf(fact_52_min__dist__le,axiom,
    ! [Src: nat,V: nat,D5: nat] :
      ( ( connected @ capacity @ c @ Src @ V )
     => ( ( ord_less_eq @ nat @ D5 @ ( min_dist @ capacity @ c @ Src @ V ) )
       => ? [V5: nat] :
            ( ( connected @ capacity @ c @ Src @ V5 )
            & ( ( min_dist @ capacity @ c @ Src @ V5 )
              = D5 ) ) ) ) ).

% min_dist_le
thf(fact_53_min__distI2,axiom,
    ! [V: nat,V2: nat,Q: nat > $o] :
      ( ( connected @ capacity @ c @ V @ V2 )
     => ( ! [D6: nat] :
            ( ( dist @ capacity @ c @ V @ D6 @ V2 )
           => ( ! [D7: nat] :
                  ( ( dist @ capacity @ c @ V @ D7 @ V2 )
                 => ( ord_less_eq @ nat @ D6 @ D7 ) )
             => ( Q @ D6 ) ) )
       => ( Q @ ( min_dist @ capacity @ c @ V @ V2 ) ) ) ) ).

% min_distI2
thf(fact_54_isShortestPath__def,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ capacity @ c @ U @ P @ V )
      = ( ( isPath @ capacity @ c @ U @ P @ V )
        & ! [P5: list @ ( product_prod @ nat @ nat )] :
            ( ( isPath @ capacity @ c @ U @ P5 @ V )
           => ( ord_less_eq @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) ) ) ) ) ).

% isShortestPath_def
thf(fact_55_isShortestPath__level__edge_I1_J,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
      ( ( isShortestPath @ capacity @ c @ S @ P @ T2 )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( connected @ capacity @ c @ S @ U ) ) ) ).

% isShortestPath_level_edge(1)
thf(fact_56_isShortestPath__level__edge_I2_J,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
      ( ( isShortestPath @ capacity @ c @ S @ P @ T2 )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( connected @ capacity @ c @ U @ V ) ) ) ).

% isShortestPath_level_edge(2)
thf(fact_57_isShortestPath__level__edge_I3_J,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
      ( ( isShortestPath @ capacity @ c @ S @ P @ T2 )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( connected @ capacity @ c @ V @ T2 ) ) ) ).

% isShortestPath_level_edge(3)
thf(fact_58_add__le__cancel__left,axiom,
    ! [A: $tType] :
      ( ( ordere236663937imp_le @ A )
     => ! [C: A,A2: A,B2: A] :
          ( ( ord_less_eq @ A @ ( plus_plus @ A @ C @ A2 ) @ ( plus_plus @ A @ C @ B2 ) )
          = ( ord_less_eq @ A @ A2 @ B2 ) ) ) ).

% add_le_cancel_left
thf(fact_59_add__le__cancel__right,axiom,
    ! [A: $tType] :
      ( ( ordere236663937imp_le @ A )
     => ! [A2: A,C: A,B2: A] :
          ( ( ord_less_eq @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ C ) )
          = ( ord_less_eq @ A @ A2 @ B2 ) ) ) ).

% add_le_cancel_right
thf(fact_60_isShortestPath__level__edge_I6_J,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
      ( ( isShortestPath @ capacity @ c @ S @ P @ T2 )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( min_dist @ capacity @ c @ S @ T2 )
          = ( plus_plus @ nat @ ( plus_plus @ nat @ ( min_dist @ capacity @ c @ S @ U ) @ ( one_one @ nat ) ) @ ( min_dist @ capacity @ c @ V @ T2 ) ) ) ) ) ).

% isShortestPath_level_edge(6)
thf(fact_61_isShortestPath__level__edge_I5_J,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
      ( ( isShortestPath @ capacity @ c @ S @ P @ T2 )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( min_dist @ capacity @ c @ U @ T2 )
          = ( plus_plus @ nat @ ( one_one @ nat ) @ ( min_dist @ capacity @ c @ V @ T2 ) ) ) ) ) ).

% isShortestPath_level_edge(5)
thf(fact_62_isShortestPath__level__edge_I4_J,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
      ( ( isShortestPath @ capacity @ c @ S @ P @ T2 )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( min_dist @ capacity @ c @ S @ V )
          = ( plus_plus @ nat @ ( min_dist @ capacity @ c @ S @ U ) @ ( one_one @ nat ) ) ) ) ) ).

% isShortestPath_level_edge(4)
thf(fact_63_connected__refl,axiom,
    ! [V: nat] : ( connected @ capacity @ c @ V @ V ) ).

% connected_refl
thf(fact_64_connected__distI,axiom,
    ! [V: nat,D: nat,V2: nat] :
      ( ( dist @ capacity @ c @ V @ D @ V2 )
     => ( connected @ capacity @ c @ V @ V2 ) ) ).

% connected_distI
thf(fact_65_Graph_OisPath__ex__edge1,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat] :
          ( ( isPath @ Capacity @ C @ U @ P @ V )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( ( U1 != U )
             => ? [U2: nat] : ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U2 @ U1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ) ).

% Graph.isPath_ex_edge1
thf(fact_66_Graph_OisPath__ex__edge2,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat] :
          ( ( isPath @ Capacity @ C @ U @ P @ V )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( ( V1 != V )
             => ? [V22: nat] : ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ V1 @ V22 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ) ).

% Graph.isPath_ex_edge2
thf(fact_67_Graph_Oobtain__shortest__path,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,V: nat] :
          ( ( connected @ Capacity @ C @ U @ V )
         => ~ ! [P4: list @ ( product_prod @ nat @ nat )] :
                ~ ( isShortestPath @ Capacity @ C @ U @ P4 @ V ) ) ) ).

% Graph.obtain_shortest_path
thf(fact_68_Graph_OisShortestPath_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isShortestPath @ Capacity )
        = ( isShortestPath @ Capacity ) ) ) ).

% Graph.isShortestPath.cong
thf(fact_69_Graph_Oconnected__refl,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat] : ( connected @ Capacity @ C @ V @ V ) ) ).

% Graph.connected_refl
thf(fact_70_Graph_Oconnected_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( connected @ Capacity )
        = ( connected @ Capacity ) ) ) ).

% Graph.connected.cong
thf(fact_71_Graph_Omin__dist__le,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,Src: nat,V: nat,D5: nat] :
          ( ( connected @ Capacity @ C @ Src @ V )
         => ( ( ord_less_eq @ nat @ D5 @ ( min_dist @ Capacity @ C @ Src @ V ) )
           => ? [V5: nat] :
                ( ( connected @ Capacity @ C @ Src @ V5 )
                & ( ( min_dist @ Capacity @ C @ Src @ V5 )
                  = D5 ) ) ) ) ) ).

% Graph.min_dist_le
thf(fact_72_Graph_OisShortestPath__level__edge_I1_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
          ( ( isShortestPath @ Capacity @ C @ S @ P @ T2 )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( connected @ Capacity @ C @ S @ U ) ) ) ) ).

% Graph.isShortestPath_level_edge(1)
thf(fact_73_Graph_OisShortestPath__level__edge_I2_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
          ( ( isShortestPath @ Capacity @ C @ S @ P @ T2 )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( connected @ Capacity @ C @ U @ V ) ) ) ) ).

% Graph.isShortestPath_level_edge(2)
thf(fact_74_Graph_OisShortestPath__level__edge_I3_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
          ( ( isShortestPath @ Capacity @ C @ S @ P @ T2 )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( connected @ Capacity @ C @ V @ T2 ) ) ) ) ).

% Graph.isShortestPath_level_edge(3)
thf(fact_75_Graph_Oconnected__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( connected @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,U3: nat,V3: nat] :
            ? [P2: list @ ( product_prod @ nat @ nat )] : ( isPath @ Capacity @ C2 @ U3 @ P2 @ V3 ) ) ) ) ).

% Graph.connected_def
thf(fact_76_Graph_Oconnected__by__dist,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( connected @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,V3: nat,V4: nat] :
            ? [D3: nat] : ( dist @ Capacity @ C2 @ V3 @ D3 @ V4 ) ) ) ) ).

% Graph.connected_by_dist
thf(fact_77_Graph_Oconnected__distI,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,D: nat,V2: nat] :
          ( ( dist @ Capacity @ C @ V @ D @ V2 )
         => ( connected @ Capacity @ C @ V @ V2 ) ) ) ).

% Graph.connected_distI
thf(fact_78_Graph_OshortestPath__is__path,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat] :
          ( ( isShortestPath @ Capacity @ C @ U @ P @ V )
         => ( isPath @ Capacity @ C @ U @ P @ V ) ) ) ).

% Graph.shortestPath_is_path
thf(fact_79_Graph_OisShortestPath__level__edge_I6_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
          ( ( isShortestPath @ Capacity @ C @ S @ P @ T2 )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( ( min_dist @ Capacity @ C @ S @ T2 )
              = ( plus_plus @ nat @ ( plus_plus @ nat @ ( min_dist @ Capacity @ C @ S @ U ) @ ( one_one @ nat ) ) @ ( min_dist @ Capacity @ C @ V @ T2 ) ) ) ) ) ) ).

% Graph.isShortestPath_level_edge(6)
thf(fact_80_Graph_OisShortestPath__level__edge_I5_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
          ( ( isShortestPath @ Capacity @ C @ S @ P @ T2 )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( ( min_dist @ Capacity @ C @ U @ T2 )
              = ( plus_plus @ nat @ ( one_one @ nat ) @ ( min_dist @ Capacity @ C @ V @ T2 ) ) ) ) ) ) ).

% Graph.isShortestPath_level_edge(5)
thf(fact_81_Graph_OisShortestPath__level__edge_I4_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,U: nat,V: nat] :
          ( ( isShortestPath @ Capacity @ C @ S @ P @ T2 )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U @ V ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( ( min_dist @ Capacity @ C @ S @ V )
              = ( plus_plus @ nat @ ( min_dist @ Capacity @ C @ S @ U ) @ ( one_one @ nat ) ) ) ) ) ) ).

% Graph.isShortestPath_level_edge(4)
thf(fact_82_Graph_Omin__distI2,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,V2: nat,Q: nat > $o] :
          ( ( connected @ Capacity @ C @ V @ V2 )
         => ( ! [D6: nat] :
                ( ( dist @ Capacity @ C @ V @ D6 @ V2 )
               => ( ! [D7: nat] :
                      ( ( dist @ Capacity @ C @ V @ D7 @ V2 )
                     => ( ord_less_eq @ nat @ D6 @ D7 ) )
                 => ( Q @ D6 ) ) )
           => ( Q @ ( min_dist @ Capacity @ C @ V @ V2 ) ) ) ) ) ).

% Graph.min_distI2
thf(fact_83_Graph_OisShortestPath__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isShortestPath @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,U3: nat,P2: list @ ( product_prod @ nat @ nat ),V3: nat] :
              ( ( isPath @ Capacity @ C2 @ U3 @ P2 @ V3 )
              & ! [P5: list @ ( product_prod @ nat @ nat )] :
                  ( ( isPath @ Capacity @ C2 @ U3 @ P5 @ V3 )
                 => ( ord_less_eq @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P2 ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) ) ) ) ) ) ) ).

% Graph.isShortestPath_def
thf(fact_84_add__mono__thms__linordered__semiring_I3_J,axiom,
    ! [A: $tType] :
      ( ( ordere779506340up_add @ A )
     => ! [I: A,J: A,K: A,L: A] :
          ( ( ( ord_less_eq @ A @ I @ J )
            & ( K = L ) )
         => ( ord_less_eq @ A @ ( plus_plus @ A @ I @ K ) @ ( plus_plus @ A @ J @ L ) ) ) ) ).

% add_mono_thms_linordered_semiring(3)
thf(fact_85_add__mono__thms__linordered__semiring_I2_J,axiom,
    ! [A: $tType] :
      ( ( ordere779506340up_add @ A )
     => ! [I: A,J: A,K: A,L: A] :
          ( ( ( I = J )
            & ( ord_less_eq @ A @ K @ L ) )
         => ( ord_less_eq @ A @ ( plus_plus @ A @ I @ K ) @ ( plus_plus @ A @ J @ L ) ) ) ) ).

% add_mono_thms_linordered_semiring(2)
thf(fact_86_add__mono__thms__linordered__semiring_I1_J,axiom,
    ! [A: $tType] :
      ( ( ordere779506340up_add @ A )
     => ! [I: A,J: A,K: A,L: A] :
          ( ( ( ord_less_eq @ A @ I @ J )
            & ( ord_less_eq @ A @ K @ L ) )
         => ( ord_less_eq @ A @ ( plus_plus @ A @ I @ K ) @ ( plus_plus @ A @ J @ L ) ) ) ) ).

% add_mono_thms_linordered_semiring(1)
thf(fact_87_add__mono,axiom,
    ! [A: $tType] :
      ( ( ordere779506340up_add @ A )
     => ! [A2: A,B2: A,C: A,D: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ord_less_eq @ A @ C @ D )
           => ( ord_less_eq @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ D ) ) ) ) ) ).

% add_mono
thf(fact_88_add__left__mono,axiom,
    ! [A: $tType] :
      ( ( ordere779506340up_add @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ord_less_eq @ A @ ( plus_plus @ A @ C @ A2 ) @ ( plus_plus @ A @ C @ B2 ) ) ) ) ).

% add_left_mono
thf(fact_89_less__eqE,axiom,
    ! [A: $tType] :
      ( ( canoni770627133id_add @ A )
     => ! [A2: A,B2: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ~ ! [C3: A] :
                ( B2
               != ( plus_plus @ A @ A2 @ C3 ) ) ) ) ).

% less_eqE
thf(fact_90_add__right__mono,axiom,
    ! [A: $tType] :
      ( ( ordere779506340up_add @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ord_less_eq @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ C ) ) ) ) ).

% add_right_mono
thf(fact_91_le__iff__add,axiom,
    ! [A: $tType] :
      ( ( canoni770627133id_add @ A )
     => ( ( ord_less_eq @ A )
        = ( ^ [A3: A,B3: A] :
            ? [C2: A] :
              ( B3
              = ( plus_plus @ A @ A3 @ C2 ) ) ) ) ) ).

% le_iff_add
thf(fact_92_add__le__imp__le__left,axiom,
    ! [A: $tType] :
      ( ( ordere236663937imp_le @ A )
     => ! [C: A,A2: A,B2: A] :
          ( ( ord_less_eq @ A @ ( plus_plus @ A @ C @ A2 ) @ ( plus_plus @ A @ C @ B2 ) )
         => ( ord_less_eq @ A @ A2 @ B2 ) ) ) ).

% add_le_imp_le_left
thf(fact_93_add__le__imp__le__right,axiom,
    ! [A: $tType] :
      ( ( ordere236663937imp_le @ A )
     => ! [A2: A,C: A,B2: A] :
          ( ( ord_less_eq @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ C ) )
         => ( ord_less_eq @ A @ A2 @ B2 ) ) ) ).

% add_le_imp_le_right
thf(fact_94_Graph_Omin__dist__minD,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,D: nat,V2: nat] :
          ( ( dist @ Capacity @ C @ V @ D @ V2 )
         => ( ord_less_eq @ nat @ ( min_dist @ Capacity @ C @ V @ V2 ) @ D ) ) ) ).

% Graph.min_dist_minD
thf(fact_95_Graph_Omin__distI__eq,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,D: nat,V2: nat] :
          ( ( dist @ Capacity @ C @ V @ D @ V2 )
         => ( ! [D4: nat] :
                ( ( dist @ Capacity @ C @ V @ D4 @ V2 )
               => ( ord_less_eq @ nat @ D @ D4 ) )
           => ( ( min_dist @ Capacity @ C @ V @ V2 )
              = D ) ) ) ) ).

% Graph.min_distI_eq
thf(fact_96_Graph_Omin__dist__is__dist,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,V2: nat] :
          ( ( connected @ Capacity @ C @ V @ V2 )
         => ( dist @ Capacity @ C @ V @ ( min_dist @ Capacity @ C @ V @ V2 ) @ V2 ) ) ) ).

% Graph.min_dist_is_dist
thf(fact_97_Graph_OisShortestPath__min__dist__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isShortestPath @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,U3: nat,P2: list @ ( product_prod @ nat @ nat ),V3: nat] :
              ( ( isPath @ Capacity @ C2 @ U3 @ P2 @ V3 )
              & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P2 )
                = ( min_dist @ Capacity @ C2 @ U3 @ V3 ) ) ) ) ) ) ).

% Graph.isShortestPath_min_dist_def
thf(fact_98_Graph_OisPath_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isPath @ Capacity )
        = ( isPath @ Capacity ) ) ) ).

% Graph.isPath.cong
thf(fact_99_Graph_Omin__dist_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( min_dist @ Capacity )
        = ( min_dist @ Capacity ) ) ) ).

% Graph.min_dist.cong
thf(fact_100_Graph_Odist_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( dist @ Capacity )
        = ( dist @ Capacity ) ) ) ).

% Graph.dist.cong
thf(fact_101_Graph_Odist__trans,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,D1: nat,W: nat,D2: nat,V: nat] :
          ( ( dist @ Capacity @ C @ U @ D1 @ W )
         => ( ( dist @ Capacity @ C @ W @ D2 @ V )
           => ( dist @ Capacity @ C @ U @ ( plus_plus @ nat @ D1 @ D2 ) @ V ) ) ) ) ).

% Graph.dist_trans
thf(fact_102_nat__add__left__cancel__le,axiom,
    ! [K: nat,M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ ( plus_plus @ nat @ K @ M ) @ ( plus_plus @ nat @ K @ N ) )
      = ( ord_less_eq @ nat @ M @ N ) ) ).

% nat_add_left_cancel_le
thf(fact_103_isShortestPath__alt,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ capacity @ c @ U @ P @ V )
      = ( ( isSimplePath @ capacity @ c @ U @ P @ V )
        & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P )
          = ( min_dist @ capacity @ c @ U @ V ) ) ) ) ).

% isShortestPath_alt
thf(fact_104_min__dist__less,axiom,
    ! [Src: nat,V: nat,D: nat,D5: nat] :
      ( ( connected @ capacity @ c @ Src @ V )
     => ( ( ( min_dist @ capacity @ c @ Src @ V )
          = D )
       => ( ( ord_less @ nat @ D5 @ D )
         => ? [V5: nat] :
              ( ( connected @ capacity @ c @ Src @ V5 )
              & ( ( min_dist @ capacity @ c @ Src @ V5 )
                = D5 ) ) ) ) ) ).

% min_dist_less
thf(fact_105_isSPath__no__selfloop,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat] :
      ( ( isSimplePath @ capacity @ c @ U @ P @ V )
     => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ U1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ).

% isSPath_no_selfloop
thf(fact_106_isSPath__sg__incoming,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,U22: nat] :
      ( ( isSimplePath @ capacity @ c @ U @ P @ V )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( U1 != U22 )
         => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U22 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% isSPath_sg_incoming
thf(fact_107_isSPath__sg__outgoing,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,V23: nat] :
      ( ( isSimplePath @ capacity @ c @ U @ P @ V )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( V1 != V23 )
         => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V23 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% isSPath_sg_outgoing
thf(fact_108_old_Oprod_Oinject,axiom,
    ! [A: $tType,B: $tType,A2: A,B2: B,A5: A,B5: B] :
      ( ( ( product_Pair @ A @ B @ A2 @ B2 )
        = ( product_Pair @ A @ B @ A5 @ B5 ) )
      = ( ( A2 = A5 )
        & ( B2 = B5 ) ) ) ).

% old.prod.inject
thf(fact_109_prod_Oinject,axiom,
    ! [A: $tType,B: $tType,X1: A,X22: B,Y1: A,Y2: B] :
      ( ( ( product_Pair @ A @ B @ X1 @ X22 )
        = ( product_Pair @ A @ B @ Y1 @ Y2 ) )
      = ( ( X1 = Y1 )
        & ( X22 = Y2 ) ) ) ).

% prod.inject
thf(fact_110_isSPath__pathLE,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat] :
      ( ( isPath @ capacity @ c @ S @ P @ T2 )
     => ? [P6: list @ ( product_prod @ nat @ nat )] : ( isSimplePath @ capacity @ c @ S @ P6 @ T2 ) ) ).

% isSPath_pathLE
thf(fact_111_shortestPath__is__simple,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat] :
      ( ( isShortestPath @ capacity @ c @ S @ P @ T2 )
     => ( isSimplePath @ capacity @ c @ S @ P @ T2 ) ) ).

% shortestPath_is_simple
thf(fact_112_add__less__cancel__right,axiom,
    ! [A: $tType] :
      ( ( ordere236663937imp_le @ A )
     => ! [A2: A,C: A,B2: A] :
          ( ( ord_less @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ C ) )
          = ( ord_less @ A @ A2 @ B2 ) ) ) ).

% add_less_cancel_right
thf(fact_113_add__less__cancel__left,axiom,
    ! [A: $tType] :
      ( ( ordere236663937imp_le @ A )
     => ! [C: A,A2: A,B2: A] :
          ( ( ord_less @ A @ ( plus_plus @ A @ C @ A2 ) @ ( plus_plus @ A @ C @ B2 ) )
          = ( ord_less @ A @ A2 @ B2 ) ) ) ).

% add_less_cancel_left
thf(fact_114_nat__add__left__cancel__less,axiom,
    ! [K: nat,M: nat,N: nat] :
      ( ( ord_less @ nat @ ( plus_plus @ nat @ K @ M ) @ ( plus_plus @ nat @ K @ N ) )
      = ( ord_less @ nat @ M @ N ) ) ).

% nat_add_left_cancel_less
thf(fact_115_Graph_OisSimplePath_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isSimplePath @ Capacity )
        = ( isSimplePath @ Capacity ) ) ) ).

% Graph.isSimplePath.cong
thf(fact_116_less__mono__imp__le__mono,axiom,
    ! [F: nat > nat,I: nat,J: nat] :
      ( ! [I2: nat,J2: nat] :
          ( ( ord_less @ nat @ I2 @ J2 )
         => ( ord_less @ nat @ ( F @ I2 ) @ ( F @ J2 ) ) )
     => ( ( ord_less_eq @ nat @ I @ J )
       => ( ord_less_eq @ nat @ ( F @ I ) @ ( F @ J ) ) ) ) ).

% less_mono_imp_le_mono
thf(fact_117_le__neq__implies__less,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ( M != N )
       => ( ord_less @ nat @ M @ N ) ) ) ).

% le_neq_implies_less
thf(fact_118_less__or__eq__imp__le,axiom,
    ! [M: nat,N: nat] :
      ( ( ( ord_less @ nat @ M @ N )
        | ( M = N ) )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% less_or_eq_imp_le
thf(fact_119_le__eq__less__or__eq,axiom,
    ( ( ord_less_eq @ nat )
    = ( ^ [M2: nat,N2: nat] :
          ( ( ord_less @ nat @ M2 @ N2 )
          | ( M2 = N2 ) ) ) ) ).

% le_eq_less_or_eq
thf(fact_120_less__imp__le__nat,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% less_imp_le_nat
thf(fact_121_nat__less__le,axiom,
    ( ( ord_less @ nat )
    = ( ^ [M2: nat,N2: nat] :
          ( ( ord_less_eq @ nat @ M2 @ N2 )
          & ( M2 != N2 ) ) ) ) ).

% nat_less_le
thf(fact_122_add__lessD1,axiom,
    ! [I: nat,J: nat,K: nat] :
      ( ( ord_less @ nat @ ( plus_plus @ nat @ I @ J ) @ K )
     => ( ord_less @ nat @ I @ K ) ) ).

% add_lessD1
thf(fact_123_add__less__mono,axiom,
    ! [I: nat,J: nat,K: nat,L: nat] :
      ( ( ord_less @ nat @ I @ J )
     => ( ( ord_less @ nat @ K @ L )
       => ( ord_less @ nat @ ( plus_plus @ nat @ I @ K ) @ ( plus_plus @ nat @ J @ L ) ) ) ) ).

% add_less_mono
thf(fact_124_not__add__less1,axiom,
    ! [I: nat,J: nat] :
      ~ ( ord_less @ nat @ ( plus_plus @ nat @ I @ J ) @ I ) ).

% not_add_less1
thf(fact_125_not__add__less2,axiom,
    ! [J: nat,I: nat] :
      ~ ( ord_less @ nat @ ( plus_plus @ nat @ J @ I ) @ I ) ).

% not_add_less2
thf(fact_126_add__less__mono1,axiom,
    ! [I: nat,J: nat,K: nat] :
      ( ( ord_less @ nat @ I @ J )
     => ( ord_less @ nat @ ( plus_plus @ nat @ I @ K ) @ ( plus_plus @ nat @ J @ K ) ) ) ).

% add_less_mono1
thf(fact_127_trans__less__add1,axiom,
    ! [I: nat,J: nat,M: nat] :
      ( ( ord_less @ nat @ I @ J )
     => ( ord_less @ nat @ I @ ( plus_plus @ nat @ J @ M ) ) ) ).

% trans_less_add1
thf(fact_128_trans__less__add2,axiom,
    ! [I: nat,J: nat,M: nat] :
      ( ( ord_less @ nat @ I @ J )
     => ( ord_less @ nat @ I @ ( plus_plus @ nat @ M @ J ) ) ) ).

% trans_less_add2
thf(fact_129_less__add__eq__less,axiom,
    ! [K: nat,L: nat,M: nat,N: nat] :
      ( ( ord_less @ nat @ K @ L )
     => ( ( ( plus_plus @ nat @ M @ L )
          = ( plus_plus @ nat @ K @ N ) )
       => ( ord_less @ nat @ M @ N ) ) ) ).

% less_add_eq_less
thf(fact_130_nat__neq__iff,axiom,
    ! [M: nat,N: nat] :
      ( ( M != N )
      = ( ( ord_less @ nat @ M @ N )
        | ( ord_less @ nat @ N @ M ) ) ) ).

% nat_neq_iff
thf(fact_131_less__not__refl,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ N ) ).

% less_not_refl
thf(fact_132_less__not__refl2,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ N @ M )
     => ( M != N ) ) ).

% less_not_refl2
thf(fact_133_less__not__refl3,axiom,
    ! [S: nat,T2: nat] :
      ( ( ord_less @ nat @ S @ T2 )
     => ( S != T2 ) ) ).

% less_not_refl3
thf(fact_134_measure__induct,axiom,
    ! [B: $tType,A: $tType] :
      ( ( wellorder @ B )
     => ! [F: A > B,P3: A > $o,A2: A] :
          ( ! [X3: A] :
              ( ! [Y: A] :
                  ( ( ord_less @ B @ ( F @ Y ) @ ( F @ X3 ) )
                 => ( P3 @ Y ) )
             => ( P3 @ X3 ) )
         => ( P3 @ A2 ) ) ) ).

% measure_induct
thf(fact_135_less__irrefl__nat,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ N ) ).

% less_irrefl_nat
thf(fact_136_nat__less__induct,axiom,
    ! [P3: nat > $o,N: nat] :
      ( ! [N3: nat] :
          ( ! [M3: nat] :
              ( ( ord_less @ nat @ M3 @ N3 )
             => ( P3 @ M3 ) )
         => ( P3 @ N3 ) )
     => ( P3 @ N ) ) ).

% nat_less_induct
thf(fact_137_infinite__descent,axiom,
    ! [P3: nat > $o,N: nat] :
      ( ! [N3: nat] :
          ( ~ ( P3 @ N3 )
         => ? [M3: nat] :
              ( ( ord_less @ nat @ M3 @ N3 )
              & ~ ( P3 @ M3 ) ) )
     => ( P3 @ N ) ) ).

% infinite_descent
thf(fact_138_linorder__neqE__nat,axiom,
    ! [X: nat,Y3: nat] :
      ( ( X != Y3 )
     => ( ~ ( ord_less @ nat @ X @ Y3 )
       => ( ord_less @ nat @ Y3 @ X ) ) ) ).

% linorder_neqE_nat
thf(fact_139_measure__induct__rule,axiom,
    ! [B: $tType,A: $tType] :
      ( ( wellorder @ B )
     => ! [F: A > B,P3: A > $o,A2: A] :
          ( ! [X3: A] :
              ( ! [Y: A] :
                  ( ( ord_less @ B @ ( F @ Y ) @ ( F @ X3 ) )
                 => ( P3 @ Y ) )
             => ( P3 @ X3 ) )
         => ( P3 @ A2 ) ) ) ).

% measure_induct_rule
thf(fact_140_infinite__descent__measure,axiom,
    ! [A: $tType,P3: A > $o,V6: A > nat,X: A] :
      ( ! [X3: A] :
          ( ~ ( P3 @ X3 )
         => ? [Y: A] :
              ( ( ord_less @ nat @ ( V6 @ Y ) @ ( V6 @ X3 ) )
              & ~ ( P3 @ Y ) ) )
     => ( P3 @ X ) ) ).

% infinite_descent_measure
thf(fact_141_add__less__imp__less__right,axiom,
    ! [A: $tType] :
      ( ( ordere236663937imp_le @ A )
     => ! [A2: A,C: A,B2: A] :
          ( ( ord_less @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ C ) )
         => ( ord_less @ A @ A2 @ B2 ) ) ) ).

% add_less_imp_less_right
thf(fact_142_add__less__imp__less__left,axiom,
    ! [A: $tType] :
      ( ( ordere236663937imp_le @ A )
     => ! [C: A,A2: A,B2: A] :
          ( ( ord_less @ A @ ( plus_plus @ A @ C @ A2 ) @ ( plus_plus @ A @ C @ B2 ) )
         => ( ord_less @ A @ A2 @ B2 ) ) ) ).

% add_less_imp_less_left
thf(fact_143_add__strict__right__mono,axiom,
    ! [A: $tType] :
      ( ( ordere223160158up_add @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less @ A @ A2 @ B2 )
         => ( ord_less @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ C ) ) ) ) ).

% add_strict_right_mono
thf(fact_144_add__strict__left__mono,axiom,
    ! [A: $tType] :
      ( ( ordere223160158up_add @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less @ A @ A2 @ B2 )
         => ( ord_less @ A @ ( plus_plus @ A @ C @ A2 ) @ ( plus_plus @ A @ C @ B2 ) ) ) ) ).

% add_strict_left_mono
thf(fact_145_add__strict__mono,axiom,
    ! [A: $tType] :
      ( ( strict2144017051up_add @ A )
     => ! [A2: A,B2: A,C: A,D: A] :
          ( ( ord_less @ A @ A2 @ B2 )
         => ( ( ord_less @ A @ C @ D )
           => ( ord_less @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ D ) ) ) ) ) ).

% add_strict_mono
thf(fact_146_add__mono__thms__linordered__field_I1_J,axiom,
    ! [A: $tType] :
      ( ( ordere223160158up_add @ A )
     => ! [I: A,J: A,K: A,L: A] :
          ( ( ( ord_less @ A @ I @ J )
            & ( K = L ) )
         => ( ord_less @ A @ ( plus_plus @ A @ I @ K ) @ ( plus_plus @ A @ J @ L ) ) ) ) ).

% add_mono_thms_linordered_field(1)
thf(fact_147_add__mono__thms__linordered__field_I2_J,axiom,
    ! [A: $tType] :
      ( ( ordere223160158up_add @ A )
     => ! [I: A,J: A,K: A,L: A] :
          ( ( ( I = J )
            & ( ord_less @ A @ K @ L ) )
         => ( ord_less @ A @ ( plus_plus @ A @ I @ K ) @ ( plus_plus @ A @ J @ L ) ) ) ) ).

% add_mono_thms_linordered_field(2)
thf(fact_148_add__mono__thms__linordered__field_I5_J,axiom,
    ! [A: $tType] :
      ( ( ordere223160158up_add @ A )
     => ! [I: A,J: A,K: A,L: A] :
          ( ( ( ord_less @ A @ I @ J )
            & ( ord_less @ A @ K @ L ) )
         => ( ord_less @ A @ ( plus_plus @ A @ I @ K ) @ ( plus_plus @ A @ J @ L ) ) ) ) ).

% add_mono_thms_linordered_field(5)
thf(fact_149_mono__nat__linear__lb,axiom,
    ! [F: nat > nat,M: nat,K: nat] :
      ( ! [M4: nat,N3: nat] :
          ( ( ord_less @ nat @ M4 @ N3 )
         => ( ord_less @ nat @ ( F @ M4 ) @ ( F @ N3 ) ) )
     => ( ord_less_eq @ nat @ ( plus_plus @ nat @ ( F @ M ) @ K ) @ ( F @ ( plus_plus @ nat @ M @ K ) ) ) ) ).

% mono_nat_linear_lb
thf(fact_150_Graph_OisSPath__pathLE,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat] :
          ( ( isPath @ Capacity @ C @ S @ P @ T2 )
         => ? [P6: list @ ( product_prod @ nat @ nat )] : ( isSimplePath @ Capacity @ C @ S @ P6 @ T2 ) ) ) ).

% Graph.isSPath_pathLE
thf(fact_151_Graph_OshortestPath__is__simple,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat] :
          ( ( isShortestPath @ Capacity @ C @ S @ P @ T2 )
         => ( isSimplePath @ Capacity @ C @ S @ P @ T2 ) ) ) ).

% Graph.shortestPath_is_simple
thf(fact_152_add__mono__thms__linordered__field_I4_J,axiom,
    ! [A: $tType] :
      ( ( ordere223160158up_add @ A )
     => ! [I: A,J: A,K: A,L: A] :
          ( ( ( ord_less_eq @ A @ I @ J )
            & ( ord_less @ A @ K @ L ) )
         => ( ord_less @ A @ ( plus_plus @ A @ I @ K ) @ ( plus_plus @ A @ J @ L ) ) ) ) ).

% add_mono_thms_linordered_field(4)
thf(fact_153_add__mono__thms__linordered__field_I3_J,axiom,
    ! [A: $tType] :
      ( ( ordere223160158up_add @ A )
     => ! [I: A,J: A,K: A,L: A] :
          ( ( ( ord_less @ A @ I @ J )
            & ( ord_less_eq @ A @ K @ L ) )
         => ( ord_less @ A @ ( plus_plus @ A @ I @ K ) @ ( plus_plus @ A @ J @ L ) ) ) ) ).

% add_mono_thms_linordered_field(3)
thf(fact_154_add__le__less__mono,axiom,
    ! [A: $tType] :
      ( ( ordere223160158up_add @ A )
     => ! [A2: A,B2: A,C: A,D: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ord_less @ A @ C @ D )
           => ( ord_less @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ D ) ) ) ) ) ).

% add_le_less_mono
thf(fact_155_add__less__le__mono,axiom,
    ! [A: $tType] :
      ( ( ordere223160158up_add @ A )
     => ! [A2: A,B2: A,C: A,D: A] :
          ( ( ord_less @ A @ A2 @ B2 )
         => ( ( ord_less_eq @ A @ C @ D )
           => ( ord_less @ A @ ( plus_plus @ A @ A2 @ C ) @ ( plus_plus @ A @ B2 @ D ) ) ) ) ) ).

% add_less_le_mono
thf(fact_156_Graph_Omin__dist__less,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,Src: nat,V: nat,D: nat,D5: nat] :
          ( ( connected @ Capacity @ C @ Src @ V )
         => ( ( ( min_dist @ Capacity @ C @ Src @ V )
              = D )
           => ( ( ord_less @ nat @ D5 @ D )
             => ? [V5: nat] :
                  ( ( connected @ Capacity @ C @ Src @ V5 )
                  & ( ( min_dist @ Capacity @ C @ Src @ V5 )
                    = D5 ) ) ) ) ) ) ).

% Graph.min_dist_less
thf(fact_157_Graph_OisSPath__no__selfloop,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat] :
          ( ( isSimplePath @ Capacity @ C @ U @ P @ V )
         => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ U1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ).

% Graph.isSPath_no_selfloop
thf(fact_158_Graph_OisSPath__sg__incoming,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,U22: nat] :
          ( ( isSimplePath @ Capacity @ C @ U @ P @ V )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( ( U1 != U22 )
             => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U22 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ) ).

% Graph.isSPath_sg_incoming
thf(fact_159_Graph_OisSPath__sg__outgoing,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,V23: nat] :
          ( ( isSimplePath @ Capacity @ C @ U @ P @ V )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( ( V1 != V23 )
             => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V23 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ) ).

% Graph.isSPath_sg_outgoing
thf(fact_160_surj__pair,axiom,
    ! [A: $tType,B: $tType,P: product_prod @ A @ B] :
    ? [X3: A,Y4: B] :
      ( P
      = ( product_Pair @ A @ B @ X3 @ Y4 ) ) ).

% surj_pair
thf(fact_161_prod__cases,axiom,
    ! [B: $tType,A: $tType,P3: ( product_prod @ A @ B ) > $o,P: product_prod @ A @ B] :
      ( ! [A6: A,B6: B] : ( P3 @ ( product_Pair @ A @ B @ A6 @ B6 ) )
     => ( P3 @ P ) ) ).

% prod_cases
thf(fact_162_Pair__inject,axiom,
    ! [A: $tType,B: $tType,A2: A,B2: B,A5: A,B5: B] :
      ( ( ( product_Pair @ A @ B @ A2 @ B2 )
        = ( product_Pair @ A @ B @ A5 @ B5 ) )
     => ~ ( ( A2 = A5 )
         => ( B2 != B5 ) ) ) ).

% Pair_inject
thf(fact_163_prod__cases3,axiom,
    ! [A: $tType,B: $tType,C4: $tType,Y3: product_prod @ A @ ( product_prod @ B @ C4 )] :
      ~ ! [A6: A,B6: B,C3: C4] :
          ( Y3
         != ( product_Pair @ A @ ( product_prod @ B @ C4 ) @ A6 @ ( product_Pair @ B @ C4 @ B6 @ C3 ) ) ) ).

% prod_cases3
thf(fact_164_prod__cases4,axiom,
    ! [A: $tType,B: $tType,C4: $tType,D8: $tType,Y3: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ D8 ) )] :
      ~ ! [A6: A,B6: B,C3: C4,D6: D8] :
          ( Y3
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C4 @ D8 ) ) @ A6 @ ( product_Pair @ B @ ( product_prod @ C4 @ D8 ) @ B6 @ ( product_Pair @ C4 @ D8 @ C3 @ D6 ) ) ) ) ).

% prod_cases4
thf(fact_165_prod__cases5,axiom,
    ! [A: $tType,B: $tType,C4: $tType,D8: $tType,E: $tType,Y3: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ E ) ) )] :
      ~ ! [A6: A,B6: B,C3: C4,D6: D8,E2: E] :
          ( Y3
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ E ) ) ) @ A6 @ ( product_Pair @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ E ) ) @ B6 @ ( product_Pair @ C4 @ ( product_prod @ D8 @ E ) @ C3 @ ( product_Pair @ D8 @ E @ D6 @ E2 ) ) ) ) ) ).

% prod_cases5
thf(fact_166_prod__cases6,axiom,
    ! [A: $tType,B: $tType,C4: $tType,D8: $tType,E: $tType,F2: $tType,Y3: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ F2 ) ) ) )] :
      ~ ! [A6: A,B6: B,C3: C4,D6: D8,E2: E,F3: F2] :
          ( Y3
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ F2 ) ) ) ) @ A6 @ ( product_Pair @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ F2 ) ) ) @ B6 @ ( product_Pair @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ F2 ) ) @ C3 @ ( product_Pair @ D8 @ ( product_prod @ E @ F2 ) @ D6 @ ( product_Pair @ E @ F2 @ E2 @ F3 ) ) ) ) ) ) ).

% prod_cases6
thf(fact_167_prod__cases7,axiom,
    ! [A: $tType,B: $tType,C4: $tType,D8: $tType,E: $tType,F2: $tType,G2: $tType,Y3: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) ) ) )] :
      ~ ! [A6: A,B6: B,C3: C4,D6: D8,E2: E,F3: F2,G3: G2] :
          ( Y3
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) ) ) ) @ A6 @ ( product_Pair @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) ) ) @ B6 @ ( product_Pair @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) ) @ C3 @ ( product_Pair @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) @ D6 @ ( product_Pair @ E @ ( product_prod @ F2 @ G2 ) @ E2 @ ( product_Pair @ F2 @ G2 @ F3 @ G3 ) ) ) ) ) ) ) ).

% prod_cases7
thf(fact_168_prod__induct3,axiom,
    ! [C4: $tType,B: $tType,A: $tType,P3: ( product_prod @ A @ ( product_prod @ B @ C4 ) ) > $o,X: product_prod @ A @ ( product_prod @ B @ C4 )] :
      ( ! [A6: A,B6: B,C3: C4] : ( P3 @ ( product_Pair @ A @ ( product_prod @ B @ C4 ) @ A6 @ ( product_Pair @ B @ C4 @ B6 @ C3 ) ) )
     => ( P3 @ X ) ) ).

% prod_induct3
thf(fact_169_prod__induct4,axiom,
    ! [D8: $tType,C4: $tType,B: $tType,A: $tType,P3: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ D8 ) ) ) > $o,X: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ D8 ) )] :
      ( ! [A6: A,B6: B,C3: C4,D6: D8] : ( P3 @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C4 @ D8 ) ) @ A6 @ ( product_Pair @ B @ ( product_prod @ C4 @ D8 ) @ B6 @ ( product_Pair @ C4 @ D8 @ C3 @ D6 ) ) ) )
     => ( P3 @ X ) ) ).

% prod_induct4
thf(fact_170_prod__induct5,axiom,
    ! [E: $tType,D8: $tType,C4: $tType,B: $tType,A: $tType,P3: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ E ) ) ) ) > $o,X: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ E ) ) )] :
      ( ! [A6: A,B6: B,C3: C4,D6: D8,E2: E] : ( P3 @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ E ) ) ) @ A6 @ ( product_Pair @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ E ) ) @ B6 @ ( product_Pair @ C4 @ ( product_prod @ D8 @ E ) @ C3 @ ( product_Pair @ D8 @ E @ D6 @ E2 ) ) ) ) )
     => ( P3 @ X ) ) ).

% prod_induct5
thf(fact_171_prod__induct6,axiom,
    ! [F2: $tType,E: $tType,D8: $tType,C4: $tType,B: $tType,A: $tType,P3: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ F2 ) ) ) ) ) > $o,X: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ F2 ) ) ) )] :
      ( ! [A6: A,B6: B,C3: C4,D6: D8,E2: E,F3: F2] : ( P3 @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ F2 ) ) ) ) @ A6 @ ( product_Pair @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ F2 ) ) ) @ B6 @ ( product_Pair @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ F2 ) ) @ C3 @ ( product_Pair @ D8 @ ( product_prod @ E @ F2 ) @ D6 @ ( product_Pair @ E @ F2 @ E2 @ F3 ) ) ) ) ) )
     => ( P3 @ X ) ) ).

% prod_induct6
thf(fact_172_prod__induct7,axiom,
    ! [G2: $tType,F2: $tType,E: $tType,D8: $tType,C4: $tType,B: $tType,A: $tType,P3: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) ) ) ) ) > $o,X: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) ) ) )] :
      ( ! [A6: A,B6: B,C3: C4,D6: D8,E2: E,F3: F2,G3: G2] : ( P3 @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) ) ) ) @ A6 @ ( product_Pair @ B @ ( product_prod @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) ) ) @ B6 @ ( product_Pair @ C4 @ ( product_prod @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) ) @ C3 @ ( product_Pair @ D8 @ ( product_prod @ E @ ( product_prod @ F2 @ G2 ) ) @ D6 @ ( product_Pair @ E @ ( product_prod @ F2 @ G2 ) @ E2 @ ( product_Pair @ F2 @ G2 @ F3 @ G3 ) ) ) ) ) ) )
     => ( P3 @ X ) ) ).

% prod_induct7
thf(fact_173_old_Oprod_Oexhaust,axiom,
    ! [A: $tType,B: $tType,Y3: product_prod @ A @ B] :
      ~ ! [A6: A,B6: B] :
          ( Y3
         != ( product_Pair @ A @ B @ A6 @ B6 ) ) ).

% old.prod.exhaust
thf(fact_174_old_Oprod_Oinducts,axiom,
    ! [B: $tType,A: $tType,P3: ( product_prod @ A @ B ) > $o,Prod: product_prod @ A @ B] :
      ( ! [A6: A,B6: B] : ( P3 @ ( product_Pair @ A @ B @ A6 @ B6 ) )
     => ( P3 @ Prod ) ) ).

% old.prod.inducts
thf(fact_175_size__neq__size__imp__neq,axiom,
    ! [A: $tType] :
      ( ( size @ A )
     => ! [X: A,Y3: A] :
          ( ( ( size_size @ A @ X )
           != ( size_size @ A @ Y3 ) )
         => ( X != Y3 ) ) ) ).

% size_neq_size_imp_neq
thf(fact_176_le__refl,axiom,
    ! [N: nat] : ( ord_less_eq @ nat @ N @ N ) ).

% le_refl
thf(fact_177_le__trans,axiom,
    ! [I: nat,J: nat,K: nat] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ( ord_less_eq @ nat @ J @ K )
       => ( ord_less_eq @ nat @ I @ K ) ) ) ).

% le_trans
thf(fact_178_eq__imp__le,axiom,
    ! [M: nat,N: nat] :
      ( ( M = N )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% eq_imp_le
thf(fact_179_le__antisym,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ( ord_less_eq @ nat @ N @ M )
       => ( M = N ) ) ) ).

% le_antisym
thf(fact_180_nat__le__linear,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
      | ( ord_less_eq @ nat @ N @ M ) ) ).

% nat_le_linear
thf(fact_181_Nat_Oex__has__greatest__nat,axiom,
    ! [P3: nat > $o,K: nat,B2: nat] :
      ( ( P3 @ K )
     => ( ! [Y4: nat] :
            ( ( P3 @ Y4 )
           => ( ord_less_eq @ nat @ Y4 @ B2 ) )
       => ? [X3: nat] :
            ( ( P3 @ X3 )
            & ! [Y: nat] :
                ( ( P3 @ Y )
               => ( ord_less_eq @ nat @ Y @ X3 ) ) ) ) ) ).

% Nat.ex_has_greatest_nat
thf(fact_182_Graph_OisShortestPath__alt,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isShortestPath @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,U3: nat,P2: list @ ( product_prod @ nat @ nat ),V3: nat] :
              ( ( isSimplePath @ Capacity @ C2 @ U3 @ P2 @ V3 )
              & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P2 )
                = ( min_dist @ Capacity @ C2 @ U3 @ V3 ) ) ) ) ) ) ).

% Graph.isShortestPath_alt
thf(fact_183_nat__le__iff__add,axiom,
    ( ( ord_less_eq @ nat )
    = ( ^ [M2: nat,N2: nat] :
        ? [K2: nat] :
          ( N2
          = ( plus_plus @ nat @ M2 @ K2 ) ) ) ) ).

% nat_le_iff_add
thf(fact_184_trans__le__add2,axiom,
    ! [I: nat,J: nat,M: nat] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ord_less_eq @ nat @ I @ ( plus_plus @ nat @ M @ J ) ) ) ).

% trans_le_add2
thf(fact_185_trans__le__add1,axiom,
    ! [I: nat,J: nat,M: nat] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ord_less_eq @ nat @ I @ ( plus_plus @ nat @ J @ M ) ) ) ).

% trans_le_add1
thf(fact_186_add__le__mono1,axiom,
    ! [I: nat,J: nat,K: nat] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ord_less_eq @ nat @ ( plus_plus @ nat @ I @ K ) @ ( plus_plus @ nat @ J @ K ) ) ) ).

% add_le_mono1
thf(fact_187_add__le__mono,axiom,
    ! [I: nat,J: nat,K: nat,L: nat] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ( ord_less_eq @ nat @ K @ L )
       => ( ord_less_eq @ nat @ ( plus_plus @ nat @ I @ K ) @ ( plus_plus @ nat @ J @ L ) ) ) ) ).

% add_le_mono
thf(fact_188_le__Suc__ex,axiom,
    ! [K: nat,L: nat] :
      ( ( ord_less_eq @ nat @ K @ L )
     => ? [N3: nat] :
          ( L
          = ( plus_plus @ nat @ K @ N3 ) ) ) ).

% le_Suc_ex
thf(fact_189_add__leD2,axiom,
    ! [M: nat,K: nat,N: nat] :
      ( ( ord_less_eq @ nat @ ( plus_plus @ nat @ M @ K ) @ N )
     => ( ord_less_eq @ nat @ K @ N ) ) ).

% add_leD2
thf(fact_190_add__leD1,axiom,
    ! [M: nat,K: nat,N: nat] :
      ( ( ord_less_eq @ nat @ ( plus_plus @ nat @ M @ K ) @ N )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% add_leD1
thf(fact_191_le__add2,axiom,
    ! [N: nat,M: nat] : ( ord_less_eq @ nat @ N @ ( plus_plus @ nat @ M @ N ) ) ).

% le_add2
thf(fact_192_le__add1,axiom,
    ! [N: nat,M: nat] : ( ord_less_eq @ nat @ N @ ( plus_plus @ nat @ N @ M ) ) ).

% le_add1
thf(fact_193_add__leE,axiom,
    ! [M: nat,K: nat,N: nat] :
      ( ( ord_less_eq @ nat @ ( plus_plus @ nat @ M @ K ) @ N )
     => ~ ( ( ord_less_eq @ nat @ M @ N )
         => ~ ( ord_less_eq @ nat @ K @ N ) ) ) ).

% add_leE
thf(fact_194_isSPath__nt__parallel,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,E3: product_prod @ nat @ nat] :
      ( ( isSimplePath @ capacity @ c @ S @ P @ T2 )
     => ( ( member @ ( product_prod @ nat @ nat ) @ E3 @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_swap @ nat @ nat @ E3 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ).

% isSPath_nt_parallel
thf(fact_195_discrete,axiom,
    ! [A: $tType] :
      ( ( unique1598680935umeral @ A )
     => ( ( ord_less @ A )
        = ( ^ [A3: A] : ( ord_less_eq @ A @ ( plus_plus @ A @ A3 @ ( one_one @ A ) ) ) ) ) ) ).

% discrete
thf(fact_196_old_Oprod_Orec,axiom,
    ! [A: $tType,T: $tType,B: $tType,F1: A > B > T,A2: A,B2: B] :
      ( ( product_rec_prod @ A @ B @ T @ F1 @ ( product_Pair @ A @ B @ A2 @ B2 ) )
      = ( F1 @ A2 @ B2 ) ) ).

% old.prod.rec
thf(fact_197_fold__atLeastAtMost__nat_Oinduct,axiom,
    ! [A: $tType,P3: ( nat > A > A ) > nat > nat > A > $o,A0: nat > A > A,A1: nat,A22: nat,A32: A] :
      ( ! [F3: nat > A > A,A6: nat,B6: nat,Acc: A] :
          ( ( ~ ( ord_less @ nat @ B6 @ A6 )
           => ( P3 @ F3 @ ( plus_plus @ nat @ A6 @ ( one_one @ nat ) ) @ B6 @ ( F3 @ A6 @ Acc ) ) )
         => ( P3 @ F3 @ A6 @ B6 @ Acc ) )
     => ( P3 @ A0 @ A1 @ A22 @ A32 ) ) ).

% fold_atLeastAtMost_nat.induct
thf(fact_198_ex__has__greatest__nat__lemma,axiom,
    ! [A: $tType,P3: A > $o,K: A,F: A > nat,N: nat] :
      ( ( P3 @ K )
     => ( ! [X3: A] :
            ( ( P3 @ X3 )
           => ? [Y: A] :
                ( ( P3 @ Y )
                & ~ ( ord_less_eq @ nat @ ( F @ Y ) @ ( F @ X3 ) ) ) )
       => ? [Y4: A] :
            ( ( P3 @ Y4 )
            & ~ ( ord_less @ nat @ ( F @ Y4 ) @ ( plus_plus @ nat @ ( F @ K ) @ N ) ) ) ) ) ).

% ex_has_greatest_nat_lemma
thf(fact_199_swap__swap,axiom,
    ! [B: $tType,A: $tType,P: product_prod @ A @ B] :
      ( ( product_swap @ B @ A @ ( product_swap @ A @ B @ P ) )
      = P ) ).

% swap_swap
thf(fact_200_swap__simp,axiom,
    ! [A: $tType,B: $tType,X: B,Y3: A] :
      ( ( product_swap @ B @ A @ ( product_Pair @ B @ A @ X @ Y3 ) )
      = ( product_Pair @ A @ B @ Y3 @ X ) ) ).

% swap_simp
thf(fact_201_ex__has__least__nat,axiom,
    ! [A: $tType,P3: A > $o,K: A,M: A > nat] :
      ( ( P3 @ K )
     => ? [X3: A] :
          ( ( P3 @ X3 )
          & ! [Y: A] :
              ( ( P3 @ Y )
             => ( ord_less_eq @ nat @ ( M @ X3 ) @ ( M @ Y ) ) ) ) ) ).

% ex_has_least_nat
thf(fact_202_bounded__Max__nat,axiom,
    ! [P3: nat > $o,X: nat,M5: nat] :
      ( ( P3 @ X )
     => ( ! [X3: nat] :
            ( ( P3 @ X3 )
           => ( ord_less_eq @ nat @ X3 @ M5 ) )
       => ~ ! [M4: nat] :
              ( ( P3 @ M4 )
             => ~ ! [X4: nat] :
                    ( ( P3 @ X4 )
                   => ( ord_less_eq @ nat @ X4 @ M4 ) ) ) ) ) ).

% bounded_Max_nat
thf(fact_203_fold__atLeastAtMost__nat_Ocases,axiom,
    ! [A: $tType,X: product_prod @ ( nat > A > A ) @ ( product_prod @ nat @ ( product_prod @ nat @ A ) )] :
      ~ ! [F3: nat > A > A,A6: nat,B6: nat,Acc: A] :
          ( X
         != ( product_Pair @ ( nat > A > A ) @ ( product_prod @ nat @ ( product_prod @ nat @ A ) ) @ F3 @ ( product_Pair @ nat @ ( product_prod @ nat @ A ) @ A6 @ ( product_Pair @ nat @ A @ B6 @ Acc ) ) ) ) ).

% fold_atLeastAtMost_nat.cases
thf(fact_204_Graph_OisSPath__nt__parallel,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T2: nat,E3: product_prod @ nat @ nat] :
          ( ( isSimplePath @ Capacity @ C @ S @ P @ T2 )
         => ( ( member @ ( product_prod @ nat @ nat ) @ E3 @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_swap @ nat @ nat @ E3 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% Graph.isSPath_nt_parallel
thf(fact_205_Lattices__Big_Oex__has__greatest__nat,axiom,
    ! [A: $tType,P3: A > $o,K: A,F: A > nat,B2: nat] :
      ( ( P3 @ K )
     => ( ! [Y4: A] :
            ( ( P3 @ Y4 )
           => ( ord_less @ nat @ ( F @ Y4 ) @ B2 ) )
       => ? [X3: A] :
            ( ( P3 @ X3 )
            & ! [Y: A] :
                ( ( P3 @ Y )
               => ( ord_less_eq @ nat @ ( F @ Y ) @ ( F @ X3 ) ) ) ) ) ) ).

% Lattices_Big.ex_has_greatest_nat
thf(fact_206_less__add__one,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A )
     => ! [A2: A] : ( ord_less @ A @ A2 @ ( plus_plus @ A @ A2 @ ( one_one @ A ) ) ) ) ).

% less_add_one
thf(fact_207_add__mono1,axiom,
    ! [A: $tType] :
      ( ( linord1659791738miring @ A )
     => ! [A2: A,B2: A] :
          ( ( ord_less @ A @ A2 @ B2 )
         => ( ord_less @ A @ ( plus_plus @ A @ A2 @ ( one_one @ A ) ) @ ( plus_plus @ A @ B2 @ ( one_one @ A ) ) ) ) ) ).

% add_mono1
thf(fact_208_linorder__neqE__linordered__idom,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [X: A,Y3: A] :
          ( ( X != Y3 )
         => ( ~ ( ord_less @ A @ X @ Y3 )
           => ( ord_less @ A @ Y3 @ X ) ) ) ) ).

% linorder_neqE_linordered_idom
thf(fact_209_isPath_Osimps_I1_J,axiom,
    ! [U: nat,V: nat] :
      ( ( isPath @ capacity @ c @ U @ ( nil @ ( product_prod @ nat @ nat ) ) @ V )
      = ( U = V ) ) ).

% isPath.simps(1)
thf(fact_210_order__refl,axiom,
    ! [A: $tType] :
      ( ( preorder @ A )
     => ! [X: A] : ( ord_less_eq @ A @ X @ X ) ) ).

% order_refl
thf(fact_211_simplePath__empty__conv,axiom,
    ! [S: nat,T2: nat] :
      ( ( isSimplePath @ capacity @ c @ S @ ( nil @ ( product_prod @ nat @ nat ) ) @ T2 )
      = ( S = T2 ) ) ).

% simplePath_empty_conv
thf(fact_212_simplePath__same__conv,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat )] :
      ( ( isSimplePath @ capacity @ c @ S @ P @ S )
      = ( P
        = ( nil @ ( product_prod @ nat @ nat ) ) ) ) ).

% simplePath_same_conv
thf(fact_213_Graph_OsimplePath__empty__conv,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T2: nat] :
          ( ( isSimplePath @ Capacity @ C @ S @ ( nil @ ( product_prod @ nat @ nat ) ) @ T2 )
          = ( S = T2 ) ) ) ).

% Graph.simplePath_empty_conv
thf(fact_214_Graph_OsimplePath__same__conv,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat )] :
          ( ( isSimplePath @ Capacity @ C @ S @ P @ S )
          = ( P
            = ( nil @ ( product_prod @ nat @ nat ) ) ) ) ) ).

% Graph.simplePath_same_conv
thf(fact_215_Graph_OisPath_Osimps_I1_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,V: nat] :
          ( ( isPath @ Capacity @ C @ U @ ( nil @ ( product_prod @ nat @ nat ) ) @ V )
          = ( U = V ) ) ) ).

% Graph.isPath.simps(1)
thf(fact_216_dual__order_Oantisym,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [B2: A,A2: A] :
          ( ( ord_less_eq @ A @ B2 @ A2 )
         => ( ( ord_less_eq @ A @ A2 @ B2 )
           => ( A2 = B2 ) ) ) ) ).

% dual_order.antisym
thf(fact_217_dual__order_Oeq__iff,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ( ( ^ [Y5: A,Z: A] : Y5 = Z )
        = ( ^ [A3: A,B3: A] :
              ( ( ord_less_eq @ A @ B3 @ A3 )
              & ( ord_less_eq @ A @ A3 @ B3 ) ) ) ) ) ).

% dual_order.eq_iff
thf(fact_218_dual__order_Otrans,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [B2: A,A2: A,C: A] :
          ( ( ord_less_eq @ A @ B2 @ A2 )
         => ( ( ord_less_eq @ A @ C @ B2 )
           => ( ord_less_eq @ A @ C @ A2 ) ) ) ) ).

% dual_order.trans
thf(fact_219_linorder__wlog,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [P3: A > A > $o,A2: A,B2: A] :
          ( ! [A6: A,B6: A] :
              ( ( ord_less_eq @ A @ A6 @ B6 )
             => ( P3 @ A6 @ B6 ) )
         => ( ! [A6: A,B6: A] :
                ( ( P3 @ B6 @ A6 )
               => ( P3 @ A6 @ B6 ) )
           => ( P3 @ A2 @ B2 ) ) ) ) ).

% linorder_wlog
thf(fact_220_dual__order_Orefl,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A] : ( ord_less_eq @ A @ A2 @ A2 ) ) ).

% dual_order.refl
thf(fact_221_order__trans,axiom,
    ! [A: $tType] :
      ( ( preorder @ A )
     => ! [X: A,Y3: A,Z2: A] :
          ( ( ord_less_eq @ A @ X @ Y3 )
         => ( ( ord_less_eq @ A @ Y3 @ Z2 )
           => ( ord_less_eq @ A @ X @ Z2 ) ) ) ) ).

% order_trans
thf(fact_222_order__class_Oorder_Oantisym,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A,B2: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ord_less_eq @ A @ B2 @ A2 )
           => ( A2 = B2 ) ) ) ) ).

% order_class.order.antisym
thf(fact_223_ord__le__eq__trans,axiom,
    ! [A: $tType] :
      ( ( ord @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( B2 = C )
           => ( ord_less_eq @ A @ A2 @ C ) ) ) ) ).

% ord_le_eq_trans
thf(fact_224_ord__eq__le__trans,axiom,
    ! [A: $tType] :
      ( ( ord @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( A2 = B2 )
         => ( ( ord_less_eq @ A @ B2 @ C )
           => ( ord_less_eq @ A @ A2 @ C ) ) ) ) ).

% ord_eq_le_trans
thf(fact_225_order__class_Oorder_Oeq__iff,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ( ( ^ [Y5: A,Z: A] : Y5 = Z )
        = ( ^ [A3: A,B3: A] :
              ( ( ord_less_eq @ A @ A3 @ B3 )
              & ( ord_less_eq @ A @ B3 @ A3 ) ) ) ) ) ).

% order_class.order.eq_iff
thf(fact_226_antisym__conv,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [Y3: A,X: A] :
          ( ( ord_less_eq @ A @ Y3 @ X )
         => ( ( ord_less_eq @ A @ X @ Y3 )
            = ( X = Y3 ) ) ) ) ).

% antisym_conv
thf(fact_227_le__cases3,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X: A,Y3: A,Z2: A] :
          ( ( ( ord_less_eq @ A @ X @ Y3 )
           => ~ ( ord_less_eq @ A @ Y3 @ Z2 ) )
         => ( ( ( ord_less_eq @ A @ Y3 @ X )
             => ~ ( ord_less_eq @ A @ X @ Z2 ) )
           => ( ( ( ord_less_eq @ A @ X @ Z2 )
               => ~ ( ord_less_eq @ A @ Z2 @ Y3 ) )
             => ( ( ( ord_less_eq @ A @ Z2 @ Y3 )
                 => ~ ( ord_less_eq @ A @ Y3 @ X ) )
               => ( ( ( ord_less_eq @ A @ Y3 @ Z2 )
                   => ~ ( ord_less_eq @ A @ Z2 @ X ) )
                 => ~ ( ( ord_less_eq @ A @ Z2 @ X )
                     => ~ ( ord_less_eq @ A @ X @ Y3 ) ) ) ) ) ) ) ) ).

% le_cases3
thf(fact_228_order_Otrans,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ord_less_eq @ A @ B2 @ C )
           => ( ord_less_eq @ A @ A2 @ C ) ) ) ) ).

% order.trans
thf(fact_229_le__cases,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X: A,Y3: A] :
          ( ~ ( ord_less_eq @ A @ X @ Y3 )
         => ( ord_less_eq @ A @ Y3 @ X ) ) ) ).

% le_cases
thf(fact_230_eq__refl,axiom,
    ! [A: $tType] :
      ( ( preorder @ A )
     => ! [X: A,Y3: A] :
          ( ( X = Y3 )
         => ( ord_less_eq @ A @ X @ Y3 ) ) ) ).

% eq_refl
thf(fact_231_linear,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X: A,Y3: A] :
          ( ( ord_less_eq @ A @ X @ Y3 )
          | ( ord_less_eq @ A @ Y3 @ X ) ) ) ).

% linear
thf(fact_232_antisym,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [X: A,Y3: A] :
          ( ( ord_less_eq @ A @ X @ Y3 )
         => ( ( ord_less_eq @ A @ Y3 @ X )
           => ( X = Y3 ) ) ) ) ).

% antisym
thf(fact_233_eq__iff,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ( ( ^ [Y5: A,Z: A] : Y5 = Z )
        = ( ^ [X2: A,Y6: A] :
              ( ( ord_less_eq @ A @ X2 @ Y6 )
              & ( ord_less_eq @ A @ Y6 @ X2 ) ) ) ) ) ).

% eq_iff
thf(fact_234_ord__le__eq__subst,axiom,
    ! [A: $tType,B: $tType] :
      ( ( ( ord @ B )
        & ( ord @ A ) )
     => ! [A2: A,B2: A,F: A > B,C: B] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ( F @ B2 )
              = C )
           => ( ! [X3: A,Y4: A] :
                  ( ( ord_less_eq @ A @ X3 @ Y4 )
                 => ( ord_less_eq @ B @ ( F @ X3 ) @ ( F @ Y4 ) ) )
             => ( ord_less_eq @ B @ ( F @ A2 ) @ C ) ) ) ) ) ).

% ord_le_eq_subst
thf(fact_235_ord__eq__le__subst,axiom,
    ! [A: $tType,B: $tType] :
      ( ( ( ord @ B )
        & ( ord @ A ) )
     => ! [A2: A,F: B > A,B2: B,C: B] :
          ( ( A2
            = ( F @ B2 ) )
         => ( ( ord_less_eq @ B @ B2 @ C )
           => ( ! [X3: B,Y4: B] :
                  ( ( ord_less_eq @ B @ X3 @ Y4 )
                 => ( ord_less_eq @ A @ ( F @ X3 ) @ ( F @ Y4 ) ) )
             => ( ord_less_eq @ A @ A2 @ ( F @ C ) ) ) ) ) ) ).

% ord_eq_le_subst
thf(fact_236_order__subst2,axiom,
    ! [A: $tType,C4: $tType] :
      ( ( ( order @ C4 )
        & ( order @ A ) )
     => ! [A2: A,B2: A,F: A > C4,C: C4] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ord_less_eq @ C4 @ ( F @ B2 ) @ C )
           => ( ! [X3: A,Y4: A] :
                  ( ( ord_less_eq @ A @ X3 @ Y4 )
                 => ( ord_less_eq @ C4 @ ( F @ X3 ) @ ( F @ Y4 ) ) )
             => ( ord_less_eq @ C4 @ ( F @ A2 ) @ C ) ) ) ) ) ).

% order_subst2
thf(fact_237_order__subst1,axiom,
    ! [A: $tType,B: $tType] :
      ( ( ( order @ B )
        & ( order @ A ) )
     => ! [A2: A,F: B > A,B2: B,C: B] :
          ( ( ord_less_eq @ A @ A2 @ ( F @ B2 ) )
         => ( ( ord_less_eq @ B @ B2 @ C )
           => ( ! [X3: B,Y4: B] :
                  ( ( ord_less_eq @ B @ X3 @ Y4 )
                 => ( ord_less_eq @ A @ ( F @ X3 ) @ ( F @ Y4 ) ) )
             => ( ord_less_eq @ A @ A2 @ ( F @ C ) ) ) ) ) ) ).

% order_subst1
thf(fact_238_le__fun__def,axiom,
    ! [B: $tType,A: $tType] :
      ( ( ord @ B )
     => ( ( ord_less_eq @ ( A > B ) )
        = ( ^ [F4: A > B,G4: A > B] :
            ! [X2: A] : ( ord_less_eq @ B @ ( F4 @ X2 ) @ ( G4 @ X2 ) ) ) ) ) ).

% le_fun_def
thf(fact_239_le__funI,axiom,
    ! [B: $tType,A: $tType] :
      ( ( ord @ B )
     => ! [F: A > B,G: A > B] :
          ( ! [X3: A] : ( ord_less_eq @ B @ ( F @ X3 ) @ ( G @ X3 ) )
         => ( ord_less_eq @ ( A > B ) @ F @ G ) ) ) ).

% le_funI
thf(fact_240_le__funE,axiom,
    ! [B: $tType,A: $tType] :
      ( ( ord @ B )
     => ! [F: A > B,G: A > B,X: A] :
          ( ( ord_less_eq @ ( A > B ) @ F @ G )
         => ( ord_less_eq @ B @ ( F @ X ) @ ( G @ X ) ) ) ) ).

% le_funE
thf(fact_241_le__funD,axiom,
    ! [B: $tType,A: $tType] :
      ( ( ord @ B )
     => ! [F: A > B,G: A > B,X: A] :
          ( ( ord_less_eq @ ( A > B ) @ F @ G )
         => ( ord_less_eq @ B @ ( F @ X ) @ ( G @ X ) ) ) ) ).

% le_funD
thf(fact_242_dual__order_Ostrict__implies__not__eq,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [B2: A,A2: A] :
          ( ( ord_less @ A @ B2 @ A2 )
         => ( A2 != B2 ) ) ) ).

% dual_order.strict_implies_not_eq
thf(fact_243_order_Ostrict__implies__not__eq,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A,B2: A] :
          ( ( ord_less @ A @ A2 @ B2 )
         => ( A2 != B2 ) ) ) ).

% order.strict_implies_not_eq
thf(fact_244_not__less__iff__gr__or__eq,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X: A,Y3: A] :
          ( ( ~ ( ord_less @ A @ X @ Y3 ) )
          = ( ( ord_less @ A @ Y3 @ X )
            | ( X = Y3 ) ) ) ) ).

% not_less_iff_gr_or_eq
thf(fact_245_dual__order_Ostrict__trans,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [B2: A,A2: A,C: A] :
          ( ( ord_less @ A @ B2 @ A2 )
         => ( ( ord_less @ A @ C @ B2 )
           => ( ord_less @ A @ C @ A2 ) ) ) ) ).

% dual_order.strict_trans
thf(fact_246_linorder__less__wlog,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [P3: A > A > $o,A2: A,B2: A] :
          ( ! [A6: A,B6: A] :
              ( ( ord_less @ A @ A6 @ B6 )
             => ( P3 @ A6 @ B6 ) )
         => ( ! [A6: A] : ( P3 @ A6 @ A6 )
           => ( ! [A6: A,B6: A] :
                  ( ( P3 @ B6 @ A6 )
                 => ( P3 @ A6 @ B6 ) )
             => ( P3 @ A2 @ B2 ) ) ) ) ) ).

% linorder_less_wlog
thf(fact_247_exists__least__iff,axiom,
    ! [A: $tType] :
      ( ( wellorder @ A )
     => ( ( ^ [P7: A > $o] :
            ? [X5: A] : ( P7 @ X5 ) )
        = ( ^ [P8: A > $o] :
            ? [N2: A] :
              ( ( P8 @ N2 )
              & ! [M2: A] :
                  ( ( ord_less @ A @ M2 @ N2 )
                 => ~ ( P8 @ M2 ) ) ) ) ) ) ).

% exists_least_iff
thf(fact_248_less__imp__not__less,axiom,
    ! [A: $tType] :
      ( ( preorder @ A )
     => ! [X: A,Y3: A] :
          ( ( ord_less @ A @ X @ Y3 )
         => ~ ( ord_less @ A @ Y3 @ X ) ) ) ).

% less_imp_not_less
thf(fact_249_order_Ostrict__trans,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less @ A @ A2 @ B2 )
         => ( ( ord_less @ A @ B2 @ C )
           => ( ord_less @ A @ A2 @ C ) ) ) ) ).

% order.strict_trans
thf(fact_250_dual__order_Oirrefl,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A] :
          ~ ( ord_less @ A @ A2 @ A2 ) ) ).

% dual_order.irrefl
thf(fact_251_linorder__cases,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X: A,Y3: A] :
          ( ~ ( ord_less @ A @ X @ Y3 )
         => ( ( X != Y3 )
           => ( ord_less @ A @ Y3 @ X ) ) ) ) ).

% linorder_cases
thf(fact_252_less__imp__triv,axiom,
    ! [A: $tType] :
      ( ( preorder @ A )
     => ! [X: A,Y3: A,P3: $o] :
          ( ( ord_less @ A @ X @ Y3 )
         => ( ( ord_less @ A @ Y3 @ X )
           => P3 ) ) ) ).

% less_imp_triv
thf(fact_253_less__imp__not__eq2,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [X: A,Y3: A] :
          ( ( ord_less @ A @ X @ Y3 )
         => ( Y3 != X ) ) ) ).

% less_imp_not_eq2
thf(fact_254_antisym__conv3,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [Y3: A,X: A] :
          ( ~ ( ord_less @ A @ Y3 @ X )
         => ( ( ~ ( ord_less @ A @ X @ Y3 ) )
            = ( X = Y3 ) ) ) ) ).

% antisym_conv3

% Subclasses (17)
thf(subcl_Rings_Olinordered__idom___HOL_Otype,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( type @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Oone,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( one @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Orderings_Oord,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ord @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Orderings_Oorder,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( order @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Ogroup__add,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( group_add @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Orderings_Olinorder,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( linorder @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Orderings_Opreorder,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( preorder @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Osemigroup__add,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( semigroup_add @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Ocomm__monoid__add,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( comm_monoid_add @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Oab__semigroup__add,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ab_semigroup_add @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Rings_Olinordered__semidom,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( linordered_semidom @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Ocancel__semigroup__add,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( cancel_semigroup_add @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Oordered__ab__semigroup__add,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ordere779506340up_add @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Rings_Olinordered__nonzero__semiring,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( linord1659791738miring @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Oordered__ab__semigroup__add__imp__le,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ordere236663937imp_le @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Oordered__cancel__ab__semigroup__add,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ordere223160158up_add @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Ostrict__ordered__ab__semigroup__add,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( strict2144017051up_add @ A ) ) ).

% Type constructors (31)
thf(tcon_fun___Orderings_Opreorder,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( preorder @ A8 )
     => ( preorder @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Orderings_Oorder,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( order @ A8 )
     => ( order @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Orderings_Oord,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( ord @ A8 )
     => ( ord @ ( A7 > A8 ) ) ) ).

thf(tcon_Nat_Onat___Divides_Ounique__euclidean__semiring__numeral,axiom,
    unique1598680935umeral @ nat ).

thf(tcon_Nat_Onat___Groups_Ostrict__ordered__ab__semigroup__add,axiom,
    strict2144017051up_add @ nat ).

thf(tcon_Nat_Onat___Groups_Oordered__cancel__ab__semigroup__add,axiom,
    ordere223160158up_add @ nat ).

thf(tcon_Nat_Onat___Groups_Oordered__ab__semigroup__add__imp__le,axiom,
    ordere236663937imp_le @ nat ).

thf(tcon_Nat_Onat___Groups_Ocanonically__ordered__monoid__add,axiom,
    canoni770627133id_add @ nat ).

thf(tcon_Nat_Onat___Rings_Olinordered__nonzero__semiring,axiom,
    linord1659791738miring @ nat ).

thf(tcon_Nat_Onat___Groups_Oordered__ab__semigroup__add,axiom,
    ordere779506340up_add @ nat ).

thf(tcon_Nat_Onat___Groups_Ocancel__semigroup__add,axiom,
    cancel_semigroup_add @ nat ).

thf(tcon_Nat_Onat___Rings_Olinordered__semidom,axiom,
    linordered_semidom @ nat ).

thf(tcon_Nat_Onat___Groups_Oab__semigroup__add,axiom,
    ab_semigroup_add @ nat ).

thf(tcon_Nat_Onat___Groups_Ocomm__monoid__add,axiom,
    comm_monoid_add @ nat ).

thf(tcon_Nat_Onat___Groups_Osemigroup__add,axiom,
    semigroup_add @ nat ).

thf(tcon_Nat_Onat___Orderings_Owellorder,axiom,
    wellorder @ nat ).

thf(tcon_Nat_Onat___Orderings_Opreorder_1,axiom,
    preorder @ nat ).

thf(tcon_Nat_Onat___Orderings_Olinorder,axiom,
    linorder @ nat ).

thf(tcon_Nat_Onat___Orderings_Oorder_2,axiom,
    order @ nat ).

thf(tcon_Nat_Onat___Orderings_Oord_3,axiom,
    ord @ nat ).

thf(tcon_Nat_Onat___Groups_Oone,axiom,
    one @ nat ).

thf(tcon_Nat_Onat___Nat_Osize,axiom,
    size @ nat ).

thf(tcon_Set_Oset___Orderings_Opreorder_4,axiom,
    ! [A7: $tType] : ( preorder @ ( set @ A7 ) ) ).

thf(tcon_Set_Oset___Orderings_Oorder_5,axiom,
    ! [A7: $tType] : ( order @ ( set @ A7 ) ) ).

thf(tcon_Set_Oset___Orderings_Oord_6,axiom,
    ! [A7: $tType] : ( ord @ ( set @ A7 ) ) ).

thf(tcon_HOL_Obool___Orderings_Opreorder_7,axiom,
    preorder @ $o ).

thf(tcon_HOL_Obool___Orderings_Olinorder_8,axiom,
    linorder @ $o ).

thf(tcon_HOL_Obool___Orderings_Oorder_9,axiom,
    order @ $o ).

thf(tcon_HOL_Obool___Orderings_Oord_10,axiom,
    ord @ $o ).

thf(tcon_List_Olist___Nat_Osize_11,axiom,
    ! [A7: $tType] : ( size @ ( list @ A7 ) ) ).

thf(tcon_Product__Type_Oprod___Nat_Osize_12,axiom,
    ! [A7: $tType,A8: $tType] : ( size @ ( product_prod @ A7 @ A8 ) ) ).

% Free types (1)
thf(tfree_0,hypothesis,
    linordered_idom @ capacity ).

% Conjectures (1)
thf(conj_0,conjecture,
    ( ( min_dist @ capacity @ c @ u @ t )
    = ( plus_plus @ nat @ ( one_one @ nat ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p2 ) ) ) ).

%------------------------------------------------------------------------------
