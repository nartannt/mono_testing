%------------------------------------------------------------------------------
% File     : ITP052^2 : TPTP v8.2.0. Released v7.5.0.
% Domain   : Interactive Theorem Proving
% Problem  : Sledgehammer EdmondsKarp_Termination_Abstract problem prob_430__7598256_1
% Version  : Especial.
% English  :

% Refs     : [BH+15] Blanchette et al. (2015), Mining the Archive of Formal
%          : [Des21] Desharnais (2021), Email to Geoff Sutcliffe
% Source   : [Des21]
% Names    : EdmondsKarp_Termination_Abstract/prob_430__7598256_1 [Des21]

% Status   : Theorem
% Rating   : 0.00 v8.2.0, 0.33 v8.1.0, 0.00 v7.5.0
% Syntax   : Number of formulae    :  358 (  75 unt;  58 typ;   0 def)
%            Number of atoms       :  830 ( 176 equ;   0 cnn)
%            Maximal formula atoms :   13 (   2 avg)
%            Number of connectives : 4724 (  68   ~;   2   |;  36   &;4199   @)
%                                         (   0 <=>; 419  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   28 (   9 avg)
%            Number of types       :    3 (   2 usr)
%            Number of type conns  :  330 ( 330   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :   57 (  56 usr;   3 con; 0-6 aty)
%            Number of variables   : 1138 (  56   ^;1005   !;  26   ?;1138   :)
%                                         (  51  !>;   0  ?*;   0  @-;   0  @+)
% SPC      : TH1_THM_EQU_NAR

% Comments : This file was generated by Sledgehammer 2021-02-23 16:17:29.974
%------------------------------------------------------------------------------
% Could-be-implicit typings (5)
thf(ty_t_Product__Type_Oprod,type,
    product_prod: $tType > $tType > $tType ).

thf(ty_t_List_Olist,type,
    list: $tType > $tType ).

thf(ty_tf_capacity,type,
    capacity: $tType ).

thf(ty_t_Set_Oset,type,
    set: $tType > $tType ).

thf(ty_t_Nat_Onat,type,
    nat: $tType ).

% Explicit typings (53)
thf(sy_cl_Lattices_Obounded__lattice,type,
    bounded_lattice: 
      !>[A: $tType] : $o ).

thf(sy_cl_HOL_Otype,type,
    type: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Obot,type,
    bot: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Oord,type,
    ord: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Oorder,type,
    order: 
      !>[A: $tType] : $o ).

thf(sy_cl_Lattices_Olattice,type,
    lattice: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Olinorder,type,
    linorder: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Opreorder,type,
    preorder: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Oorder__bot,type,
    order_bot: 
      !>[A: $tType] : $o ).

thf(sy_cl_Rings_Olinordered__idom,type,
    linordered_idom: 
      !>[A: $tType] : $o ).

thf(sy_cl_Lattices_Osemilattice__inf,type,
    semilattice_inf: 
      !>[A: $tType] : $o ).

thf(sy_cl_Lattices_Obounded__lattice__bot,type,
    bounded_lattice_bot: 
      !>[A: $tType] : $o ).

thf(sy_c_Augmenting__Flow_ONFlow_Oaugment,type,
    augmenting_augment: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( ( product_prod @ nat @ nat ) > Capacity ) > ( ( product_prod @ nat @ nat ) > Capacity ) > ( product_prod @ nat @ nat ) > Capacity ) ).

thf(sy_c_Augmenting__Path_ONPreflow_OaugmentingFlow,type,
    augmen1604248148ngFlow: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( ( product_prod @ nat @ nat ) > Capacity ) > ( list @ ( product_prod @ nat @ nat ) ) > ( product_prod @ nat @ nat ) > Capacity ) ).

thf(sy_c_Augmenting__Path_ONPreflow_OisAugmentingPath,type,
    augmen2028041557ngPath: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > ( ( product_prod @ nat @ nat ) > Capacity ) > ( list @ ( product_prod @ nat @ nat ) ) > $o ) ).

thf(sy_c_Augmenting__Path_ONPreflow_OresCap,type,
    augmenting_resCap: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( ( product_prod @ nat @ nat ) > Capacity ) > ( list @ ( product_prod @ nat @ nat ) ) > Capacity ) ).

thf(sy_c_Graph_OFinite__Graph,type,
    finite_Graph: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > $o ) ).

thf(sy_c_Graph_OGraph_OisShortestPath,type,
    isShortestPath: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( list @ ( product_prod @ nat @ nat ) ) > nat > $o ) ).

thf(sy_c_Graph_OGraph_OisSimplePath,type,
    isSimplePath: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( list @ ( product_prod @ nat @ nat ) ) > nat > $o ) ).

thf(sy_c_Groups_Oplus__class_Oplus,type,
    plus_plus: 
      !>[A: $tType] : ( A > A > A ) ).

thf(sy_c_Groups_Ozero__class_Ozero,type,
    zero_zero: 
      !>[A: $tType] : A ).

thf(sy_c_Lattices_Oinf__class_Oinf,type,
    inf_inf: 
      !>[A: $tType] : ( A > A > A ) ).

thf(sy_c_List_Olist_Oset,type,
    set2: 
      !>[A: $tType] : ( ( list @ A ) > ( set @ A ) ) ).

thf(sy_c_Network_OFinite__Preflow,type,
    finite_Preflow: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > ( ( product_prod @ nat @ nat ) > Capacity ) > $o ) ).

thf(sy_c_Network_OFlow,type,
    flow: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > ( ( product_prod @ nat @ nat ) > Capacity ) > $o ) ).

thf(sy_c_Network_OFlow_Oval,type,
    val: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( ( product_prod @ nat @ nat ) > Capacity ) > Capacity ) ).

thf(sy_c_Network_ONCut,type,
    nCut: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > ( set @ nat ) > $o ) ).

thf(sy_c_Network_ONCut_Ocap,type,
    cap: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( set @ nat ) > Capacity ) ).

thf(sy_c_Network_ONFlow,type,
    nFlow: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > ( ( product_prod @ nat @ nat ) > Capacity ) > $o ) ).

thf(sy_c_Network_ONPreflow,type,
    nPreflow: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > ( ( product_prod @ nat @ nat ) > Capacity ) > $o ) ).

thf(sy_c_Network_ONetwork,type,
    network: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > $o ) ).

thf(sy_c_Network_ONetwork_Oexcess,type,
    excess: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( ( product_prod @ nat @ nat ) > Capacity ) > nat > Capacity ) ).

thf(sy_c_Network_ONetwork_OisMaxFlow,type,
    isMaxFlow: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > ( ( product_prod @ nat @ nat ) > Capacity ) > $o ) ).

thf(sy_c_Network_ONetwork_Ois__max__flow__val,type,
    is_max_flow_val: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > Capacity > $o ) ).

thf(sy_c_Network_OPreflow,type,
    preflow: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > ( ( product_prod @ nat @ nat ) > Capacity ) > $o ) ).

thf(sy_c_Network_OisMinCut,type,
    isMinCut: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > nat > nat > ( set @ nat ) > $o ) ).

thf(sy_c_Orderings_Obot__class_Obot,type,
    bot_bot: 
      !>[A: $tType] : A ).

thf(sy_c_Orderings_Oord__class_Oless,type,
    ord_less: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Orderings_Oord__class_Oless__eq,type,
    ord_less_eq: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Product__Type_OPair,type,
    product_Pair: 
      !>[A: $tType,B: $tType] : ( A > B > ( product_prod @ A @ B ) ) ).

thf(sy_c_Product__Type_Oprod_Oswap,type,
    product_swap: 
      !>[A: $tType,B: $tType] : ( ( product_prod @ A @ B ) > ( product_prod @ B @ A ) ) ).

thf(sy_c_Relation_Oconverse,type,
    converse: 
      !>[A: $tType,B: $tType] : ( ( set @ ( product_prod @ A @ B ) ) > ( set @ ( product_prod @ B @ A ) ) ) ).

thf(sy_c_Residual__Graph_ONetwork_Oflow__of__cf,type,
    residual_flow_of_cf: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( ( product_prod @ nat @ nat ) > Capacity ) > ( product_prod @ nat @ nat ) > Capacity ) ).

thf(sy_c_Residual__Graph_ORGraph,type,
    residual_RGraph: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > nat > nat > ( ( product_prod @ nat @ nat ) > A ) > $o ) ).

thf(sy_c_Residual__Graph_ORPreGraph,type,
    residual_RPreGraph: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > nat > nat > ( ( product_prod @ nat @ nat ) > A ) > $o ) ).

thf(sy_c_Residual__Graph_OresidualGraph,type,
    residu1993642540lGraph: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > ( ( product_prod @ nat @ nat ) > A ) > ( product_prod @ nat @ nat ) > A ) ).

thf(sy_c_Set_OCollect,type,
    collect: 
      !>[A: $tType] : ( ( A > $o ) > ( set @ A ) ) ).

thf(sy_c_member,type,
    member: 
      !>[A: $tType] : ( A > ( set @ A ) > $o ) ).

thf(sy_v_c,type,
    c: ( product_prod @ nat @ nat ) > capacity ).

thf(sy_v_f,type,
    f: ( product_prod @ nat @ nat ) > capacity ).

thf(sy_v_p,type,
    p: list @ ( product_prod @ nat @ nat ) ).

thf(sy_v_s,type,
    s: nat ).

thf(sy_v_t,type,
    t: nat ).

% Relevant facts (256)
thf(fact_0_t__not__s,axiom,
    t != s ).

% t_not_s
thf(fact_1_cf_OisSPath__nt__parallel__pf,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( isSimplePath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ S @ P @ T )
     => ( ( inf_inf @ ( set @ ( product_prod @ nat @ nat ) ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) @ ( converse @ nat @ nat @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) )
        = ( bot_bot @ ( set @ ( product_prod @ nat @ nat ) ) ) ) ) ).

% cf.isSPath_nt_parallel_pf
thf(fact_2_isSPath__nt__parallel__pf,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( isSimplePath @ capacity @ c @ S @ P @ T )
     => ( ( inf_inf @ ( set @ ( product_prod @ nat @ nat ) ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) @ ( converse @ nat @ nat @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) )
        = ( bot_bot @ ( set @ ( product_prod @ nat @ nat ) ) ) ) ) ).

% isSPath_nt_parallel_pf
thf(fact_3_NFlow__axioms,axiom,
    nFlow @ capacity @ c @ s @ t @ f ).

% NFlow_axioms
thf(fact_4_max__flow__val__unique,axiom,
    ! [Fv1: capacity,Fv2: capacity] :
      ( ( is_max_flow_val @ capacity @ c @ s @ t @ Fv1 )
     => ( ( is_max_flow_val @ capacity @ c @ s @ t @ Fv2 )
       => ( Fv1 = Fv2 ) ) ) ).

% max_flow_val_unique
thf(fact_5_isAugmentingPath__def,axiom,
    ! [P: list @ ( product_prod @ nat @ nat )] :
      ( ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ P )
      = ( isSimplePath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ s @ P @ t ) ) ).

% isAugmentingPath_def
thf(fact_6_Finite__Preflow__axioms,axiom,
    finite_Preflow @ capacity @ c @ s @ t @ f ).

% Finite_Preflow_axioms
thf(fact_7_fofu__I__II,axiom,
    ( ( isMaxFlow @ capacity @ c @ s @ t @ f )
   => ~ ? [X_1: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ X_1 ) ) ).

% fofu_I_II
thf(fact_8_noAugPath__iff__maxFlow,axiom,
    ( ( ~ ? [X: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ X ) )
    = ( isMaxFlow @ capacity @ c @ s @ t @ f ) ) ).

% noAugPath_iff_maxFlow
thf(fact_9_Preflow__axioms,axiom,
    preflow @ capacity @ c @ s @ t @ f ).

% Preflow_axioms
thf(fact_10_is__RGraph,axiom,
    residual_RGraph @ capacity @ c @ s @ t @ ( residu1993642540lGraph @ capacity @ c @ f ) ).

% is_RGraph
thf(fact_11_Flow__axioms,axiom,
    flow @ capacity @ c @ s @ t @ f ).

% Flow_axioms
thf(fact_12_NPreflow__axioms,axiom,
    nPreflow @ capacity @ c @ s @ t @ f ).

% NPreflow_axioms
thf(fact_13_converse__empty,axiom,
    ! [B: $tType,A: $tType] :
      ( ( converse @ B @ A @ ( bot_bot @ ( set @ ( product_prod @ B @ A ) ) ) )
      = ( bot_bot @ ( set @ ( product_prod @ A @ B ) ) ) ) ).

% converse_empty
thf(fact_14_inf__bot__left,axiom,
    ! [A: $tType] :
      ( ( bounded_lattice_bot @ A )
     => ! [X2: A] :
          ( ( inf_inf @ A @ ( bot_bot @ A ) @ X2 )
          = ( bot_bot @ A ) ) ) ).

% inf_bot_left
thf(fact_15_inf__bot__right,axiom,
    ! [A: $tType] :
      ( ( bounded_lattice_bot @ A )
     => ! [X2: A] :
          ( ( inf_inf @ A @ X2 @ ( bot_bot @ A ) )
          = ( bot_bot @ A ) ) ) ).

% inf_bot_right
thf(fact_16_is__RPreGraph,axiom,
    residual_RPreGraph @ capacity @ c @ s @ t @ ( residu1993642540lGraph @ capacity @ c @ f ) ).

% is_RPreGraph
thf(fact_17_Network__axioms,axiom,
    network @ capacity @ c @ s @ t ).

% Network_axioms
thf(fact_18_fo__rg__inv,axiom,
    ( ( residual_flow_of_cf @ capacity @ c @ ( residu1993642540lGraph @ capacity @ c @ f ) )
    = f ) ).

% fo_rg_inv
thf(fact_19_inf__right__idem,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,Y: A] :
          ( ( inf_inf @ A @ ( inf_inf @ A @ X2 @ Y ) @ Y )
          = ( inf_inf @ A @ X2 @ Y ) ) ) ).

% inf_right_idem
thf(fact_20_inf_Oright__idem,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A] :
          ( ( inf_inf @ A @ ( inf_inf @ A @ A2 @ B2 ) @ B2 )
          = ( inf_inf @ A @ A2 @ B2 ) ) ) ).

% inf.right_idem
thf(fact_21_inf__left__idem,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,Y: A] :
          ( ( inf_inf @ A @ X2 @ ( inf_inf @ A @ X2 @ Y ) )
          = ( inf_inf @ A @ X2 @ Y ) ) ) ).

% inf_left_idem
thf(fact_22_inf_Oleft__idem,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A] :
          ( ( inf_inf @ A @ A2 @ ( inf_inf @ A @ A2 @ B2 ) )
          = ( inf_inf @ A @ A2 @ B2 ) ) ) ).

% inf.left_idem
thf(fact_23_inf__idem,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A] :
          ( ( inf_inf @ A @ X2 @ X2 )
          = X2 ) ) ).

% inf_idem
thf(fact_24_inf_Oidem,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A] :
          ( ( inf_inf @ A @ A2 @ A2 )
          = A2 ) ) ).

% inf.idem
thf(fact_25_inf__apply,axiom,
    ! [B: $tType,A: $tType] :
      ( ( semilattice_inf @ B )
     => ( ( inf_inf @ ( A > B ) )
        = ( ^ [F: A > B,G: A > B,X3: A] : ( inf_inf @ B @ ( F @ X3 ) @ ( G @ X3 ) ) ) ) ) ).

% inf_apply
thf(fact_26_converse__converse,axiom,
    ! [B: $tType,A: $tType,R: set @ ( product_prod @ A @ B )] :
      ( ( converse @ B @ A @ ( converse @ A @ B @ R ) )
      = R ) ).

% converse_converse
thf(fact_27_converse__inject,axiom,
    ! [A: $tType,B: $tType,R: set @ ( product_prod @ B @ A ),S: set @ ( product_prod @ B @ A )] :
      ( ( ( converse @ B @ A @ R )
        = ( converse @ B @ A @ S ) )
      = ( R = S ) ) ).

% converse_inject
thf(fact_28_augFlow__resFlow,axiom,
    ! [P: list @ ( product_prod @ nat @ nat )] :
      ( ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ P )
     => ( flow @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ s @ t @ ( augmen1604248148ngFlow @ capacity @ c @ f @ P ) ) ) ).

% augFlow_resFlow
thf(fact_29_bot__empty__eq,axiom,
    ! [A: $tType] :
      ( ( bot_bot @ ( A > $o ) )
      = ( ^ [X3: A] : ( member @ A @ X3 @ ( bot_bot @ ( set @ A ) ) ) ) ) ).

% bot_empty_eq
thf(fact_30_inf__left__commute,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,Y: A,Z: A] :
          ( ( inf_inf @ A @ X2 @ ( inf_inf @ A @ Y @ Z ) )
          = ( inf_inf @ A @ Y @ ( inf_inf @ A @ X2 @ Z ) ) ) ) ).

% inf_left_commute
thf(fact_31_inf_Oleft__commute,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [B2: A,A2: A,C: A] :
          ( ( inf_inf @ A @ B2 @ ( inf_inf @ A @ A2 @ C ) )
          = ( inf_inf @ A @ A2 @ ( inf_inf @ A @ B2 @ C ) ) ) ) ).

% inf.left_commute
thf(fact_32_inf__commute,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ( ( inf_inf @ A )
        = ( ^ [X3: A,Y2: A] : ( inf_inf @ A @ Y2 @ X3 ) ) ) ) ).

% inf_commute
thf(fact_33_inf_Ocommute,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ( ( inf_inf @ A )
        = ( ^ [A3: A,B3: A] : ( inf_inf @ A @ B3 @ A3 ) ) ) ) ).

% inf.commute
thf(fact_34_inf__assoc,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,Y: A,Z: A] :
          ( ( inf_inf @ A @ ( inf_inf @ A @ X2 @ Y ) @ Z )
          = ( inf_inf @ A @ X2 @ ( inf_inf @ A @ Y @ Z ) ) ) ) ).

% inf_assoc
thf(fact_35_inf_Oassoc,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( inf_inf @ A @ ( inf_inf @ A @ A2 @ B2 ) @ C )
          = ( inf_inf @ A @ A2 @ ( inf_inf @ A @ B2 @ C ) ) ) ) ).

% inf.assoc
thf(fact_36_boolean__algebra__cancel_Oinf2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [B4: A,K: A,B2: A,A2: A] :
          ( ( B4
            = ( inf_inf @ A @ K @ B2 ) )
         => ( ( inf_inf @ A @ A2 @ B4 )
            = ( inf_inf @ A @ K @ ( inf_inf @ A @ A2 @ B2 ) ) ) ) ) ).

% boolean_algebra_cancel.inf2
thf(fact_37_boolean__algebra__cancel_Oinf1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A4: A,K: A,A2: A,B2: A] :
          ( ( A4
            = ( inf_inf @ A @ K @ A2 ) )
         => ( ( inf_inf @ A @ A4 @ B2 )
            = ( inf_inf @ A @ K @ ( inf_inf @ A @ A2 @ B2 ) ) ) ) ) ).

% boolean_algebra_cancel.inf1
thf(fact_38_inf__fun__def,axiom,
    ! [B: $tType,A: $tType] :
      ( ( semilattice_inf @ B )
     => ( ( inf_inf @ ( A > B ) )
        = ( ^ [F: A > B,G: A > B,X3: A] : ( inf_inf @ B @ ( F @ X3 ) @ ( G @ X3 ) ) ) ) ) ).

% inf_fun_def
thf(fact_39_inf__sup__aci_I1_J,axiom,
    ! [A: $tType] :
      ( ( lattice @ A )
     => ( ( inf_inf @ A )
        = ( ^ [X3: A,Y2: A] : ( inf_inf @ A @ Y2 @ X3 ) ) ) ) ).

% inf_sup_aci(1)
thf(fact_40_inf__sup__aci_I2_J,axiom,
    ! [A: $tType] :
      ( ( lattice @ A )
     => ! [X2: A,Y: A,Z: A] :
          ( ( inf_inf @ A @ ( inf_inf @ A @ X2 @ Y ) @ Z )
          = ( inf_inf @ A @ X2 @ ( inf_inf @ A @ Y @ Z ) ) ) ) ).

% inf_sup_aci(2)
thf(fact_41_inf__sup__aci_I3_J,axiom,
    ! [A: $tType] :
      ( ( lattice @ A )
     => ! [X2: A,Y: A,Z: A] :
          ( ( inf_inf @ A @ X2 @ ( inf_inf @ A @ Y @ Z ) )
          = ( inf_inf @ A @ Y @ ( inf_inf @ A @ X2 @ Z ) ) ) ) ).

% inf_sup_aci(3)
thf(fact_42_inf__sup__aci_I4_J,axiom,
    ! [A: $tType] :
      ( ( lattice @ A )
     => ! [X2: A,Y: A] :
          ( ( inf_inf @ A @ X2 @ ( inf_inf @ A @ X2 @ Y ) )
          = ( inf_inf @ A @ X2 @ Y ) ) ) ).

% inf_sup_aci(4)
thf(fact_43_converse__Int,axiom,
    ! [A: $tType,B: $tType,R: set @ ( product_prod @ B @ A ),S: set @ ( product_prod @ B @ A )] :
      ( ( converse @ B @ A @ ( inf_inf @ ( set @ ( product_prod @ B @ A ) ) @ R @ S ) )
      = ( inf_inf @ ( set @ ( product_prod @ A @ B ) ) @ ( converse @ B @ A @ R ) @ ( converse @ B @ A @ S ) ) ) ).

% converse_Int
thf(fact_44_augment__flow__presv,axiom,
    ! [F2: ( product_prod @ nat @ nat ) > capacity] :
      ( ( flow @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ s @ t @ F2 )
     => ( flow @ capacity @ c @ s @ t @ ( augmenting_augment @ capacity @ c @ f @ F2 ) ) ) ).

% augment_flow_presv
thf(fact_45_mem__Collect__eq,axiom,
    ! [A: $tType,A2: A,P2: A > $o] :
      ( ( member @ A @ A2 @ ( collect @ A @ P2 ) )
      = ( P2 @ A2 ) ) ).

% mem_Collect_eq
thf(fact_46_Collect__mem__eq,axiom,
    ! [A: $tType,A4: set @ A] :
      ( ( collect @ A
        @ ^ [X3: A] : ( member @ A @ X3 @ A4 ) )
      = A4 ) ).

% Collect_mem_eq
thf(fact_47_Collect__cong,axiom,
    ! [A: $tType,P2: A > $o,Q: A > $o] :
      ( ! [X4: A] :
          ( ( P2 @ X4 )
          = ( Q @ X4 ) )
     => ( ( collect @ A @ P2 )
        = ( collect @ A @ Q ) ) ) ).

% Collect_cong
thf(fact_48_ext,axiom,
    ! [B: $tType,A: $tType,F3: A > B,G2: A > B] :
      ( ! [X4: A] :
          ( ( F3 @ X4 )
          = ( G2 @ X4 ) )
     => ( F3 = G2 ) ) ).

% ext
thf(fact_49_cf_OisSPath__nt__parallel,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T: nat,E: product_prod @ nat @ nat] :
      ( ( isSimplePath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ S @ P @ T )
     => ( ( member @ ( product_prod @ nat @ nat ) @ E @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_swap @ nat @ nat @ E ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ).

% cf.isSPath_nt_parallel
thf(fact_50_is__max__flow__val__def,axiom,
    ! [Fv: capacity] :
      ( ( is_max_flow_val @ capacity @ c @ s @ t @ Fv )
      = ( ? [F: ( product_prod @ nat @ nat ) > capacity] :
            ( ( isMaxFlow @ capacity @ c @ s @ t @ F )
            & ( Fv
              = ( val @ capacity @ c @ s @ F ) ) ) ) ) ).

% is_max_flow_val_def
thf(fact_51_cf_OFinite__Graph__axioms,axiom,
    finite_Graph @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) ).

% cf.Finite_Graph_axioms
thf(fact_52_ford__fulkerson_I1_J,axiom,
    ( ( isMaxFlow @ capacity @ c @ s @ t @ f )
    = ( ~ ? [X: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ X ) ) ) ).

% ford_fulkerson(1)
thf(fact_53_shortest__is__augmenting,axiom,
    ! [P: list @ ( product_prod @ nat @ nat )] :
      ( ( isShortestPath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ s @ P @ t )
     => ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ P ) ) ).

% shortest_is_augmenting
thf(fact_54_augmenting__path__imp__shortest,axiom,
    ! [P: list @ ( product_prod @ nat @ nat )] :
      ( ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ P )
     => ? [P3: list @ ( product_prod @ nat @ nat )] : ( isShortestPath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ s @ P3 @ t ) ) ).

% augmenting_path_imp_shortest
thf(fact_55_Graph_OisSPath__nt__parallel__pf,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T: nat] :
          ( ( isSimplePath @ Capacity @ C @ S @ P @ T )
         => ( ( inf_inf @ ( set @ ( product_prod @ nat @ nat ) ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) @ ( converse @ nat @ nat @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) )
            = ( bot_bot @ ( set @ ( product_prod @ nat @ nat ) ) ) ) ) ) ).

% Graph.isSPath_nt_parallel_pf
thf(fact_56_RPreGraph_Omaxflow__imp__rgraph,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RPreGraph @ A @ C @ S @ T @ Cf )
         => ( ( isMaxFlow @ A @ C @ S @ T @ ( residual_flow_of_cf @ A @ C @ Cf ) )
           => ( residual_RGraph @ A @ C @ S @ T @ Cf ) ) ) ) ).

% RPreGraph.maxflow_imp_rgraph
thf(fact_57_isSPath__nt__parallel,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T: nat,E: product_prod @ nat @ nat] :
      ( ( isSimplePath @ capacity @ c @ S @ P @ T )
     => ( ( member @ ( product_prod @ nat @ nat ) @ E @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_swap @ nat @ nat @ E ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ).

% isSPath_nt_parallel
thf(fact_58_Finite__Graph__axioms,axiom,
    finite_Graph @ capacity @ c ).

% Finite_Graph_axioms
thf(fact_59_shortestPath__is__simple,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( isShortestPath @ capacity @ c @ S @ P @ T )
     => ( isSimplePath @ capacity @ c @ S @ P @ T ) ) ).

% shortestPath_is_simple
thf(fact_60_cf_OshortestPath__is__simple,axiom,
    ! [S: nat,P: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( isShortestPath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ S @ P @ T )
     => ( isSimplePath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ S @ P @ T ) ) ).

% cf.shortestPath_is_simple
thf(fact_61_Graph_OisShortestPath_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isShortestPath @ Capacity )
        = ( isShortestPath @ Capacity ) ) ) ).

% Graph.isShortestPath.cong
thf(fact_62_Graph_OshortestPath__is__simple,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T: nat] :
          ( ( isShortestPath @ Capacity @ C @ S @ P @ T )
         => ( isSimplePath @ Capacity @ C @ S @ P @ T ) ) ) ).

% Graph.shortestPath_is_simple
thf(fact_63_Graph_OisSPath__nt__parallel,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P: list @ ( product_prod @ nat @ nat ),T: nat,E: product_prod @ nat @ nat] :
          ( ( isSimplePath @ Capacity @ C @ S @ P @ T )
         => ( ( member @ ( product_prod @ nat @ nat ) @ E @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_swap @ nat @ nat @ E ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% Graph.isSPath_nt_parallel
thf(fact_64_Graph_OisSimplePath_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isSimplePath @ Capacity )
        = ( isSimplePath @ Capacity ) ) ) ).

% Graph.isSimplePath.cong
thf(fact_65_RPreGraph_Othis__loc__rpg,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RPreGraph @ A @ C @ S @ T @ Cf )
         => ( residual_RPreGraph @ A @ C @ S @ T @ Cf ) ) ) ).

% RPreGraph.this_loc_rpg
thf(fact_66_NFlow_Oshortest__is__augmenting,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,P: list @ ( product_prod @ nat @ nat )] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ( isShortestPath @ Capacity @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) @ S @ P @ T )
           => ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ P ) ) ) ) ).

% NFlow.shortest_is_augmenting
thf(fact_67_NFlow_Oaugmenting__path__imp__shortest,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,P: list @ ( product_prod @ nat @ nat )] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ P )
           => ? [P3: list @ ( product_prod @ nat @ nat )] : ( isShortestPath @ Capacity @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) @ S @ P3 @ T ) ) ) ) ).

% NFlow.augmenting_path_imp_shortest
thf(fact_68_RGraph_Othis__loc,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RGraph @ A @ C @ S @ T @ Cf )
         => ( residual_RGraph @ A @ C @ S @ T @ Cf ) ) ) ).

% RGraph.this_loc
thf(fact_69_Network_Oflow__of__cf_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( residual_flow_of_cf @ Capacity )
        = ( residual_flow_of_cf @ Capacity ) ) ) ).

% Network.flow_of_cf.cong
thf(fact_70_RPreGraph_Oaxioms_I1_J,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RPreGraph @ A @ C @ S @ T @ Cf )
         => ( network @ A @ C @ S @ T ) ) ) ).

% RPreGraph.axioms(1)
thf(fact_71_RGraph_Oaxioms_I1_J,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RGraph @ A @ C @ S @ T @ Cf )
         => ( network @ A @ C @ S @ T ) ) ) ).

% RGraph.axioms(1)
thf(fact_72_RGraph_Othis__loc__rpg,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RGraph @ A @ C @ S @ T @ Cf )
         => ( residual_RPreGraph @ A @ C @ S @ T @ Cf ) ) ) ).

% RGraph.this_loc_rpg
thf(fact_73_NPreflow_Ois__RPreGraph,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nPreflow @ Capacity @ C @ S @ T @ F3 )
         => ( residual_RPreGraph @ Capacity @ C @ S @ T @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) ) ) ) ).

% NPreflow.is_RPreGraph
thf(fact_74_RPreGraph_OEX__RPG,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RPreGraph @ A @ C @ S @ T @ Cf )
         => ? [F4: ( product_prod @ nat @ nat ) > A] :
              ( ( nPreflow @ A @ C @ S @ T @ F4 )
              & ( Cf
                = ( residu1993642540lGraph @ A @ C @ F4 ) ) ) ) ) ).

% RPreGraph.EX_RPG
thf(fact_75_NFlow_Ois__RGraph,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( residual_RGraph @ Capacity @ C @ S @ T @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) ) ) ) ).

% NFlow.is_RGraph
thf(fact_76_RGraph_OEX__RG,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RGraph @ A @ C @ S @ T @ Cf )
         => ? [F4: ( product_prod @ nat @ nat ) > A] :
              ( ( nFlow @ A @ C @ S @ T @ F4 )
              & ( Cf
                = ( residu1993642540lGraph @ A @ C @ F4 ) ) ) ) ) ).

% RGraph.EX_RG
thf(fact_77_NPreflow_Ofo__rg__inv,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nPreflow @ Capacity @ C @ S @ T @ F3 )
         => ( ( residual_flow_of_cf @ Capacity @ C @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) )
            = F3 ) ) ) ).

% NPreflow.fo_rg_inv
thf(fact_78_RPreGraph_Org__fo__inv,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RPreGraph @ A @ C @ S @ T @ Cf )
         => ( ( residu1993642540lGraph @ A @ C @ ( residual_flow_of_cf @ A @ C @ Cf ) )
            = Cf ) ) ) ).

% RPreGraph.rg_fo_inv
thf(fact_79_RPreGraph_Ois__NPreflow,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RPreGraph @ A @ C @ S @ T @ Cf )
         => ( nPreflow @ A @ C @ S @ T @ ( residual_flow_of_cf @ A @ C @ Cf ) ) ) ) ).

% RPreGraph.is_NPreflow
thf(fact_80_RGraph_Ois__NFlow,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A] :
          ( ( residual_RGraph @ A @ C @ S @ T @ Cf )
         => ( nFlow @ A @ C @ S @ T @ ( residual_flow_of_cf @ A @ C @ Cf ) ) ) ) ).

% RGraph.is_NFlow
thf(fact_81_augFlow__val,axiom,
    ! [P: list @ ( product_prod @ nat @ nat )] :
      ( ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ P )
     => ( ( val @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ s @ ( augmen1604248148ngFlow @ capacity @ c @ f @ P ) )
        = ( augmenting_resCap @ capacity @ c @ f @ P ) ) ) ).

% augFlow_val
thf(fact_82_augment__flow__value,axiom,
    ! [F2: ( product_prod @ nat @ nat ) > capacity] :
      ( ( flow @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ s @ t @ F2 )
     => ( ( val @ capacity @ c @ s @ ( augmenting_augment @ capacity @ c @ f @ F2 ) )
        = ( plus_plus @ capacity @ ( val @ capacity @ c @ s @ f ) @ ( val @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ s @ F2 ) ) ) ) ).

% augment_flow_value
thf(fact_83_isMaxFlow__alt,axiom,
    ! [F3: ( product_prod @ nat @ nat ) > capacity] :
      ( ( isMaxFlow @ capacity @ c @ s @ t @ F3 )
      = ( ( nFlow @ capacity @ c @ s @ t @ F3 )
        & ! [F5: ( product_prod @ nat @ nat ) > capacity] :
            ( ( nFlow @ capacity @ c @ s @ t @ F5 )
           => ( ord_less_eq @ capacity @ ( val @ capacity @ c @ s @ F5 ) @ ( val @ capacity @ c @ s @ F3 ) ) ) ) ) ).

% isMaxFlow_alt
thf(fact_84_isMaxFlow__def,axiom,
    ! [F3: ( product_prod @ nat @ nat ) > capacity] :
      ( ( isMaxFlow @ capacity @ c @ s @ t @ F3 )
      = ( ( flow @ capacity @ c @ s @ t @ F3 )
        & ! [F5: ( product_prod @ nat @ nat ) > capacity] :
            ( ( flow @ capacity @ c @ s @ t @ F5 )
           => ( ord_less_eq @ capacity @ ( val @ capacity @ c @ s @ F5 ) @ ( val @ capacity @ c @ s @ F3 ) ) ) ) ) ).

% isMaxFlow_def
thf(fact_85_NPreflow_OaugFlow__resFlow,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,P: list @ ( product_prod @ nat @ nat )] :
          ( ( nPreflow @ Capacity @ C @ S @ T @ F3 )
         => ( ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ P )
           => ( flow @ Capacity @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) @ S @ T @ ( augmen1604248148ngFlow @ Capacity @ C @ F3 @ P ) ) ) ) ) ).

% NPreflow.augFlow_resFlow
thf(fact_86_bot__apply,axiom,
    ! [C2: $tType,D: $tType] :
      ( ( bot @ C2 )
     => ( ( bot_bot @ ( D > C2 ) )
        = ( ^ [X3: D] : ( bot_bot @ C2 ) ) ) ) ).

% bot_apply
thf(fact_87_maxFlow__minCut,axiom,
    ! [F3: ( product_prod @ nat @ nat ) > capacity,K: set @ nat] :
      ( ( isMaxFlow @ capacity @ c @ s @ t @ F3 )
     => ( ( isMinCut @ capacity @ c @ s @ t @ K )
       => ( ( val @ capacity @ c @ s @ F3 )
          = ( cap @ capacity @ c @ K ) ) ) ) ).

% maxFlow_minCut
thf(fact_88_order__refl,axiom,
    ! [A: $tType] :
      ( ( preorder @ A )
     => ! [X2: A] : ( ord_less_eq @ A @ X2 @ X2 ) ) ).

% order_refl
thf(fact_89_inf_Obounded__iff,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less_eq @ A @ A2 @ ( inf_inf @ A @ B2 @ C ) )
          = ( ( ord_less_eq @ A @ A2 @ B2 )
            & ( ord_less_eq @ A @ A2 @ C ) ) ) ) ).

% inf.bounded_iff
thf(fact_90_le__inf__iff,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,Y: A,Z: A] :
          ( ( ord_less_eq @ A @ X2 @ ( inf_inf @ A @ Y @ Z ) )
          = ( ( ord_less_eq @ A @ X2 @ Y )
            & ( ord_less_eq @ A @ X2 @ Z ) ) ) ) ).

% le_inf_iff
thf(fact_91_bot_Oextremum,axiom,
    ! [A: $tType] :
      ( ( order_bot @ A )
     => ! [A2: A] : ( ord_less_eq @ A @ ( bot_bot @ A ) @ A2 ) ) ).

% bot.extremum
thf(fact_92_bot_Oextremum__unique,axiom,
    ! [A: $tType] :
      ( ( order_bot @ A )
     => ! [A2: A] :
          ( ( ord_less_eq @ A @ A2 @ ( bot_bot @ A ) )
          = ( A2
            = ( bot_bot @ A ) ) ) ) ).

% bot.extremum_unique
thf(fact_93_bot_Oextremum__uniqueI,axiom,
    ! [A: $tType] :
      ( ( order_bot @ A )
     => ! [A2: A] :
          ( ( ord_less_eq @ A @ A2 @ ( bot_bot @ A ) )
         => ( A2
            = ( bot_bot @ A ) ) ) ) ).

% bot.extremum_uniqueI
thf(fact_94_le__funD,axiom,
    ! [B: $tType,A: $tType] :
      ( ( ord @ B )
     => ! [F3: A > B,G2: A > B,X2: A] :
          ( ( ord_less_eq @ ( A > B ) @ F3 @ G2 )
         => ( ord_less_eq @ B @ ( F3 @ X2 ) @ ( G2 @ X2 ) ) ) ) ).

% le_funD
thf(fact_95_le__funE,axiom,
    ! [B: $tType,A: $tType] :
      ( ( ord @ B )
     => ! [F3: A > B,G2: A > B,X2: A] :
          ( ( ord_less_eq @ ( A > B ) @ F3 @ G2 )
         => ( ord_less_eq @ B @ ( F3 @ X2 ) @ ( G2 @ X2 ) ) ) ) ).

% le_funE
thf(fact_96_le__funI,axiom,
    ! [B: $tType,A: $tType] :
      ( ( ord @ B )
     => ! [F3: A > B,G2: A > B] :
          ( ! [X4: A] : ( ord_less_eq @ B @ ( F3 @ X4 ) @ ( G2 @ X4 ) )
         => ( ord_less_eq @ ( A > B ) @ F3 @ G2 ) ) ) ).

% le_funI
thf(fact_97_le__fun__def,axiom,
    ! [B: $tType,A: $tType] :
      ( ( ord @ B )
     => ( ( ord_less_eq @ ( A > B ) )
        = ( ^ [F: A > B,G: A > B] :
            ! [X3: A] : ( ord_less_eq @ B @ ( F @ X3 ) @ ( G @ X3 ) ) ) ) ) ).

% le_fun_def
thf(fact_98_order__subst1,axiom,
    ! [A: $tType,B: $tType] :
      ( ( ( order @ B )
        & ( order @ A ) )
     => ! [A2: A,F3: B > A,B2: B,C: B] :
          ( ( ord_less_eq @ A @ A2 @ ( F3 @ B2 ) )
         => ( ( ord_less_eq @ B @ B2 @ C )
           => ( ! [X4: B,Y3: B] :
                  ( ( ord_less_eq @ B @ X4 @ Y3 )
                 => ( ord_less_eq @ A @ ( F3 @ X4 ) @ ( F3 @ Y3 ) ) )
             => ( ord_less_eq @ A @ A2 @ ( F3 @ C ) ) ) ) ) ) ).

% order_subst1
thf(fact_99_order__subst2,axiom,
    ! [A: $tType,C2: $tType] :
      ( ( ( order @ C2 )
        & ( order @ A ) )
     => ! [A2: A,B2: A,F3: A > C2,C: C2] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ord_less_eq @ C2 @ ( F3 @ B2 ) @ C )
           => ( ! [X4: A,Y3: A] :
                  ( ( ord_less_eq @ A @ X4 @ Y3 )
                 => ( ord_less_eq @ C2 @ ( F3 @ X4 ) @ ( F3 @ Y3 ) ) )
             => ( ord_less_eq @ C2 @ ( F3 @ A2 ) @ C ) ) ) ) ) ).

% order_subst2
thf(fact_100_ord__eq__le__subst,axiom,
    ! [A: $tType,B: $tType] :
      ( ( ( ord @ B )
        & ( ord @ A ) )
     => ! [A2: A,F3: B > A,B2: B,C: B] :
          ( ( A2
            = ( F3 @ B2 ) )
         => ( ( ord_less_eq @ B @ B2 @ C )
           => ( ! [X4: B,Y3: B] :
                  ( ( ord_less_eq @ B @ X4 @ Y3 )
                 => ( ord_less_eq @ A @ ( F3 @ X4 ) @ ( F3 @ Y3 ) ) )
             => ( ord_less_eq @ A @ A2 @ ( F3 @ C ) ) ) ) ) ) ).

% ord_eq_le_subst
thf(fact_101_ord__le__eq__subst,axiom,
    ! [A: $tType,B: $tType] :
      ( ( ( ord @ B )
        & ( ord @ A ) )
     => ! [A2: A,B2: A,F3: A > B,C: B] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ( F3 @ B2 )
              = C )
           => ( ! [X4: A,Y3: A] :
                  ( ( ord_less_eq @ A @ X4 @ Y3 )
                 => ( ord_less_eq @ B @ ( F3 @ X4 ) @ ( F3 @ Y3 ) ) )
             => ( ord_less_eq @ B @ ( F3 @ A2 ) @ C ) ) ) ) ) ).

% ord_le_eq_subst
thf(fact_102_eq__iff,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ( ( ^ [Y4: A,Z2: A] : Y4 = Z2 )
        = ( ^ [X3: A,Y2: A] :
              ( ( ord_less_eq @ A @ X3 @ Y2 )
              & ( ord_less_eq @ A @ Y2 @ X3 ) ) ) ) ) ).

% eq_iff
thf(fact_103_antisym,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [X2: A,Y: A] :
          ( ( ord_less_eq @ A @ X2 @ Y )
         => ( ( ord_less_eq @ A @ Y @ X2 )
           => ( X2 = Y ) ) ) ) ).

% antisym
thf(fact_104_linear,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X2: A,Y: A] :
          ( ( ord_less_eq @ A @ X2 @ Y )
          | ( ord_less_eq @ A @ Y @ X2 ) ) ) ).

% linear
thf(fact_105_eq__refl,axiom,
    ! [A: $tType] :
      ( ( preorder @ A )
     => ! [X2: A,Y: A] :
          ( ( X2 = Y )
         => ( ord_less_eq @ A @ X2 @ Y ) ) ) ).

% eq_refl
thf(fact_106_le__cases,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X2: A,Y: A] :
          ( ~ ( ord_less_eq @ A @ X2 @ Y )
         => ( ord_less_eq @ A @ Y @ X2 ) ) ) ).

% le_cases
thf(fact_107_order_Otrans,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ord_less_eq @ A @ B2 @ C )
           => ( ord_less_eq @ A @ A2 @ C ) ) ) ) ).

% order.trans
thf(fact_108_le__cases3,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X2: A,Y: A,Z: A] :
          ( ( ( ord_less_eq @ A @ X2 @ Y )
           => ~ ( ord_less_eq @ A @ Y @ Z ) )
         => ( ( ( ord_less_eq @ A @ Y @ X2 )
             => ~ ( ord_less_eq @ A @ X2 @ Z ) )
           => ( ( ( ord_less_eq @ A @ X2 @ Z )
               => ~ ( ord_less_eq @ A @ Z @ Y ) )
             => ( ( ( ord_less_eq @ A @ Z @ Y )
                 => ~ ( ord_less_eq @ A @ Y @ X2 ) )
               => ( ( ( ord_less_eq @ A @ Y @ Z )
                   => ~ ( ord_less_eq @ A @ Z @ X2 ) )
                 => ~ ( ( ord_less_eq @ A @ Z @ X2 )
                     => ~ ( ord_less_eq @ A @ X2 @ Y ) ) ) ) ) ) ) ) ).

% le_cases3
thf(fact_109_antisym__conv,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [Y: A,X2: A] :
          ( ( ord_less_eq @ A @ Y @ X2 )
         => ( ( ord_less_eq @ A @ X2 @ Y )
            = ( X2 = Y ) ) ) ) ).

% antisym_conv
thf(fact_110_order__class_Oorder_Oeq__iff,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ( ( ^ [Y4: A,Z2: A] : Y4 = Z2 )
        = ( ^ [A3: A,B3: A] :
              ( ( ord_less_eq @ A @ A3 @ B3 )
              & ( ord_less_eq @ A @ B3 @ A3 ) ) ) ) ) ).

% order_class.order.eq_iff
thf(fact_111_ord__eq__le__trans,axiom,
    ! [A: $tType] :
      ( ( ord @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( A2 = B2 )
         => ( ( ord_less_eq @ A @ B2 @ C )
           => ( ord_less_eq @ A @ A2 @ C ) ) ) ) ).

% ord_eq_le_trans
thf(fact_112_ord__le__eq__trans,axiom,
    ! [A: $tType] :
      ( ( ord @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( B2 = C )
           => ( ord_less_eq @ A @ A2 @ C ) ) ) ) ).

% ord_le_eq_trans
thf(fact_113_order__class_Oorder_Oantisym,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A,B2: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ord_less_eq @ A @ B2 @ A2 )
           => ( A2 = B2 ) ) ) ) ).

% order_class.order.antisym
thf(fact_114_NPreflow_OresCap_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( augmenting_resCap @ Capacity )
        = ( augmenting_resCap @ Capacity ) ) ) ).

% NPreflow.resCap.cong
thf(fact_115_order__trans,axiom,
    ! [A: $tType] :
      ( ( preorder @ A )
     => ! [X2: A,Y: A,Z: A] :
          ( ( ord_less_eq @ A @ X2 @ Y )
         => ( ( ord_less_eq @ A @ Y @ Z )
           => ( ord_less_eq @ A @ X2 @ Z ) ) ) ) ).

% order_trans
thf(fact_116_dual__order_Orefl,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A] : ( ord_less_eq @ A @ A2 @ A2 ) ) ).

% dual_order.refl
thf(fact_117_linorder__wlog,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [P2: A > A > $o,A2: A,B2: A] :
          ( ! [A5: A,B5: A] :
              ( ( ord_less_eq @ A @ A5 @ B5 )
             => ( P2 @ A5 @ B5 ) )
         => ( ! [A5: A,B5: A] :
                ( ( P2 @ B5 @ A5 )
               => ( P2 @ A5 @ B5 ) )
           => ( P2 @ A2 @ B2 ) ) ) ) ).

% linorder_wlog
thf(fact_118_dual__order_Otrans,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [B2: A,A2: A,C: A] :
          ( ( ord_less_eq @ A @ B2 @ A2 )
         => ( ( ord_less_eq @ A @ C @ B2 )
           => ( ord_less_eq @ A @ C @ A2 ) ) ) ) ).

% dual_order.trans
thf(fact_119_dual__order_Oeq__iff,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ( ( ^ [Y4: A,Z2: A] : Y4 = Z2 )
        = ( ^ [A3: A,B3: A] :
              ( ( ord_less_eq @ A @ B3 @ A3 )
              & ( ord_less_eq @ A @ A3 @ B3 ) ) ) ) ) ).

% dual_order.eq_iff
thf(fact_120_dual__order_Oantisym,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [B2: A,A2: A] :
          ( ( ord_less_eq @ A @ B2 @ A2 )
         => ( ( ord_less_eq @ A @ A2 @ B2 )
           => ( A2 = B2 ) ) ) ) ).

% dual_order.antisym
thf(fact_121_inf_OcoboundedI2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [B2: A,C: A,A2: A] :
          ( ( ord_less_eq @ A @ B2 @ C )
         => ( ord_less_eq @ A @ ( inf_inf @ A @ A2 @ B2 ) @ C ) ) ) ).

% inf.coboundedI2
thf(fact_122_inf_OcoboundedI1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,C: A,B2: A] :
          ( ( ord_less_eq @ A @ A2 @ C )
         => ( ord_less_eq @ A @ ( inf_inf @ A @ A2 @ B2 ) @ C ) ) ) ).

% inf.coboundedI1
thf(fact_123_inf_Oabsorb__iff2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ( ( ord_less_eq @ A )
        = ( ^ [B3: A,A3: A] :
              ( ( inf_inf @ A @ A3 @ B3 )
              = B3 ) ) ) ) ).

% inf.absorb_iff2
thf(fact_124_inf_Oabsorb__iff1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ( ( ord_less_eq @ A )
        = ( ^ [A3: A,B3: A] :
              ( ( inf_inf @ A @ A3 @ B3 )
              = A3 ) ) ) ) ).

% inf.absorb_iff1
thf(fact_125_inf_Ocobounded2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A] : ( ord_less_eq @ A @ ( inf_inf @ A @ A2 @ B2 ) @ B2 ) ) ).

% inf.cobounded2
thf(fact_126_inf_Ocobounded1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A] : ( ord_less_eq @ A @ ( inf_inf @ A @ A2 @ B2 ) @ A2 ) ) ).

% inf.cobounded1
thf(fact_127_inf_Oorder__iff,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ( ( ord_less_eq @ A )
        = ( ^ [A3: A,B3: A] :
              ( A3
              = ( inf_inf @ A @ A3 @ B3 ) ) ) ) ) ).

% inf.order_iff
thf(fact_128_inf__greatest,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,Y: A,Z: A] :
          ( ( ord_less_eq @ A @ X2 @ Y )
         => ( ( ord_less_eq @ A @ X2 @ Z )
           => ( ord_less_eq @ A @ X2 @ ( inf_inf @ A @ Y @ Z ) ) ) ) ) ).

% inf_greatest
thf(fact_129_inf_OboundedI,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( ord_less_eq @ A @ A2 @ C )
           => ( ord_less_eq @ A @ A2 @ ( inf_inf @ A @ B2 @ C ) ) ) ) ) ).

% inf.boundedI
thf(fact_130_inf_OboundedE,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less_eq @ A @ A2 @ ( inf_inf @ A @ B2 @ C ) )
         => ~ ( ( ord_less_eq @ A @ A2 @ B2 )
             => ~ ( ord_less_eq @ A @ A2 @ C ) ) ) ) ).

% inf.boundedE
thf(fact_131_inf__absorb2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [Y: A,X2: A] :
          ( ( ord_less_eq @ A @ Y @ X2 )
         => ( ( inf_inf @ A @ X2 @ Y )
            = Y ) ) ) ).

% inf_absorb2
thf(fact_132_inf__absorb1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,Y: A] :
          ( ( ord_less_eq @ A @ X2 @ Y )
         => ( ( inf_inf @ A @ X2 @ Y )
            = X2 ) ) ) ).

% inf_absorb1
thf(fact_133_inf_Oabsorb2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [B2: A,A2: A] :
          ( ( ord_less_eq @ A @ B2 @ A2 )
         => ( ( inf_inf @ A @ A2 @ B2 )
            = B2 ) ) ) ).

% inf.absorb2
thf(fact_134_inf_Oabsorb1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( ( inf_inf @ A @ A2 @ B2 )
            = A2 ) ) ) ).

% inf.absorb1
thf(fact_135_le__iff__inf,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ( ( ord_less_eq @ A )
        = ( ^ [X3: A,Y2: A] :
              ( ( inf_inf @ A @ X3 @ Y2 )
              = X3 ) ) ) ) ).

% le_iff_inf
thf(fact_136_inf__unique,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [F3: A > A > A,X2: A,Y: A] :
          ( ! [X4: A,Y3: A] : ( ord_less_eq @ A @ ( F3 @ X4 @ Y3 ) @ X4 )
         => ( ! [X4: A,Y3: A] : ( ord_less_eq @ A @ ( F3 @ X4 @ Y3 ) @ Y3 )
           => ( ! [X4: A,Y3: A,Z3: A] :
                  ( ( ord_less_eq @ A @ X4 @ Y3 )
                 => ( ( ord_less_eq @ A @ X4 @ Z3 )
                   => ( ord_less_eq @ A @ X4 @ ( F3 @ Y3 @ Z3 ) ) ) )
             => ( ( inf_inf @ A @ X2 @ Y )
                = ( F3 @ X2 @ Y ) ) ) ) ) ) ).

% inf_unique
thf(fact_137_inf_OorderI,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A] :
          ( ( A2
            = ( inf_inf @ A @ A2 @ B2 ) )
         => ( ord_less_eq @ A @ A2 @ B2 ) ) ) ).

% inf.orderI
thf(fact_138_inf_OorderE,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A] :
          ( ( ord_less_eq @ A @ A2 @ B2 )
         => ( A2
            = ( inf_inf @ A @ A2 @ B2 ) ) ) ) ).

% inf.orderE
thf(fact_139_le__infI2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [B2: A,X2: A,A2: A] :
          ( ( ord_less_eq @ A @ B2 @ X2 )
         => ( ord_less_eq @ A @ ( inf_inf @ A @ A2 @ B2 ) @ X2 ) ) ) ).

% le_infI2
thf(fact_140_le__infI1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,X2: A,B2: A] :
          ( ( ord_less_eq @ A @ A2 @ X2 )
         => ( ord_less_eq @ A @ ( inf_inf @ A @ A2 @ B2 ) @ X2 ) ) ) ).

% le_infI1
thf(fact_141_inf__mono,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,C: A,B2: A,D2: A] :
          ( ( ord_less_eq @ A @ A2 @ C )
         => ( ( ord_less_eq @ A @ B2 @ D2 )
           => ( ord_less_eq @ A @ ( inf_inf @ A @ A2 @ B2 ) @ ( inf_inf @ A @ C @ D2 ) ) ) ) ) ).

% inf_mono
thf(fact_142_le__infI,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,A2: A,B2: A] :
          ( ( ord_less_eq @ A @ X2 @ A2 )
         => ( ( ord_less_eq @ A @ X2 @ B2 )
           => ( ord_less_eq @ A @ X2 @ ( inf_inf @ A @ A2 @ B2 ) ) ) ) ) ).

% le_infI
thf(fact_143_le__infE,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,A2: A,B2: A] :
          ( ( ord_less_eq @ A @ X2 @ ( inf_inf @ A @ A2 @ B2 ) )
         => ~ ( ( ord_less_eq @ A @ X2 @ A2 )
             => ~ ( ord_less_eq @ A @ X2 @ B2 ) ) ) ) ).

% le_infE
thf(fact_144_inf__le2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,Y: A] : ( ord_less_eq @ A @ ( inf_inf @ A @ X2 @ Y ) @ Y ) ) ).

% inf_le2
thf(fact_145_inf__le1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [X2: A,Y: A] : ( ord_less_eq @ A @ ( inf_inf @ A @ X2 @ Y ) @ X2 ) ) ).

% inf_le1
thf(fact_146_inf__sup__ord_I1_J,axiom,
    ! [A: $tType] :
      ( ( lattice @ A )
     => ! [X2: A,Y: A] : ( ord_less_eq @ A @ ( inf_inf @ A @ X2 @ Y ) @ X2 ) ) ).

% inf_sup_ord(1)
thf(fact_147_inf__sup__ord_I2_J,axiom,
    ! [A: $tType] :
      ( ( lattice @ A )
     => ! [X2: A,Y: A] : ( ord_less_eq @ A @ ( inf_inf @ A @ X2 @ Y ) @ Y ) ) ).

% inf_sup_ord(2)
thf(fact_148_NPreflow_OisAugmentingPath_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( augmen2028041557ngPath @ Capacity )
        = ( augmen2028041557ngPath @ Capacity ) ) ) ).

% NPreflow.isAugmentingPath.cong
thf(fact_149_NPreflow_OaugmentingFlow_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( augmen1604248148ngFlow @ Capacity )
        = ( augmen1604248148ngFlow @ Capacity ) ) ) ).

% NPreflow.augmentingFlow.cong
thf(fact_150_NPreflow_OaugFlow__val,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,P: list @ ( product_prod @ nat @ nat )] :
          ( ( nPreflow @ Capacity @ C @ S @ T @ F3 )
         => ( ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ P )
           => ( ( val @ Capacity @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) @ S @ ( augmen1604248148ngFlow @ Capacity @ C @ F3 @ P ) )
              = ( augmenting_resCap @ Capacity @ C @ F3 @ P ) ) ) ) ) ).

% NPreflow.augFlow_val
thf(fact_151_bot__fun__def,axiom,
    ! [B: $tType,A: $tType] :
      ( ( bot @ B )
     => ( ( bot_bot @ ( A > B ) )
        = ( ^ [X3: A] : ( bot_bot @ B ) ) ) ) ).

% bot_fun_def
thf(fact_152_NPreflow_OisAugmentingPath__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,P: list @ ( product_prod @ nat @ nat )] :
          ( ( nPreflow @ Capacity @ C @ S @ T @ F3 )
         => ( ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ P )
            = ( isSimplePath @ Capacity @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) @ S @ P @ T ) ) ) ) ).

% NPreflow.isAugmentingPath_def
thf(fact_153_ford__fulkerson_I2_J,axiom,
    ( ( ~ ? [X: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ X ) )
    = ( ? [K2: set @ nat] :
          ( ( nCut @ capacity @ c @ s @ t @ K2 )
          & ( ( val @ capacity @ c @ s @ f )
            = ( cap @ capacity @ c @ K2 ) ) ) ) ) ).

% ford_fulkerson(2)
thf(fact_154_fofu__III__I,axiom,
    ( ? [K3: set @ nat] :
        ( ( nCut @ capacity @ c @ s @ t @ K3 )
        & ( ( val @ capacity @ c @ s @ f )
          = ( cap @ capacity @ c @ K3 ) ) )
   => ( isMaxFlow @ capacity @ c @ s @ t @ f ) ) ).

% fofu_III_I
thf(fact_155_fofu__II__III,axiom,
    ( ~ ? [X_12: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ X_12 )
   => ? [K4: set @ nat] :
        ( ( nCut @ capacity @ c @ s @ t @ K4 )
        & ( ( val @ capacity @ c @ s @ f )
          = ( cap @ capacity @ c @ K4 ) ) ) ) ).

% fofu_II_III
thf(fact_156_NFlow_Oaugment__flow__value,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,F2: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ( flow @ Capacity @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) @ S @ T @ F2 )
           => ( ( val @ Capacity @ C @ S @ ( augmenting_augment @ Capacity @ C @ F3 @ F2 ) )
              = ( plus_plus @ Capacity @ ( val @ Capacity @ C @ S @ F3 ) @ ( val @ Capacity @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) @ S @ F2 ) ) ) ) ) ) ).

% NFlow.augment_flow_value
thf(fact_157_Network_OmaxFlow__minCut,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,K: set @ nat] :
          ( ( network @ Capacity @ C @ S @ T )
         => ( ( isMaxFlow @ Capacity @ C @ S @ T @ F3 )
           => ( ( isMinCut @ Capacity @ C @ S @ T @ K )
             => ( ( val @ Capacity @ C @ S @ F3 )
                = ( cap @ Capacity @ C @ K ) ) ) ) ) ) ).

% Network.maxFlow_minCut
thf(fact_158_Network_OisMaxFlow__alt,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( network @ Capacity @ C @ S @ T )
         => ( ( isMaxFlow @ Capacity @ C @ S @ T @ F3 )
            = ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
              & ! [F5: ( product_prod @ nat @ nat ) > Capacity] :
                  ( ( nFlow @ Capacity @ C @ S @ T @ F5 )
                 => ( ord_less_eq @ Capacity @ ( val @ Capacity @ C @ S @ F5 ) @ ( val @ Capacity @ C @ S @ F3 ) ) ) ) ) ) ) ).

% Network.isMaxFlow_alt
thf(fact_159_converse__mono,axiom,
    ! [A: $tType,B: $tType,R: set @ ( product_prod @ B @ A ),S: set @ ( product_prod @ B @ A )] :
      ( ( ord_less_eq @ ( set @ ( product_prod @ A @ B ) ) @ ( converse @ B @ A @ R ) @ ( converse @ B @ A @ S ) )
      = ( ord_less_eq @ ( set @ ( product_prod @ B @ A ) ) @ R @ S ) ) ).

% converse_mono
thf(fact_160_NCut_Oaxioms_I1_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,K: set @ nat] :
          ( ( nCut @ Capacity @ C @ S @ T @ K )
         => ( network @ Capacity @ C @ S @ T ) ) ) ).

% NCut.axioms(1)
thf(fact_161_NCut_Ot__ni__cut,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,K: set @ nat] :
          ( ( nCut @ Capacity @ C @ S @ T @ K )
         => ~ ( member @ nat @ T @ K ) ) ) ).

% NCut.t_ni_cut
thf(fact_162_NCut_Os__in__cut,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,K: set @ nat] :
          ( ( nCut @ Capacity @ C @ S @ T @ K )
         => ( member @ nat @ S @ K ) ) ) ).

% NCut.s_in_cut
thf(fact_163_converse__subset__swap,axiom,
    ! [A: $tType,B: $tType,R: set @ ( product_prod @ A @ B ),S: set @ ( product_prod @ B @ A )] :
      ( ( ord_less_eq @ ( set @ ( product_prod @ A @ B ) ) @ R @ ( converse @ B @ A @ S ) )
      = ( ord_less_eq @ ( set @ ( product_prod @ B @ A ) ) @ ( converse @ A @ B @ R ) @ S ) ) ).

% converse_subset_swap
thf(fact_164_isMinCut__def,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ( isMinCut @ A )
        = ( ^ [C3: ( product_prod @ nat @ nat ) > A,S2: nat,T2: nat,K2: set @ nat] :
              ( ( nCut @ A @ C3 @ S2 @ T2 @ K2 )
              & ! [K5: set @ nat] :
                  ( ( nCut @ A @ C3 @ S2 @ T2 @ K5 )
                 => ( ord_less_eq @ A @ ( cap @ A @ C3 @ K2 ) @ ( cap @ A @ C3 @ K5 ) ) ) ) ) ) ) ).

% isMinCut_def
thf(fact_165_Network_Ot__not__s,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat] :
          ( ( network @ Capacity @ C @ S @ T )
         => ( T != S ) ) ) ).

% Network.t_not_s
thf(fact_166_Network_Os__not__t,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat] :
          ( ( network @ Capacity @ C @ S @ T )
         => ( S != T ) ) ) ).

% Network.s_not_t
thf(fact_167_Flow_Oval_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( val @ Capacity )
        = ( val @ Capacity ) ) ) ).

% Flow.val.cong
thf(fact_168_Network_OisMaxFlow_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isMaxFlow @ Capacity )
        = ( isMaxFlow @ Capacity ) ) ) ).

% Network.isMaxFlow.cong
thf(fact_169_NFlow_Oaugment_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( augmenting_augment @ Capacity )
        = ( augmenting_augment @ Capacity ) ) ) ).

% NFlow.augment.cong
thf(fact_170_NCut_Ocap_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( cap @ Capacity )
        = ( cap @ Capacity ) ) ) ).

% NCut.cap.cong
thf(fact_171_NFlow_Ofofu__II__III,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ~ ? [X_12: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ X_12 )
           => ? [K4: set @ nat] :
                ( ( nCut @ Capacity @ C @ S @ T @ K4 )
                & ( ( val @ Capacity @ C @ S @ F3 )
                  = ( cap @ Capacity @ C @ K4 ) ) ) ) ) ) ).

% NFlow.fofu_II_III
thf(fact_172_NFlow_Ofofu__III__I,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ? [K3: set @ nat] :
                ( ( nCut @ Capacity @ C @ S @ T @ K3 )
                & ( ( val @ Capacity @ C @ S @ F3 )
                  = ( cap @ Capacity @ C @ K3 ) ) )
           => ( isMaxFlow @ Capacity @ C @ S @ T @ F3 ) ) ) ) ).

% NFlow.fofu_III_I
thf(fact_173_Network_Ois__max__flow__val_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( is_max_flow_val @ Capacity )
        = ( is_max_flow_val @ Capacity ) ) ) ).

% Network.is_max_flow_val.cong
thf(fact_174_NFlow_Oford__fulkerson_I2_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ( ~ ? [X: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ X ) )
            = ( ? [K2: set @ nat] :
                  ( ( nCut @ Capacity @ C @ S @ T @ K2 )
                  & ( ( val @ Capacity @ C @ S @ F3 )
                    = ( cap @ Capacity @ C @ K2 ) ) ) ) ) ) ) ).

% NFlow.ford_fulkerson(2)
thf(fact_175_NPreflow_Oaxioms_I1_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nPreflow @ Capacity @ C @ S @ T @ F3 )
         => ( network @ Capacity @ C @ S @ T ) ) ) ).

% NPreflow.axioms(1)
thf(fact_176_NFlow_Oaxioms_I1_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( nPreflow @ Capacity @ C @ S @ T @ F3 ) ) ) ).

% NFlow.axioms(1)
thf(fact_177_NFlow_Oaxioms_I2_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( flow @ Capacity @ C @ S @ T @ F3 ) ) ) ).

% NFlow.axioms(2)
thf(fact_178_NPreflow_Oaxioms_I2_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nPreflow @ Capacity @ C @ S @ T @ F3 )
         => ( preflow @ Capacity @ C @ S @ T @ F3 ) ) ) ).

% NPreflow.axioms(2)
thf(fact_179_Flow_Oaxioms_I1_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( flow @ Capacity @ C @ S @ T @ F3 )
         => ( preflow @ Capacity @ C @ S @ T @ F3 ) ) ) ).

% Flow.axioms(1)
thf(fact_180_Network_Omax__flow__val__unique,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,Fv1: Capacity,Fv2: Capacity] :
          ( ( network @ Capacity @ C @ S @ T )
         => ( ( is_max_flow_val @ Capacity @ C @ S @ T @ Fv1 )
           => ( ( is_max_flow_val @ Capacity @ C @ S @ T @ Fv2 )
             => ( Fv1 = Fv2 ) ) ) ) ) ).

% Network.max_flow_val_unique
thf(fact_181_Finite__Preflow_Oaxioms_I2_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( finite_Preflow @ Capacity @ C @ S @ T @ F3 )
         => ( finite_Graph @ Capacity @ C ) ) ) ).

% Finite_Preflow.axioms(2)
thf(fact_182_Finite__Preflow_Oaxioms_I1_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( finite_Preflow @ Capacity @ C @ S @ T @ F3 )
         => ( preflow @ Capacity @ C @ S @ T @ F3 ) ) ) ).

% Finite_Preflow.axioms(1)
thf(fact_183_NFlow_Ointro,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nPreflow @ Capacity @ C @ S @ T @ F3 )
         => ( ( flow @ Capacity @ C @ S @ T @ F3 )
           => ( nFlow @ Capacity @ C @ S @ T @ F3 ) ) ) ) ).

% NFlow.intro
thf(fact_184_NFlow__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( nFlow @ Capacity )
        = ( ^ [C3: ( product_prod @ nat @ nat ) > Capacity,S2: nat,T2: nat,F: ( product_prod @ nat @ nat ) > Capacity] :
              ( ( nPreflow @ Capacity @ C3 @ S2 @ T2 @ F )
              & ( flow @ Capacity @ C3 @ S2 @ T2 @ F ) ) ) ) ) ).

% NFlow_def
thf(fact_185_NPreflow_Ointro,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( network @ Capacity @ C @ S @ T )
         => ( ( preflow @ Capacity @ C @ S @ T @ F3 )
           => ( nPreflow @ Capacity @ C @ S @ T @ F3 ) ) ) ) ).

% NPreflow.intro
thf(fact_186_NPreflow__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( nPreflow @ Capacity )
        = ( ^ [C3: ( product_prod @ nat @ nat ) > Capacity,S2: nat,T2: nat,F: ( product_prod @ nat @ nat ) > Capacity] :
              ( ( network @ Capacity @ C3 @ S2 @ T2 )
              & ( preflow @ Capacity @ C3 @ S2 @ T2 @ F ) ) ) ) ) ).

% NPreflow_def
thf(fact_187_NFlow_Ofofu__I__II,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ( isMaxFlow @ Capacity @ C @ S @ T @ F3 )
           => ~ ? [X_1: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ X_1 ) ) ) ) ).

% NFlow.fofu_I_II
thf(fact_188_NFlow_OnoAugPath__iff__maxFlow,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ( ~ ? [X: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ X ) )
            = ( isMaxFlow @ Capacity @ C @ S @ T @ F3 ) ) ) ) ).

% NFlow.noAugPath_iff_maxFlow
thf(fact_189_Finite__Preflow_Ointro,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( preflow @ Capacity @ C @ S @ T @ F3 )
         => ( ( finite_Graph @ Capacity @ C )
           => ( finite_Preflow @ Capacity @ C @ S @ T @ F3 ) ) ) ) ).

% Finite_Preflow.intro
thf(fact_190_Finite__Preflow__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( finite_Preflow @ Capacity )
        = ( ^ [C3: ( product_prod @ nat @ nat ) > Capacity,S2: nat,T2: nat,F: ( product_prod @ nat @ nat ) > Capacity] :
              ( ( preflow @ Capacity @ C3 @ S2 @ T2 @ F )
              & ( finite_Graph @ Capacity @ C3 ) ) ) ) ) ).

% Finite_Preflow_def
thf(fact_191_NFlow_Oaugment__flow__presv,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,F2: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ( flow @ Capacity @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) @ S @ T @ F2 )
           => ( flow @ Capacity @ C @ S @ T @ ( augmenting_augment @ Capacity @ C @ F3 @ F2 ) ) ) ) ) ).

% NFlow.augment_flow_presv
thf(fact_192_NFlow_Oford__fulkerson_I1_J,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ( isMaxFlow @ Capacity @ C @ S @ T @ F3 )
            = ( ~ ? [X: list @ ( product_prod @ nat @ nat )] : ( augmen2028041557ngPath @ Capacity @ C @ S @ T @ F3 @ X ) ) ) ) ) ).

% NFlow.ford_fulkerson(1)
thf(fact_193_Network_Ois__max__flow__val__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,Fv: Capacity] :
          ( ( network @ Capacity @ C @ S @ T )
         => ( ( is_max_flow_val @ Capacity @ C @ S @ T @ Fv )
            = ( ? [F: ( product_prod @ nat @ nat ) > Capacity] :
                  ( ( isMaxFlow @ Capacity @ C @ S @ T @ F )
                  & ( Fv
                    = ( val @ Capacity @ C @ S @ F ) ) ) ) ) ) ) ).

% Network.is_max_flow_val_def
thf(fact_194_Network_OisMaxFlow__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( network @ Capacity @ C @ S @ T )
         => ( ( isMaxFlow @ Capacity @ C @ S @ T @ F3 )
            = ( ( flow @ Capacity @ C @ S @ T @ F3 )
              & ! [F5: ( product_prod @ nat @ nat ) > Capacity] :
                  ( ( flow @ Capacity @ C @ S @ T @ F5 )
                 => ( ord_less_eq @ Capacity @ ( val @ Capacity @ C @ S @ F5 ) @ ( val @ Capacity @ C @ S @ F3 ) ) ) ) ) ) ) ).

% Network.isMaxFlow_def
thf(fact_195_cf_OisSPath__no__selfloop,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat] :
      ( ( isSimplePath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ U @ P @ V )
     => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ U1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ).

% cf.isSPath_no_selfloop
thf(fact_196_cf_OisSPath__sg__incoming,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,U2: nat] :
      ( ( isSimplePath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ U @ P @ V )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( U1 != U2 )
         => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U2 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% cf.isSPath_sg_incoming
thf(fact_197_cf_OisSPath__sg__outgoing,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,V2: nat] :
      ( ( isSimplePath @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ U @ P @ V )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( V1 != V2 )
         => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V2 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% cf.isSPath_sg_outgoing
thf(fact_198_isSPath__sg__outgoing,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,V2: nat] :
      ( ( isSimplePath @ capacity @ c @ U @ P @ V )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( V1 != V2 )
         => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V2 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% isSPath_sg_outgoing
thf(fact_199_isSPath__sg__incoming,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,U2: nat] :
      ( ( isSimplePath @ capacity @ c @ U @ P @ V )
     => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
       => ( ( U1 != U2 )
         => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U2 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ).

% isSPath_sg_incoming
thf(fact_200_isSPath__no__selfloop,axiom,
    ! [U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat] :
      ( ( isSimplePath @ capacity @ c @ U @ P @ V )
     => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ U1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ).

% isSPath_no_selfloop
thf(fact_201_converse__iff,axiom,
    ! [A: $tType,B: $tType,A2: A,B2: B,R: set @ ( product_prod @ B @ A )] :
      ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ A2 @ B2 ) @ ( converse @ B @ A @ R ) )
      = ( member @ ( product_prod @ B @ A ) @ ( product_Pair @ B @ A @ B2 @ A2 ) @ R ) ) ).

% converse_iff
thf(fact_202_subrelI,axiom,
    ! [B: $tType,A: $tType,R: set @ ( product_prod @ A @ B ),S: set @ ( product_prod @ A @ B )] :
      ( ! [X4: A,Y3: B] :
          ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ X4 @ Y3 ) @ R )
         => ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ X4 @ Y3 ) @ S ) )
     => ( ord_less_eq @ ( set @ ( product_prod @ A @ B ) ) @ R @ S ) ) ).

% subrelI
thf(fact_203_converseD,axiom,
    ! [A: $tType,B: $tType,A2: A,B2: B,R: set @ ( product_prod @ B @ A )] :
      ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ A2 @ B2 ) @ ( converse @ B @ A @ R ) )
     => ( member @ ( product_prod @ B @ A ) @ ( product_Pair @ B @ A @ B2 @ A2 ) @ R ) ) ).

% converseD
thf(fact_204_converseE,axiom,
    ! [A: $tType,B: $tType,Yx: product_prod @ A @ B,R: set @ ( product_prod @ B @ A )] :
      ( ( member @ ( product_prod @ A @ B ) @ Yx @ ( converse @ B @ A @ R ) )
     => ~ ! [X4: B,Y3: A] :
            ( ( Yx
              = ( product_Pair @ A @ B @ Y3 @ X4 ) )
           => ~ ( member @ ( product_prod @ B @ A ) @ ( product_Pair @ B @ A @ X4 @ Y3 ) @ R ) ) ) ).

% converseE
thf(fact_205_converse_Ocases,axiom,
    ! [B: $tType,A: $tType,A1: B,A22: A,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ B @ A ) @ ( product_Pair @ B @ A @ A1 @ A22 ) @ ( converse @ A @ B @ R ) )
     => ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ A22 @ A1 ) @ R ) ) ).

% converse.cases
thf(fact_206_converse_Osimps,axiom,
    ! [B: $tType,A: $tType,A1: B,A22: A,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ B @ A ) @ ( product_Pair @ B @ A @ A1 @ A22 ) @ ( converse @ A @ B @ R ) )
      = ( ? [A3: A,B3: B] :
            ( ( A1 = B3 )
            & ( A22 = A3 )
            & ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ A3 @ B3 ) @ R ) ) ) ) ).

% converse.simps
thf(fact_207_converse_Ointros,axiom,
    ! [B: $tType,A: $tType,A2: A,B2: B,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ A2 @ B2 ) @ R )
     => ( member @ ( product_prod @ B @ A ) @ ( product_Pair @ B @ A @ B2 @ A2 ) @ ( converse @ A @ B @ R ) ) ) ).

% converse.intros
thf(fact_208_converse_Oinducts,axiom,
    ! [B: $tType,A: $tType,X1: B,X22: A,R: set @ ( product_prod @ A @ B ),P2: B > A > $o] :
      ( ( member @ ( product_prod @ B @ A ) @ ( product_Pair @ B @ A @ X1 @ X22 ) @ ( converse @ A @ B @ R ) )
     => ( ! [A5: A,B5: B] :
            ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ A5 @ B5 ) @ R )
           => ( P2 @ B5 @ A5 ) )
       => ( P2 @ X1 @ X22 ) ) ) ).

% converse.inducts
thf(fact_209_Graph_OisSPath__sg__outgoing,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,V2: nat] :
          ( ( isSimplePath @ Capacity @ C @ U @ P @ V )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( ( V1 != V2 )
             => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V2 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ) ).

% Graph.isSPath_sg_outgoing
thf(fact_210_Graph_OisSPath__sg__incoming,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat,V1: nat,U2: nat] :
          ( ( isSimplePath @ Capacity @ C @ U @ P @ V )
         => ( ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) )
           => ( ( U1 != U2 )
             => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U2 @ V1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ) ) ).

% Graph.isSPath_sg_incoming
thf(fact_211_Graph_OisSPath__no__selfloop,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P: list @ ( product_prod @ nat @ nat ),V: nat,U1: nat] :
          ( ( isSimplePath @ Capacity @ C @ U @ P @ V )
         => ~ ( member @ ( product_prod @ nat @ nat ) @ ( product_Pair @ nat @ nat @ U1 @ U1 ) @ ( set2 @ ( product_prod @ nat @ nat ) @ P ) ) ) ) ).

% Graph.isSPath_no_selfloop
thf(fact_212_augment__flow__presv__cap,axiom,
    ! [F2: ( product_prod @ nat @ nat ) > capacity,U: nat,V: nat] :
      ( ( flow @ capacity @ ( residu1993642540lGraph @ capacity @ c @ f ) @ s @ t @ F2 )
     => ( ( ord_less_eq @ capacity @ ( zero_zero @ capacity ) @ ( augmenting_augment @ capacity @ c @ f @ F2 @ ( product_Pair @ nat @ nat @ U @ V ) ) )
        & ( ord_less_eq @ capacity @ ( augmenting_augment @ capacity @ c @ f @ F2 @ ( product_Pair @ nat @ nat @ U @ V ) ) @ ( c @ ( product_Pair @ nat @ nat @ U @ V ) ) ) ) ) ).

% augment_flow_presv_cap
thf(fact_213_swap__simp,axiom,
    ! [A: $tType,B: $tType,X2: B,Y: A] :
      ( ( product_swap @ B @ A @ ( product_Pair @ B @ A @ X2 @ Y ) )
      = ( product_Pair @ A @ B @ Y @ X2 ) ) ).

% swap_simp
thf(fact_214_f__non__negative,axiom,
    ! [E: product_prod @ nat @ nat] : ( ord_less_eq @ capacity @ ( zero_zero @ capacity ) @ ( f @ E ) ) ).

% f_non_negative
thf(fact_215_old_Oprod_Oinject,axiom,
    ! [A: $tType,B: $tType,A2: A,B2: B,A6: A,B6: B] :
      ( ( ( product_Pair @ A @ B @ A2 @ B2 )
        = ( product_Pair @ A @ B @ A6 @ B6 ) )
      = ( ( A2 = A6 )
        & ( B2 = B6 ) ) ) ).

% old.prod.inject
thf(fact_216_prod_Oinject,axiom,
    ! [A: $tType,B: $tType,X1: A,X22: B,Y1: A,Y22: B] :
      ( ( ( product_Pair @ A @ B @ X1 @ X22 )
        = ( product_Pair @ A @ B @ Y1 @ Y22 ) )
      = ( ( X1 = Y1 )
        & ( X22 = Y22 ) ) ) ).

% prod.inject
thf(fact_217_cap__non__negative,axiom,
    ! [U3: nat,V3: nat] : ( ord_less_eq @ capacity @ ( zero_zero @ capacity ) @ ( c @ ( product_Pair @ nat @ nat @ U3 @ V3 ) ) ) ).

% cap_non_negative
thf(fact_218_capacity__const,axiom,
    ! [E2: product_prod @ nat @ nat] :
      ( ( ord_less_eq @ capacity @ ( zero_zero @ capacity ) @ ( f @ E2 ) )
      & ( ord_less_eq @ capacity @ ( f @ E2 ) @ ( c @ E2 ) ) ) ).

% capacity_const
thf(fact_219_swap__swap,axiom,
    ! [B: $tType,A: $tType,P: product_prod @ A @ B] :
      ( ( product_swap @ B @ A @ ( product_swap @ A @ B @ P ) )
      = P ) ).

% swap_swap
thf(fact_220_resE__nonNegative,axiom,
    ! [E: product_prod @ nat @ nat] : ( ord_less_eq @ capacity @ ( zero_zero @ capacity ) @ ( residu1993642540lGraph @ capacity @ c @ f @ E ) ) ).

% resE_nonNegative
thf(fact_221_RPreGraph_OresE__nonNegative,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat,Cf: ( product_prod @ nat @ nat ) > A,E: product_prod @ nat @ nat] :
          ( ( residual_RPreGraph @ A @ C @ S @ T @ Cf )
         => ( ord_less_eq @ A @ ( zero_zero @ A ) @ ( Cf @ E ) ) ) ) ).

% RPreGraph.resE_nonNegative
thf(fact_222_Preflow_Ocapacity__const,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( preflow @ Capacity @ C @ S @ T @ F3 )
         => ! [E2: product_prod @ nat @ nat] :
              ( ( ord_less_eq @ Capacity @ ( zero_zero @ Capacity ) @ ( F3 @ E2 ) )
              & ( ord_less_eq @ Capacity @ ( F3 @ E2 ) @ ( C @ E2 ) ) ) ) ) ).

% Preflow.capacity_const
thf(fact_223_Preflow_Of__non__negative,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,E: product_prod @ nat @ nat] :
          ( ( preflow @ Capacity @ C @ S @ T @ F3 )
         => ( ord_less_eq @ Capacity @ ( zero_zero @ Capacity ) @ ( F3 @ E ) ) ) ) ).

% Preflow.f_non_negative
thf(fact_224_old_Oprod_Oinducts,axiom,
    ! [B: $tType,A: $tType,P2: ( product_prod @ A @ B ) > $o,Prod: product_prod @ A @ B] :
      ( ! [A5: A,B5: B] : ( P2 @ ( product_Pair @ A @ B @ A5 @ B5 ) )
     => ( P2 @ Prod ) ) ).

% old.prod.inducts
thf(fact_225_old_Oprod_Oexhaust,axiom,
    ! [A: $tType,B: $tType,Y: product_prod @ A @ B] :
      ~ ! [A5: A,B5: B] :
          ( Y
         != ( product_Pair @ A @ B @ A5 @ B5 ) ) ).

% old.prod.exhaust
thf(fact_226_prod__induct7,axiom,
    ! [G3: $tType,F6: $tType,E3: $tType,D: $tType,C2: $tType,B: $tType,A: $tType,P2: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) ) ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) ) ) )] :
      ( ! [A5: A,B5: B,C4: C2,D3: D,E4: E3,F4: F6,G4: G3] : ( P2 @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) ) ) ) @ A5 @ ( product_Pair @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) ) ) @ B5 @ ( product_Pair @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) ) @ C4 @ ( product_Pair @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) @ D3 @ ( product_Pair @ E3 @ ( product_prod @ F6 @ G3 ) @ E4 @ ( product_Pair @ F6 @ G3 @ F4 @ G4 ) ) ) ) ) ) )
     => ( P2 @ X2 ) ) ).

% prod_induct7
thf(fact_227_prod__induct6,axiom,
    ! [F6: $tType,E3: $tType,D: $tType,C2: $tType,B: $tType,A: $tType,P2: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ F6 ) ) ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ F6 ) ) ) )] :
      ( ! [A5: A,B5: B,C4: C2,D3: D,E4: E3,F4: F6] : ( P2 @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ F6 ) ) ) ) @ A5 @ ( product_Pair @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ F6 ) ) ) @ B5 @ ( product_Pair @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ F6 ) ) @ C4 @ ( product_Pair @ D @ ( product_prod @ E3 @ F6 ) @ D3 @ ( product_Pair @ E3 @ F6 @ E4 @ F4 ) ) ) ) ) )
     => ( P2 @ X2 ) ) ).

% prod_induct6
thf(fact_228_prod__induct5,axiom,
    ! [E3: $tType,D: $tType,C2: $tType,B: $tType,A: $tType,P2: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ E3 ) ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ E3 ) ) )] :
      ( ! [A5: A,B5: B,C4: C2,D3: D,E4: E3] : ( P2 @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ E3 ) ) ) @ A5 @ ( product_Pair @ B @ ( product_prod @ C2 @ ( product_prod @ D @ E3 ) ) @ B5 @ ( product_Pair @ C2 @ ( product_prod @ D @ E3 ) @ C4 @ ( product_Pair @ D @ E3 @ D3 @ E4 ) ) ) ) )
     => ( P2 @ X2 ) ) ).

% prod_induct5
thf(fact_229_prod__induct4,axiom,
    ! [D: $tType,C2: $tType,B: $tType,A: $tType,P2: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ D ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ D ) )] :
      ( ! [A5: A,B5: B,C4: C2,D3: D] : ( P2 @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C2 @ D ) ) @ A5 @ ( product_Pair @ B @ ( product_prod @ C2 @ D ) @ B5 @ ( product_Pair @ C2 @ D @ C4 @ D3 ) ) ) )
     => ( P2 @ X2 ) ) ).

% prod_induct4
thf(fact_230_prod__induct3,axiom,
    ! [C2: $tType,B: $tType,A: $tType,P2: ( product_prod @ A @ ( product_prod @ B @ C2 ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ C2 )] :
      ( ! [A5: A,B5: B,C4: C2] : ( P2 @ ( product_Pair @ A @ ( product_prod @ B @ C2 ) @ A5 @ ( product_Pair @ B @ C2 @ B5 @ C4 ) ) )
     => ( P2 @ X2 ) ) ).

% prod_induct3
thf(fact_231_prod__cases7,axiom,
    ! [A: $tType,B: $tType,C2: $tType,D: $tType,E3: $tType,F6: $tType,G3: $tType,Y: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) ) ) )] :
      ~ ! [A5: A,B5: B,C4: C2,D3: D,E4: E3,F4: F6,G4: G3] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) ) ) ) @ A5 @ ( product_Pair @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) ) ) @ B5 @ ( product_Pair @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) ) @ C4 @ ( product_Pair @ D @ ( product_prod @ E3 @ ( product_prod @ F6 @ G3 ) ) @ D3 @ ( product_Pair @ E3 @ ( product_prod @ F6 @ G3 ) @ E4 @ ( product_Pair @ F6 @ G3 @ F4 @ G4 ) ) ) ) ) ) ) ).

% prod_cases7
thf(fact_232_prod__cases6,axiom,
    ! [A: $tType,B: $tType,C2: $tType,D: $tType,E3: $tType,F6: $tType,Y: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ F6 ) ) ) )] :
      ~ ! [A5: A,B5: B,C4: C2,D3: D,E4: E3,F4: F6] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ F6 ) ) ) ) @ A5 @ ( product_Pair @ B @ ( product_prod @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ F6 ) ) ) @ B5 @ ( product_Pair @ C2 @ ( product_prod @ D @ ( product_prod @ E3 @ F6 ) ) @ C4 @ ( product_Pair @ D @ ( product_prod @ E3 @ F6 ) @ D3 @ ( product_Pair @ E3 @ F6 @ E4 @ F4 ) ) ) ) ) ) ).

% prod_cases6
thf(fact_233_prod__cases5,axiom,
    ! [A: $tType,B: $tType,C2: $tType,D: $tType,E3: $tType,Y: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ E3 ) ) )] :
      ~ ! [A5: A,B5: B,C4: C2,D3: D,E4: E3] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C2 @ ( product_prod @ D @ E3 ) ) ) @ A5 @ ( product_Pair @ B @ ( product_prod @ C2 @ ( product_prod @ D @ E3 ) ) @ B5 @ ( product_Pair @ C2 @ ( product_prod @ D @ E3 ) @ C4 @ ( product_Pair @ D @ E3 @ D3 @ E4 ) ) ) ) ) ).

% prod_cases5
thf(fact_234_prod__cases4,axiom,
    ! [A: $tType,B: $tType,C2: $tType,D: $tType,Y: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C2 @ D ) )] :
      ~ ! [A5: A,B5: B,C4: C2,D3: D] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C2 @ D ) ) @ A5 @ ( product_Pair @ B @ ( product_prod @ C2 @ D ) @ B5 @ ( product_Pair @ C2 @ D @ C4 @ D3 ) ) ) ) ).

% prod_cases4
thf(fact_235_prod__cases3,axiom,
    ! [A: $tType,B: $tType,C2: $tType,Y: product_prod @ A @ ( product_prod @ B @ C2 )] :
      ~ ! [A5: A,B5: B,C4: C2] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ C2 ) @ A5 @ ( product_Pair @ B @ C2 @ B5 @ C4 ) ) ) ).

% prod_cases3
thf(fact_236_Pair__inject,axiom,
    ! [A: $tType,B: $tType,A2: A,B2: B,A6: A,B6: B] :
      ( ( ( product_Pair @ A @ B @ A2 @ B2 )
        = ( product_Pair @ A @ B @ A6 @ B6 ) )
     => ~ ( ( A2 = A6 )
         => ( B2 != B6 ) ) ) ).

% Pair_inject
thf(fact_237_prod__cases,axiom,
    ! [B: $tType,A: $tType,P2: ( product_prod @ A @ B ) > $o,P: product_prod @ A @ B] :
      ( ! [A5: A,B5: B] : ( P2 @ ( product_Pair @ A @ B @ A5 @ B5 ) )
     => ( P2 @ P ) ) ).

% prod_cases
thf(fact_238_surj__pair,axiom,
    ! [A: $tType,B: $tType,P: product_prod @ A @ B] :
    ? [X4: A,Y3: B] :
      ( P
      = ( product_Pair @ A @ B @ X4 @ Y3 ) ) ).

% surj_pair
thf(fact_239_Network_Ocap__non__negative,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat] :
          ( ( network @ Capacity @ C @ S @ T )
         => ! [U3: nat,V3: nat] : ( ord_less_eq @ Capacity @ ( zero_zero @ Capacity ) @ ( C @ ( product_Pair @ nat @ nat @ U3 @ V3 ) ) ) ) ) ).

% Network.cap_non_negative
thf(fact_240_NPreflow_OresE__nonNegative,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,E: product_prod @ nat @ nat] :
          ( ( nPreflow @ Capacity @ C @ S @ T @ F3 )
         => ( ord_less_eq @ Capacity @ ( zero_zero @ Capacity ) @ ( residu1993642540lGraph @ Capacity @ C @ F3 @ E ) ) ) ) ).

% NPreflow.resE_nonNegative
thf(fact_241_NFlow_Oaugment__flow__presv__cap,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,T: nat,F3: ( product_prod @ nat @ nat ) > Capacity,F2: ( product_prod @ nat @ nat ) > Capacity,U: nat,V: nat] :
          ( ( nFlow @ Capacity @ C @ S @ T @ F3 )
         => ( ( flow @ Capacity @ ( residu1993642540lGraph @ Capacity @ C @ F3 ) @ S @ T @ F2 )
           => ( ( ord_less_eq @ Capacity @ ( zero_zero @ Capacity ) @ ( augmenting_augment @ Capacity @ C @ F3 @ F2 @ ( product_Pair @ nat @ nat @ U @ V ) ) )
              & ( ord_less_eq @ Capacity @ ( augmenting_augment @ Capacity @ C @ F3 @ F2 @ ( product_Pair @ nat @ nat @ U @ V ) ) @ ( C @ ( product_Pair @ nat @ nat @ U @ V ) ) ) ) ) ) ) ).

% NFlow.augment_flow_presv_cap
thf(fact_242_excess__s__non__pos,axiom,
    ord_less_eq @ capacity @ ( excess @ capacity @ c @ f @ s ) @ ( zero_zero @ capacity ) ).

% excess_s_non_pos
thf(fact_243_resCap__gzero,axiom,
    ! [P: list @ ( product_prod @ nat @ nat )] :
      ( ( augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ P )
     => ( ord_less @ capacity @ ( zero_zero @ capacity ) @ ( augmenting_resCap @ capacity @ c @ f @ P ) ) ) ).

% resCap_gzero
thf(fact_244_Network_Oexcess_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( excess @ Capacity )
        = ( excess @ Capacity ) ) ) ).

% Network.excess.cong
thf(fact_245_bot_Onot__eq__extremum,axiom,
    ! [A: $tType] :
      ( ( order_bot @ A )
     => ! [A2: A] :
          ( ( A2
           != ( bot_bot @ A ) )
          = ( ord_less @ A @ ( bot_bot @ A ) @ A2 ) ) ) ).

% bot.not_eq_extremum
thf(fact_246_bot_Oextremum__strict,axiom,
    ! [A: $tType] :
      ( ( order_bot @ A )
     => ! [A2: A] :
          ~ ( ord_less @ A @ A2 @ ( bot_bot @ A ) ) ) ).

% bot.extremum_strict
thf(fact_247_less__infI1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,X2: A,B2: A] :
          ( ( ord_less @ A @ A2 @ X2 )
         => ( ord_less @ A @ ( inf_inf @ A @ A2 @ B2 ) @ X2 ) ) ) ).

% less_infI1
thf(fact_248_less__infI2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [B2: A,X2: A,A2: A] :
          ( ( ord_less @ A @ B2 @ X2 )
         => ( ord_less @ A @ ( inf_inf @ A @ A2 @ B2 ) @ X2 ) ) ) ).

% less_infI2
thf(fact_249_inf_Ostrict__boundedE,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,B2: A,C: A] :
          ( ( ord_less @ A @ A2 @ ( inf_inf @ A @ B2 @ C ) )
         => ~ ( ( ord_less @ A @ A2 @ B2 )
             => ~ ( ord_less @ A @ A2 @ C ) ) ) ) ).

% inf.strict_boundedE
thf(fact_250_inf_Ostrict__order__iff,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ( ( ord_less @ A )
        = ( ^ [A3: A,B3: A] :
              ( ( A3
                = ( inf_inf @ A @ A3 @ B3 ) )
              & ( A3 != B3 ) ) ) ) ) ).

% inf.strict_order_iff
thf(fact_251_inf_Ostrict__coboundedI1,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [A2: A,C: A,B2: A] :
          ( ( ord_less @ A @ A2 @ C )
         => ( ord_less @ A @ ( inf_inf @ A @ A2 @ B2 ) @ C ) ) ) ).

% inf.strict_coboundedI1
thf(fact_252_inf_Ostrict__coboundedI2,axiom,
    ! [A: $tType] :
      ( ( semilattice_inf @ A )
     => ! [B2: A,C: A,A2: A] :
          ( ( ord_less @ A @ B2 @ C )
         => ( ord_less @ A @ ( inf_inf @ A @ A2 @ B2 ) @ C ) ) ) ).

% inf.strict_coboundedI2
thf(fact_253_dual__order_Ostrict__implies__not__eq,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [B2: A,A2: A] :
          ( ( ord_less @ A @ B2 @ A2 )
         => ( A2 != B2 ) ) ) ).

% dual_order.strict_implies_not_eq
thf(fact_254_order_Ostrict__implies__not__eq,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A2: A,B2: A] :
          ( ( ord_less @ A @ A2 @ B2 )
         => ( A2 != B2 ) ) ) ).

% order.strict_implies_not_eq
thf(fact_255_not__less__iff__gr__or__eq,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X2: A,Y: A] :
          ( ( ~ ( ord_less @ A @ X2 @ Y ) )
          = ( ( ord_less @ A @ Y @ X2 )
            | ( X2 = Y ) ) ) ) ).

% not_less_iff_gr_or_eq

% Subclasses (5)
thf(subcl_Rings_Olinordered__idom___HOL_Otype,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( type @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Orderings_Oord,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ord @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Orderings_Oorder,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( order @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Orderings_Olinorder,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( linorder @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Orderings_Opreorder,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( preorder @ A ) ) ).

% Type constructors (36)
thf(tcon_HOL_Obool___Lattices_Obounded__lattice,axiom,
    bounded_lattice @ $o ).

thf(tcon_Set_Oset___Lattices_Obounded__lattice_1,axiom,
    ! [A7: $tType] : ( bounded_lattice @ ( set @ A7 ) ) ).

thf(tcon_fun___Lattices_Obounded__lattice_2,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( bounded_lattice @ A8 )
     => ( bounded_lattice @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Lattices_Obounded__lattice__bot,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( bounded_lattice @ A8 )
     => ( bounded_lattice_bot @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Lattices_Osemilattice__inf,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( semilattice_inf @ A8 )
     => ( semilattice_inf @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Orderings_Oorder__bot,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( order_bot @ A8 )
     => ( order_bot @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Orderings_Opreorder,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( preorder @ A8 )
     => ( preorder @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Lattices_Olattice,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( lattice @ A8 )
     => ( lattice @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Orderings_Oorder,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( order @ A8 )
     => ( order @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Orderings_Oord,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( ord @ A8 )
     => ( ord @ ( A7 > A8 ) ) ) ).

thf(tcon_fun___Orderings_Obot,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( bot @ A8 )
     => ( bot @ ( A7 > A8 ) ) ) ).

thf(tcon_Nat_Onat___Lattices_Osemilattice__inf_3,axiom,
    semilattice_inf @ nat ).

thf(tcon_Nat_Onat___Orderings_Oorder__bot_4,axiom,
    order_bot @ nat ).

thf(tcon_Nat_Onat___Orderings_Opreorder_5,axiom,
    preorder @ nat ).

thf(tcon_Nat_Onat___Orderings_Olinorder,axiom,
    linorder @ nat ).

thf(tcon_Nat_Onat___Lattices_Olattice_6,axiom,
    lattice @ nat ).

thf(tcon_Nat_Onat___Orderings_Oorder_7,axiom,
    order @ nat ).

thf(tcon_Nat_Onat___Orderings_Oord_8,axiom,
    ord @ nat ).

thf(tcon_Nat_Onat___Orderings_Obot_9,axiom,
    bot @ nat ).

thf(tcon_Set_Oset___Lattices_Obounded__lattice__bot_10,axiom,
    ! [A7: $tType] : ( bounded_lattice_bot @ ( set @ A7 ) ) ).

thf(tcon_Set_Oset___Lattices_Osemilattice__inf_11,axiom,
    ! [A7: $tType] : ( semilattice_inf @ ( set @ A7 ) ) ).

thf(tcon_Set_Oset___Orderings_Oorder__bot_12,axiom,
    ! [A7: $tType] : ( order_bot @ ( set @ A7 ) ) ).

thf(tcon_Set_Oset___Orderings_Opreorder_13,axiom,
    ! [A7: $tType] : ( preorder @ ( set @ A7 ) ) ).

thf(tcon_Set_Oset___Lattices_Olattice_14,axiom,
    ! [A7: $tType] : ( lattice @ ( set @ A7 ) ) ).

thf(tcon_Set_Oset___Orderings_Oorder_15,axiom,
    ! [A7: $tType] : ( order @ ( set @ A7 ) ) ).

thf(tcon_Set_Oset___Orderings_Oord_16,axiom,
    ! [A7: $tType] : ( ord @ ( set @ A7 ) ) ).

thf(tcon_Set_Oset___Orderings_Obot_17,axiom,
    ! [A7: $tType] : ( bot @ ( set @ A7 ) ) ).

thf(tcon_HOL_Obool___Lattices_Obounded__lattice__bot_18,axiom,
    bounded_lattice_bot @ $o ).

thf(tcon_HOL_Obool___Lattices_Osemilattice__inf_19,axiom,
    semilattice_inf @ $o ).

thf(tcon_HOL_Obool___Orderings_Oorder__bot_20,axiom,
    order_bot @ $o ).

thf(tcon_HOL_Obool___Orderings_Opreorder_21,axiom,
    preorder @ $o ).

thf(tcon_HOL_Obool___Orderings_Olinorder_22,axiom,
    linorder @ $o ).

thf(tcon_HOL_Obool___Lattices_Olattice_23,axiom,
    lattice @ $o ).

thf(tcon_HOL_Obool___Orderings_Oorder_24,axiom,
    order @ $o ).

thf(tcon_HOL_Obool___Orderings_Oord_25,axiom,
    ord @ $o ).

thf(tcon_HOL_Obool___Orderings_Obot_26,axiom,
    bot @ $o ).

% Free types (1)
thf(tfree_0,hypothesis,
    linordered_idom @ capacity ).

% Conjectures (2)
thf(conj_0,hypothesis,
    augmen2028041557ngPath @ capacity @ c @ s @ t @ f @ p ).

thf(conj_1,conjecture,
    ( ( inf_inf @ ( set @ ( product_prod @ nat @ nat ) ) @ ( set2 @ ( product_prod @ nat @ nat ) @ p ) @ ( converse @ nat @ nat @ ( set2 @ ( product_prod @ nat @ nat ) @ p ) ) )
    = ( bot_bot @ ( set @ ( product_prod @ nat @ nat ) ) ) ) ).

%------------------------------------------------------------------------------
