%------------------------------------------------------------------------------
% File     : DAT238^1 : TPTP v8.2.0. Released v7.0.0.
% Domain   : Data Structures
% Problem  : Red-black trees 1330
% Version  : [Bla16] axioms : Especial.
% English  :

% Refs     : [RB15]  Reynolds & Blanchette (2015), A Decision Procedure for
%          : [Bla16] Blanchette (2016), Email to Geoff Sutcliffe
% Source   : [Bla16]
% Names    : rbt_impl__1330.p [Bla16]

% Status   : Theorem
% Rating   : 1.00 v7.1.0
% Syntax   : Number of formulae    :  328 ( 123 unt;  49 typ;   0 def)
%            Number of atoms       :  626 ( 259 equ;   0 cnn)
%            Maximal formula atoms :    9 (   2 avg)
%            Number of connectives : 3620 (  83   ~;  14   |;  11   &;3213   @)
%                                         (   0 <=>; 299  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   21 (   6 avg)
%            Number of types       :    6 (   5 usr)
%            Number of type conns  :   87 (  87   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :   47 (  44 usr;  12 con; 0-4 aty)
%            Number of variables   :  592 (  13   ^; 536   !;  11   ?; 592   :)
%                                         (  32  !>;   0  ?*;   0  @-;   0  @+)
% SPC      : TH1_THM_EQU_NAR

% Comments : This file was generated by Isabelle (most likely Sledgehammer)
%            2016-07-13 14:46:18.684
%------------------------------------------------------------------------------
%----Could-be-implicit typings (9)
thf(ty_t_RBT__Impl__Mirabelle__msmaddcmtr_Orbt,type,
    rBT_Im246033960le_rbt: $tType > $tType > $tType ).

thf(ty_t_Product__Type_Oprod,type,
    product_prod: $tType > $tType > $tType ).

thf(ty_t_List_Olist,type,
    list: $tType > $tType ).

thf(ty_t_Num_Onum,type,
    num: $tType ).

thf(ty_t_Nat_Onat,type,
    nat: $tType ).

thf(ty_t_Int_Oint,type,
    int: $tType ).

thf(ty_t_itself,type,
    itself: $tType > $tType ).

thf(ty_tf_b,type,
    b: $tType ).

thf(ty_tf_a,type,
    a: $tType ).

%----Explicit typings (40)
thf(sy_cl_HOL_Otype,type,
    type: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Num_Onumeral,type,
    numeral: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Fields_Ofield,type,
    field: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Groups_Ominus,type,
    minus: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Num_Oneg__numeral,type,
    neg_numeral: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Orderings_Oorder,type,
    order: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Divides_Oring__div,type,
    ring_div: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Nat_Osemiring__char__0,type,
    semiring_char_0: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Divides_Osemiring__div,type,
    semiring_div: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Rings_Olinordered__semidom,type,
    linordered_semidom: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Divides_Osemiring__div__parity,type,
    semiring_div_parity: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Divides_Osemiring__numeral__div,type,
    semiring_numeral_div: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_c_Divides_Odiv__class_Omod,type,
    div_mod: 
      !>[A: $tType] : ( A > A > A ) ).

thf(sy_c_Groups_Ominus__class_Ominus,type,
    minus_minus: 
      !>[A: $tType] : ( A > A > A ) ).

thf(sy_c_Groups_Oone__class_Oone,type,
    one_one: 
      !>[A: $tType] : A ).

thf(sy_c_Groups_Ozero__class_Ozero,type,
    zero_zero: 
      !>[A: $tType] : A ).

thf(sy_c_If,type,
    if: 
      !>[A: $tType] : ( $o > A > A > A ) ).

thf(sy_c_List_Olist_OCons,type,
    cons: 
      !>[A: $tType] : ( A > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_Nat_OSuc,type,
    suc: nat > nat ).

thf(sy_c_Nat_Osize__class_Osize,type,
    size_size: 
      !>[A: $tType] : ( A > nat ) ).

thf(sy_c_Num_Onum_OBit0,type,
    bit0: num > num ).

thf(sy_c_Num_Onum_OOne,type,
    one: num ).

thf(sy_c_Num_Onumeral__class_Onumeral,type,
    numeral_numeral: 
      !>[A: $tType] : ( num > A ) ).

thf(sy_c_Orderings_Oord__class_Oless,type,
    ord_less: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Orderings_Oord__class_Oless__eq,type,
    ord_less_eq: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Product__Type_OPair,type,
    product_Pair: 
      !>[A: $tType,B: $tType] : ( A > B > ( product_prod @ A @ B ) ) ).

thf(sy_c_Product__Type_Oprod_Osnd,type,
    product_snd: 
      !>[A: $tType,B: $tType] : ( ( product_prod @ A @ B ) > B ) ).

thf(sy_c_Pure_Otype,type,
    type2: 
      !>[A: $tType] : ( itself @ A ) ).

thf(sy_c_RBT__Impl__Mirabelle__msmaddcmtr_Orbtreeify__f,type,
    rBT_Im175104035eify_f: 
      !>[A: $tType,B: $tType] : ( nat > ( list @ ( product_prod @ A @ B ) ) > ( product_prod @ ( rBT_Im246033960le_rbt @ A @ B ) @ ( list @ ( product_prod @ A @ B ) ) ) ) ).

thf(sy_c_RBT__Impl__Mirabelle__msmaddcmtr_Orbtreeify__g,type,
    rBT_Im175104036eify_g: 
      !>[A: $tType,B: $tType] : ( nat > ( list @ ( product_prod @ A @ B ) ) > ( product_prod @ ( rBT_Im246033960le_rbt @ A @ B ) @ ( list @ ( product_prod @ A @ B ) ) ) ) ).

thf(sy_c_Rings_Odivide__class_Odivide,type,
    divide_divide: 
      !>[A: $tType] : ( A > A > A ) ).

thf(sy_v_k_H____,type,
    k: a ).

thf(sy_v_k____,type,
    k2: a ).

thf(sy_v_kvs_H_H____,type,
    kvs: list @ ( product_prod @ a @ b ) ).

thf(sy_v_kvs_H____,type,
    kvs2: list @ ( product_prod @ a @ b ) ).

thf(sy_v_kvsa____,type,
    kvsa: list @ ( product_prod @ a @ b ) ).

thf(sy_v_na____,type,
    na: nat ).

thf(sy_v_t1____,type,
    t1: rBT_Im246033960le_rbt @ a @ b ).

thf(sy_v_v_H____,type,
    v: b ).

thf(sy_v_v____,type,
    v2: b ).

%----Relevant facts (252)
thf(fact_0__C2_Oprems_C_I1_J,axiom,
    ord_less @ nat @ ( zero_zero @ nat ) @ na ).

% "2.prems"(1)
thf(fact_1__C2_Oprems_C_I2_J,axiom,
    ord_less_eq @ nat @ na @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ) ).

% "2.prems"(2)
thf(fact_2_True,axiom,
    ( ( div_mod @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
    = ( zero_zero @ nat ) ) ).

% True
thf(fact_3__092_060open_062_092_060And_062thesis_O_A_I_092_060And_062k_Av_Akvs_H_O_Akvs_A_061_A_Ik_M_Av_J_A_D_Akvs_H_A_092_060Longrightarrow_062_Athesis_J_A_092_060Longrightarrow_062_Athesis_092_060close_062,axiom,
    ~ ! [K: a,V: b,Kvs: list @ ( product_prod @ a @ b )] :
        ( kvsa
       != ( cons @ ( product_prod @ a @ b ) @ ( product_Pair @ a @ b @ K @ V ) @ Kvs ) ) ).

% \<open>\<And>thesis. (\<And>k v kvs'. kvs = (k, v) # kvs' \<Longrightarrow> thesis) \<Longrightarrow> thesis\<close>
thf(fact_4__092_060open_0621_A_060_An_092_060close_062,axiom,
    ord_less @ nat @ ( one_one @ nat ) @ na ).

% \<open>1 < n\<close>
thf(fact_5_kvs,axiom,
    ( kvsa
    = ( cons @ ( product_prod @ a @ b ) @ ( product_Pair @ a @ b @ k2 @ v2 ) @ kvs2 ) ) ).

% kvs
thf(fact_6_len,axiom,
    ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa ) ) )
    = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ).

% len
thf(fact_7_diff__Suc__Suc,axiom,
    ! [M: nat,N: nat] :
      ( ( minus_minus @ nat @ ( suc @ M ) @ ( suc @ N ) )
      = ( minus_minus @ nat @ M @ N ) ) ).

% diff_Suc_Suc
thf(fact_8_Suc__diff__diff,axiom,
    ! [M: nat,N: nat,K2: nat] :
      ( ( minus_minus @ nat @ ( minus_minus @ nat @ ( suc @ M ) @ N ) @ ( suc @ K2 ) )
      = ( minus_minus @ nat @ ( minus_minus @ nat @ M @ N ) @ K2 ) ) ).

% Suc_diff_diff
thf(fact_9__092_060open_062length_A_Isnd_A_It1_M_A_Ik_H_M_Av_H_J_A_D_Akvs_H_H_J_J_A_061_ASuc_A_Ilength_Akvs_J_A_N_An_Adiv_A2_092_060close_062,axiom,
    ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( product_Pair @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ t1 @ ( cons @ ( product_prod @ a @ b ) @ ( product_Pair @ a @ b @ k @ v ) @ kvs ) ) ) )
    = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ).

% \<open>length (snd (t1, (k', v') # kvs'')) = Suc (length kvs) - n div 2\<close>
thf(fact_10__092_060open_062length_A_Isnd_A_Irbtreeify__g_A_In_Adiv_A2_J_Akvs_H_H_J_J_A_061_ASuc_A_Ilength_Akvs_H_H_J_A_N_An_Adiv_A2_092_060close_062,axiom,
    ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvs ) ) )
    = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvs ) ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ).

% \<open>length (snd (rbtreeify_g (n div 2) kvs'')) = Suc (length kvs'') - n div 2\<close>
thf(fact_11__092_060open_062n_Adiv_A2_A_092_060le_062_ASuc_A_Ilength_Akvs_J_092_060close_062,axiom,
    ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ) ).

% \<open>n div 2 \<le> Suc (length kvs)\<close>
thf(fact_12_nat_Oinject,axiom,
    ! [X2: nat,Y2: nat] :
      ( ( ( suc @ X2 )
        = ( suc @ Y2 ) )
      = ( X2 = Y2 ) ) ).

% nat.inject
thf(fact_13_old_Onat_Oinject,axiom,
    ! [Nat: nat,Nat2: nat] :
      ( ( ( suc @ Nat )
        = ( suc @ Nat2 ) )
      = ( Nat = Nat2 ) ) ).

% old.nat.inject
thf(fact_14_minus__apply,axiom,
    ! [B: $tType,A: $tType] :
      ( ( minus @ B @ ( type2 @ B ) )
     => ( ( minus_minus @ ( A > B ) )
        = ( ^ [A2: A > B,B2: A > B,X: A] : ( minus_minus @ B @ ( A2 @ X ) @ ( B2 @ X ) ) ) ) ) ).

% minus_apply
thf(fact_15__092_060open_062_092_060not_062_A_In_A_061_A0_A_092_060or_062_An_A_061_A1_J_092_060close_062,axiom,
    ~ ( ( na
        = ( zero_zero @ nat ) )
      | ( na
        = ( one_one @ nat ) ) ) ).

% \<open>\<not> (n = 0 \<or> n = 1)\<close>
thf(fact_16__092_060open_0620_A_060_An_Adiv_A2_092_060close_062,axiom,
    ord_less @ nat @ ( zero_zero @ nat ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ).

% \<open>0 < n div 2\<close>
thf(fact_17_neq0__conv,axiom,
    ! [N: nat] :
      ( ( N
       != ( zero_zero @ nat ) )
      = ( ord_less @ nat @ ( zero_zero @ nat ) @ N ) ) ).

% neq0_conv
thf(fact_18_Suc__less__eq,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ ( suc @ M ) @ ( suc @ N ) )
      = ( ord_less @ nat @ M @ N ) ) ).

% Suc_less_eq
thf(fact_19_Suc__mono,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ord_less @ nat @ ( suc @ M ) @ ( suc @ N ) ) ) ).

% Suc_mono
thf(fact_20_lessI,axiom,
    ! [N: nat] : ( ord_less @ nat @ N @ ( suc @ N ) ) ).

% lessI
thf(fact_21_le0,axiom,
    ! [N: nat] : ( ord_less_eq @ nat @ ( zero_zero @ nat ) @ N ) ).

% le0
thf(fact_22_Suc__le__mono,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less_eq @ nat @ ( suc @ N ) @ ( suc @ M ) )
      = ( ord_less_eq @ nat @ N @ M ) ) ).

% Suc_le_mono
thf(fact_23_diff__self__eq__0,axiom,
    ! [M: nat] :
      ( ( minus_minus @ nat @ M @ M )
      = ( zero_zero @ nat ) ) ).

% diff_self_eq_0
thf(fact_24_diff__0__eq__0,axiom,
    ! [N: nat] :
      ( ( minus_minus @ nat @ ( zero_zero @ nat ) @ N )
      = ( zero_zero @ nat ) ) ).

% diff_0_eq_0
thf(fact_25_diff__diff__cancel,axiom,
    ! [I: nat,N: nat] :
      ( ( ord_less_eq @ nat @ I @ N )
     => ( ( minus_minus @ nat @ N @ ( minus_minus @ nat @ N @ I ) )
        = I ) ) ).

% diff_diff_cancel
thf(fact_26__C2_OIH_C_I1_J,axiom,
    ( ~ ( ( na
          = ( zero_zero @ nat ) )
        | ( na
          = ( one_one @ nat ) ) )
   => ( ( ( div_mod @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
        = ( zero_zero @ nat ) )
     => ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) )
       => ( ( ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ) )
         => ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa ) ) )
            = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ) ) ) ) ).

% "2.IH"(1)
thf(fact_27__092_060open_062n_Adiv_A2_A_092_060le_062_ASuc_A_Ilength_Akvs_H_H_J_092_060close_062,axiom,
    ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvs ) ) ).

% \<open>n div 2 \<le> Suc (length kvs'')\<close>
thf(fact_28_zero__less__Suc,axiom,
    ! [N: nat] : ( ord_less @ nat @ ( zero_zero @ nat ) @ ( suc @ N ) ) ).

% zero_less_Suc
thf(fact_29_less__Suc0,axiom,
    ! [N: nat] :
      ( ( ord_less @ nat @ N @ ( suc @ ( zero_zero @ nat ) ) )
      = ( N
        = ( zero_zero @ nat ) ) ) ).

% less_Suc0
thf(fact_30_zero__less__diff,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( minus_minus @ nat @ N @ M ) )
      = ( ord_less @ nat @ M @ N ) ) ).

% zero_less_diff
thf(fact_31_diff__is__0__eq_H,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ( minus_minus @ nat @ M @ N )
        = ( zero_zero @ nat ) ) ) ).

% diff_is_0_eq'
thf(fact_32_diff__is__0__eq,axiom,
    ! [M: nat,N: nat] :
      ( ( ( minus_minus @ nat @ M @ N )
        = ( zero_zero @ nat ) )
      = ( ord_less_eq @ nat @ M @ N ) ) ).

% diff_is_0_eq
thf(fact_33_less__one,axiom,
    ! [N: nat] :
      ( ( ord_less @ nat @ N @ ( one_one @ nat ) )
      = ( N
        = ( zero_zero @ nat ) ) ) ).

% less_one
thf(fact_34_diff__Suc__1,axiom,
    ! [N: nat] :
      ( ( minus_minus @ nat @ ( suc @ N ) @ ( one_one @ nat ) )
      = N ) ).

% diff_Suc_1
thf(fact_35_kvs_H_H,axiom,
    ( ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa )
    = ( product_Pair @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ t1 @ ( cons @ ( product_prod @ a @ b ) @ ( product_Pair @ a @ b @ k @ v ) @ kvs ) ) ) ).

% kvs''
thf(fact_36__092_060open_062_092_060And_062thesis_O_A_I_092_060And_062t1_Ak_H_Av_H_Akvs_H_H_O_Arbtreeify__g_A_In_Adiv_A2_J_Akvs_A_061_A_It1_M_A_Ik_H_M_Av_H_J_A_D_Akvs_H_H_J_A_092_060Longrightarrow_062_Athesis_J_A_092_060Longrightarrow_062_Athesis_092_060close_062,axiom,
    ~ ! [T1: rBT_Im246033960le_rbt @ a @ b,K3: a,V2: b,Kvs2: list @ ( product_prod @ a @ b )] :
        ( ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa )
       != ( product_Pair @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ T1 @ ( cons @ ( product_prod @ a @ b ) @ ( product_Pair @ a @ b @ K3 @ V2 ) @ Kvs2 ) ) ) ).

% \<open>\<And>thesis. (\<And>t1 k' v' kvs''. rbtreeify_g (n div 2) kvs = (t1, (k', v') # kvs'') \<Longrightarrow> thesis) \<Longrightarrow> thesis\<close>
thf(fact_37_Suc__pred,axiom,
    ! [N: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ( suc @ ( minus_minus @ nat @ N @ ( suc @ ( zero_zero @ nat ) ) ) )
        = N ) ) ).

% Suc_pred
thf(fact_38_IH_I1_J,axiom,
    ( ( ( div_mod @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
      = ( zero_zero @ nat ) )
   => ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) )
     => ( ( ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ) )
       => ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa ) ) )
          = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ) ) ) ).

% IH(1)
thf(fact_39_Suc__diff__1,axiom,
    ! [N: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ( suc @ ( minus_minus @ nat @ N @ ( one_one @ nat ) ) )
        = N ) ) ).

% Suc_diff_1
thf(fact_40_IH_I2_J,axiom,
    ! [X3: rBT_Im246033960le_rbt @ a @ b,Y: list @ ( product_prod @ a @ b ),X21: product_prod @ a @ b,X22: list @ ( product_prod @ a @ b ),Xa: a,Ya: b] :
      ( ( ( div_mod @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
        = ( zero_zero @ nat ) )
     => ( ( ( product_Pair @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ X3 @ Y )
          = ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa ) )
       => ( ( Y
            = ( cons @ ( product_prod @ a @ b ) @ X21 @ X22 ) )
         => ( ( ( product_Pair @ a @ b @ Xa @ Ya )
              = X21 )
           => ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) )
             => ( ( ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ X22 ) ) )
               => ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ X22 ) ) )
                  = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ X22 ) ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ) ) ) ) ) ) ).

% IH(2)
thf(fact_41__C2_OIH_C_I3_J,axiom,
    ( ~ ( ( na
          = ( zero_zero @ nat ) )
        | ( na
          = ( one_one @ nat ) ) )
   => ( ( ( div_mod @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
       != ( zero_zero @ nat ) )
     => ( ( ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) )
       => ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104035eify_f @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa ) ) )
          = ( minus_minus @ nat @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ) ) ) ).

% "2.IH"(3)
thf(fact_42__C2_OIH_C_I2_J,axiom,
    ! [X3: rBT_Im246033960le_rbt @ a @ b,Y: list @ ( product_prod @ a @ b ),X21: product_prod @ a @ b,X22: list @ ( product_prod @ a @ b ),Xa: a,Ya: b] :
      ( ~ ( ( na
            = ( zero_zero @ nat ) )
          | ( na
            = ( one_one @ nat ) ) )
     => ( ( ( div_mod @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
          = ( zero_zero @ nat ) )
       => ( ( ( product_Pair @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ X3 @ Y )
            = ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa ) )
         => ( ( Y
              = ( cons @ ( product_prod @ a @ b ) @ X21 @ X22 ) )
           => ( ( ( product_Pair @ a @ b @ Xa @ Ya )
                = X21 )
             => ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) )
               => ( ( ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ X22 ) ) )
                 => ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ X22 ) ) )
                    = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ X22 ) ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ) ) ) ) ) ) ) ).

% "2.IH"(2)
thf(fact_43_less__eq__nat_Osimps_I1_J,axiom,
    ! [N: nat] : ( ord_less_eq @ nat @ ( zero_zero @ nat ) @ N ) ).

% less_eq_nat.simps(1)
thf(fact_44_ext,axiom,
    ! [B: $tType,A: $tType,F: A > B,G: A > B] :
      ( ! [X4: A] :
          ( ( F @ X4 )
          = ( G @ X4 ) )
     => ( F = G ) ) ).

% ext
thf(fact_45_gr0I,axiom,
    ! [N: nat] :
      ( ( N
       != ( zero_zero @ nat ) )
     => ( ord_less @ nat @ ( zero_zero @ nat ) @ N ) ) ).

% gr0I
thf(fact_46_le__0__eq,axiom,
    ! [N: nat] :
      ( ( ord_less_eq @ nat @ N @ ( zero_zero @ nat ) )
      = ( N
        = ( zero_zero @ nat ) ) ) ).

% le_0_eq
thf(fact_47_le__refl,axiom,
    ! [N: nat] : ( ord_less_eq @ nat @ N @ N ) ).

% le_refl
thf(fact_48_not__gr0,axiom,
    ! [N: nat] :
      ( ( ~ ( ord_less @ nat @ ( zero_zero @ nat ) @ N ) )
      = ( N
        = ( zero_zero @ nat ) ) ) ).

% not_gr0
thf(fact_49_le__trans,axiom,
    ! [I: nat,J: nat,K2: nat] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ( ord_less_eq @ nat @ J @ K2 )
       => ( ord_less_eq @ nat @ I @ K2 ) ) ) ).

% le_trans
thf(fact_50_eq__imp__le,axiom,
    ! [M: nat,N: nat] :
      ( ( M = N )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% eq_imp_le
thf(fact_51_not__less0,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ ( zero_zero @ nat ) ) ).

% not_less0
thf(fact_52_le__antisym,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ( ord_less_eq @ nat @ N @ M )
       => ( M = N ) ) ) ).

% le_antisym
thf(fact_53_less__zeroE,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ ( zero_zero @ nat ) ) ).

% less_zeroE
thf(fact_54_nat__less__le,axiom,
    ( ( ord_less @ nat )
    = ( ^ [M2: nat,N2: nat] :
          ( ( ord_less_eq @ nat @ M2 @ N2 )
          & ( M2 != N2 ) ) ) ) ).

% nat_less_le
thf(fact_55_nat__neq__iff,axiom,
    ! [M: nat,N: nat] :
      ( ( M != N )
      = ( ( ord_less @ nat @ M @ N )
        | ( ord_less @ nat @ N @ M ) ) ) ).

% nat_neq_iff
thf(fact_56_less__not__refl,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ N ) ).

% less_not_refl
thf(fact_57_nat__le__linear,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
      | ( ord_less_eq @ nat @ N @ M ) ) ).

% nat_le_linear
thf(fact_58_less__not__refl2,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ N @ M )
     => ( M != N ) ) ).

% less_not_refl2
thf(fact_59_less__not__refl3,axiom,
    ! [S: nat,T: nat] :
      ( ( ord_less @ nat @ S @ T )
     => ( S != T ) ) ).

% less_not_refl3
thf(fact_60_measure__induct,axiom,
    ! [A: $tType,F: A > nat,P: A > $o,A3: A] :
      ( ! [X4: A] :
          ( ! [Y3: A] :
              ( ( ord_less @ nat @ ( F @ Y3 ) @ ( F @ X4 ) )
             => ( P @ Y3 ) )
         => ( P @ X4 ) )
     => ( P @ A3 ) ) ).

% measure_induct
thf(fact_61_ex__least__nat__le,axiom,
    ! [P: nat > $o,N: nat] :
      ( ~ ( P @ ( zero_zero @ nat ) )
     => ( ( P @ N )
       => ? [K: nat] :
            ( ( ord_less_eq @ nat @ K @ N )
            & ! [I2: nat] :
                ( ( ord_less @ nat @ I2 @ K )
               => ~ ( P @ I2 ) )
            & ( P @ K ) ) ) ) ).

% ex_least_nat_le
thf(fact_62_gr__implies__not0,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( N
       != ( zero_zero @ nat ) ) ) ).

% gr_implies_not0
thf(fact_63_less__imp__le__nat,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% less_imp_le_nat
thf(fact_64_less__irrefl__nat,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ N ) ).

% less_irrefl_nat
thf(fact_65_nat__less__induct,axiom,
    ! [P: nat > $o,N: nat] :
      ( ! [N3: nat] :
          ( ! [M3: nat] :
              ( ( ord_less @ nat @ M3 @ N3 )
             => ( P @ M3 ) )
         => ( P @ N3 ) )
     => ( P @ N ) ) ).

% nat_less_induct
thf(fact_66_infinite__descent,axiom,
    ! [P: nat > $o,N: nat] :
      ( ! [N3: nat] :
          ( ~ ( P @ N3 )
         => ? [M3: nat] :
              ( ( ord_less @ nat @ M3 @ N3 )
              & ~ ( P @ M3 ) ) )
     => ( P @ N ) ) ).

% infinite_descent
thf(fact_67_le__eq__less__or__eq,axiom,
    ( ( ord_less_eq @ nat )
    = ( ^ [M2: nat,N2: nat] :
          ( ( ord_less @ nat @ M2 @ N2 )
          | ( M2 = N2 ) ) ) ) ).

% le_eq_less_or_eq
thf(fact_68_infinite__descent0,axiom,
    ! [P: nat > $o,N: nat] :
      ( ( P @ ( zero_zero @ nat ) )
     => ( ! [N3: nat] :
            ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N3 )
           => ( ~ ( P @ N3 )
             => ? [M3: nat] :
                  ( ( ord_less @ nat @ M3 @ N3 )
                  & ~ ( P @ M3 ) ) ) )
       => ( P @ N ) ) ) ).

% infinite_descent0
thf(fact_69_less__or__eq__imp__le,axiom,
    ! [M: nat,N: nat] :
      ( ( ( ord_less @ nat @ M @ N )
        | ( M = N ) )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% less_or_eq_imp_le
thf(fact_70_linorder__neqE__nat,axiom,
    ! [X3: nat,Y: nat] :
      ( ( X3 != Y )
     => ( ~ ( ord_less @ nat @ X3 @ Y )
       => ( ord_less @ nat @ Y @ X3 ) ) ) ).

% linorder_neqE_nat
thf(fact_71_less__nat__zero__code,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ ( zero_zero @ nat ) ) ).

% less_nat_zero_code
thf(fact_72_le__neq__implies__less,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ( M != N )
       => ( ord_less @ nat @ M @ N ) ) ) ).

% le_neq_implies_less
thf(fact_73_measure__induct__rule,axiom,
    ! [A: $tType,F: A > nat,P: A > $o,A3: A] :
      ( ! [X4: A] :
          ( ! [Y3: A] :
              ( ( ord_less @ nat @ ( F @ Y3 ) @ ( F @ X4 ) )
             => ( P @ Y3 ) )
         => ( P @ X4 ) )
     => ( P @ A3 ) ) ).

% measure_induct_rule
thf(fact_74_less__mono__imp__le__mono,axiom,
    ! [F: nat > nat,I: nat,J: nat] :
      ( ! [I3: nat,J2: nat] :
          ( ( ord_less @ nat @ I3 @ J2 )
         => ( ord_less @ nat @ ( F @ I3 ) @ ( F @ J2 ) ) )
     => ( ( ord_less_eq @ nat @ I @ J )
       => ( ord_less_eq @ nat @ ( F @ I ) @ ( F @ J ) ) ) ) ).

% less_mono_imp_le_mono
thf(fact_75_infinite__descent__measure,axiom,
    ! [A: $tType,P: A > $o,V3: A > nat,X3: A] :
      ( ! [X4: A] :
          ( ~ ( P @ X4 )
         => ? [Y3: A] :
              ( ( ord_less @ nat @ ( V3 @ Y3 ) @ ( V3 @ X4 ) )
              & ~ ( P @ Y3 ) ) )
     => ( P @ X3 ) ) ).

% infinite_descent_measure
thf(fact_76_infinite__descent0__measure,axiom,
    ! [A: $tType,V3: A > nat,P: A > $o,X3: A] :
      ( ! [X4: A] :
          ( ( ( V3 @ X4 )
            = ( zero_zero @ nat ) )
         => ( P @ X4 ) )
     => ( ! [X4: A] :
            ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( V3 @ X4 ) )
           => ( ~ ( P @ X4 )
             => ? [Y3: A] :
                  ( ( ord_less @ nat @ ( V3 @ Y3 ) @ ( V3 @ X4 ) )
                  & ~ ( P @ Y3 ) ) ) )
       => ( P @ X3 ) ) ) ).

% infinite_descent0_measure
thf(fact_77_One__nat__def,axiom,
    ( ( one_one @ nat )
    = ( suc @ ( zero_zero @ nat ) ) ) ).

% One_nat_def
thf(fact_78_Suc__diff__eq__diff__pred,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ( minus_minus @ nat @ ( suc @ M ) @ N )
        = ( minus_minus @ nat @ M @ ( minus_minus @ nat @ N @ ( one_one @ nat ) ) ) ) ) ).

% Suc_diff_eq_diff_pred
thf(fact_79_Suc__pred_H,axiom,
    ! [N: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( N
        = ( suc @ ( minus_minus @ nat @ N @ ( one_one @ nat ) ) ) ) ) ).

% Suc_pred'
thf(fact_80_lift__Suc__mono__less__iff,axiom,
    ! [A: $tType] :
      ( ( order @ A @ ( type2 @ A ) )
     => ! [F: nat > A,N: nat,M: nat] :
          ( ! [N3: nat] : ( ord_less @ A @ ( F @ N3 ) @ ( F @ ( suc @ N3 ) ) )
         => ( ( ord_less @ A @ ( F @ N ) @ ( F @ M ) )
            = ( ord_less @ nat @ N @ M ) ) ) ) ).

% lift_Suc_mono_less_iff
thf(fact_81_lift__Suc__mono__less,axiom,
    ! [A: $tType] :
      ( ( order @ A @ ( type2 @ A ) )
     => ! [F: nat > A,N: nat,N4: nat] :
          ( ! [N3: nat] : ( ord_less @ A @ ( F @ N3 ) @ ( F @ ( suc @ N3 ) ) )
         => ( ( ord_less @ nat @ N @ N4 )
           => ( ord_less @ A @ ( F @ N ) @ ( F @ N4 ) ) ) ) ) ).

% lift_Suc_mono_less
thf(fact_82_lift__Suc__antimono__le,axiom,
    ! [A: $tType] :
      ( ( order @ A @ ( type2 @ A ) )
     => ! [F: nat > A,N: nat,N4: nat] :
          ( ! [N3: nat] : ( ord_less_eq @ A @ ( F @ ( suc @ N3 ) ) @ ( F @ N3 ) )
         => ( ( ord_less_eq @ nat @ N @ N4 )
           => ( ord_less_eq @ A @ ( F @ N4 ) @ ( F @ N ) ) ) ) ) ).

% lift_Suc_antimono_le
thf(fact_83_lift__Suc__mono__le,axiom,
    ! [A: $tType] :
      ( ( order @ A @ ( type2 @ A ) )
     => ! [F: nat > A,N: nat,N4: nat] :
          ( ! [N3: nat] : ( ord_less_eq @ A @ ( F @ N3 ) @ ( F @ ( suc @ N3 ) ) )
         => ( ( ord_less_eq @ nat @ N @ N4 )
           => ( ord_less_eq @ A @ ( F @ N ) @ ( F @ N4 ) ) ) ) ) ).

% lift_Suc_mono_le
thf(fact_84_le__imp__less__Suc,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ord_less @ nat @ M @ ( suc @ N ) ) ) ).

% le_imp_less_Suc
thf(fact_85_less__eq__Suc__le,axiom,
    ( ( ord_less @ nat )
    = ( ^ [N2: nat] : ( ord_less_eq @ nat @ ( suc @ N2 ) ) ) ) ).

% less_eq_Suc_le
thf(fact_86_less__Suc__eq__le,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ ( suc @ N ) )
      = ( ord_less_eq @ nat @ M @ N ) ) ).

% less_Suc_eq_le
thf(fact_87_le__less__Suc__eq,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ( ord_less @ nat @ N @ ( suc @ M ) )
        = ( N = M ) ) ) ).

% le_less_Suc_eq
thf(fact_88_Suc__le__lessD,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ ( suc @ M ) @ N )
     => ( ord_less @ nat @ M @ N ) ) ).

% Suc_le_lessD
thf(fact_89_inc__induct,axiom,
    ! [I: nat,J: nat,P: nat > $o] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ( P @ J )
       => ( ! [N3: nat] :
              ( ( ord_less_eq @ nat @ I @ N3 )
             => ( ( ord_less @ nat @ N3 @ J )
               => ( ( P @ ( suc @ N3 ) )
                 => ( P @ N3 ) ) ) )
         => ( P @ I ) ) ) ) ).

% inc_induct
thf(fact_90_dec__induct,axiom,
    ! [I: nat,J: nat,P: nat > $o] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ( P @ I )
       => ( ! [N3: nat] :
              ( ( ord_less_eq @ nat @ I @ N3 )
             => ( ( ord_less @ nat @ N3 @ J )
               => ( ( P @ N3 )
                 => ( P @ ( suc @ N3 ) ) ) ) )
         => ( P @ J ) ) ) ) ).

% dec_induct
thf(fact_91_Suc__le__eq,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ ( suc @ M ) @ N )
      = ( ord_less @ nat @ M @ N ) ) ).

% Suc_le_eq
thf(fact_92_Suc__leI,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ord_less_eq @ nat @ ( suc @ M ) @ N ) ) ).

% Suc_leI
thf(fact_93_less__Suc__eq__0__disj,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ ( suc @ N ) )
      = ( ( M
          = ( zero_zero @ nat ) )
        | ? [J3: nat] :
            ( ( M
              = ( suc @ J3 ) )
            & ( ord_less @ nat @ J3 @ N ) ) ) ) ).

% less_Suc_eq_0_disj
thf(fact_94_gr0__implies__Suc,axiom,
    ! [N: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ? [M4: nat] :
          ( N
          = ( suc @ M4 ) ) ) ).

% gr0_implies_Suc
thf(fact_95_gr0__conv__Suc,axiom,
    ! [N: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
      = ( ? [M2: nat] :
            ( N
            = ( suc @ M2 ) ) ) ) ).

% gr0_conv_Suc
thf(fact_96_diff__less__mono,axiom,
    ! [A3: nat,B3: nat,C: nat] :
      ( ( ord_less @ nat @ A3 @ B3 )
     => ( ( ord_less_eq @ nat @ C @ A3 )
       => ( ord_less @ nat @ ( minus_minus @ nat @ A3 @ C ) @ ( minus_minus @ nat @ B3 @ C ) ) ) ) ).

% diff_less_mono
thf(fact_97_less__diff__iff,axiom,
    ! [K2: nat,M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ K2 @ M )
     => ( ( ord_less_eq @ nat @ K2 @ N )
       => ( ( ord_less @ nat @ ( minus_minus @ nat @ M @ K2 ) @ ( minus_minus @ nat @ N @ K2 ) )
          = ( ord_less @ nat @ M @ N ) ) ) ) ).

% less_diff_iff
thf(fact_98_diff__less,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ( ord_less @ nat @ ( zero_zero @ nat ) @ M )
       => ( ord_less @ nat @ ( minus_minus @ nat @ M @ N ) @ M ) ) ) ).

% diff_less
thf(fact_99_rbtreeify__f__rec__aux__lemma,axiom,
    ! [K2: nat,N: nat,K4: nat] :
      ( ( ( minus_minus @ nat @ K2 @ ( divide_divide @ nat @ N @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) )
        = ( suc @ K4 ) )
     => ( ( ord_less_eq @ nat @ N @ K2 )
       => ( ( ( div_mod @ nat @ N @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
            = ( suc @ ( zero_zero @ nat ) ) )
         => ( ( minus_minus @ nat @ K4 @ ( divide_divide @ nat @ N @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) )
            = ( minus_minus @ nat @ K2 @ N ) ) ) ) ) ).

% rbtreeify_f_rec_aux_lemma
thf(fact_100_diff__Suc__eq__diff__pred,axiom,
    ! [M: nat,N: nat] :
      ( ( minus_minus @ nat @ M @ ( suc @ N ) )
      = ( minus_minus @ nat @ ( minus_minus @ nat @ M @ ( one_one @ nat ) ) @ N ) ) ).

% diff_Suc_eq_diff_pred
thf(fact_101_not__less__less__Suc__eq,axiom,
    ! [N: nat,M: nat] :
      ( ~ ( ord_less @ nat @ N @ M )
     => ( ( ord_less @ nat @ N @ ( suc @ M ) )
        = ( N = M ) ) ) ).

% not_less_less_Suc_eq
thf(fact_102_strict__inc__induct,axiom,
    ! [I: nat,J: nat,P: nat > $o] :
      ( ( ord_less @ nat @ I @ J )
     => ( ! [I3: nat] :
            ( ( J
              = ( suc @ I3 ) )
           => ( P @ I3 ) )
       => ( ! [I3: nat] :
              ( ( ord_less @ nat @ I3 @ J )
             => ( ( P @ ( suc @ I3 ) )
               => ( P @ I3 ) ) )
         => ( P @ I ) ) ) ) ).

% strict_inc_induct
thf(fact_103_less__Suc__induct,axiom,
    ! [I: nat,J: nat,P: nat > nat > $o] :
      ( ( ord_less @ nat @ I @ J )
     => ( ! [I3: nat] : ( P @ I3 @ ( suc @ I3 ) )
       => ( ! [I3: nat,J2: nat,K: nat] :
              ( ( ord_less @ nat @ I3 @ J2 )
             => ( ( ord_less @ nat @ J2 @ K )
               => ( ( P @ I3 @ J2 )
                 => ( ( P @ J2 @ K )
                   => ( P @ I3 @ K ) ) ) ) )
         => ( P @ I @ J ) ) ) ) ).

% less_Suc_induct
thf(fact_104_less__trans__Suc,axiom,
    ! [I: nat,J: nat,K2: nat] :
      ( ( ord_less @ nat @ I @ J )
     => ( ( ord_less @ nat @ J @ K2 )
       => ( ord_less @ nat @ ( suc @ I ) @ K2 ) ) ) ).

% less_trans_Suc
thf(fact_105_Suc__less__SucD,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ ( suc @ M ) @ ( suc @ N ) )
     => ( ord_less @ nat @ M @ N ) ) ).

% Suc_less_SucD
thf(fact_106_less__antisym,axiom,
    ! [N: nat,M: nat] :
      ( ~ ( ord_less @ nat @ N @ M )
     => ( ( ord_less @ nat @ N @ ( suc @ M ) )
       => ( M = N ) ) ) ).

% less_antisym
thf(fact_107_Suc__less__eq2,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( suc @ N ) @ M )
      = ( ? [M5: nat] :
            ( ( M
              = ( suc @ M5 ) )
            & ( ord_less @ nat @ N @ M5 ) ) ) ) ).

% Suc_less_eq2
thf(fact_108_not__less__eq,axiom,
    ! [M: nat,N: nat] :
      ( ( ~ ( ord_less @ nat @ M @ N ) )
      = ( ord_less @ nat @ N @ ( suc @ M ) ) ) ).

% not_less_eq
thf(fact_109_less__Suc__eq,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ ( suc @ N ) )
      = ( ( ord_less @ nat @ M @ N )
        | ( M = N ) ) ) ).

% less_Suc_eq
thf(fact_110_less__SucI,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ord_less @ nat @ M @ ( suc @ N ) ) ) ).

% less_SucI
thf(fact_111_less__SucE,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ ( suc @ N ) )
     => ( ~ ( ord_less @ nat @ M @ N )
       => ( M = N ) ) ) ).

% less_SucE
thf(fact_112_Suc__lessI,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ( ( suc @ M )
         != N )
       => ( ord_less @ nat @ ( suc @ M ) @ N ) ) ) ).

% Suc_lessI
thf(fact_113_Suc__lessE,axiom,
    ! [I: nat,K2: nat] :
      ( ( ord_less @ nat @ ( suc @ I ) @ K2 )
     => ~ ! [J2: nat] :
            ( ( ord_less @ nat @ I @ J2 )
           => ( K2
             != ( suc @ J2 ) ) ) ) ).

% Suc_lessE
thf(fact_114_Suc__lessD,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ ( suc @ M ) @ N )
     => ( ord_less @ nat @ M @ N ) ) ).

% Suc_lessD
thf(fact_115_lessE,axiom,
    ! [I: nat,K2: nat] :
      ( ( ord_less @ nat @ I @ K2 )
     => ( ( K2
         != ( suc @ I ) )
       => ~ ! [J2: nat] :
              ( ( ord_less @ nat @ I @ J2 )
             => ( K2
               != ( suc @ J2 ) ) ) ) ) ).

% lessE
thf(fact_116_full__nat__induct,axiom,
    ! [P: nat > $o,N: nat] :
      ( ! [N3: nat] :
          ( ! [M3: nat] :
              ( ( ord_less_eq @ nat @ ( suc @ M3 ) @ N3 )
             => ( P @ M3 ) )
         => ( P @ N3 ) )
     => ( P @ N ) ) ).

% full_nat_induct
thf(fact_117_not__less__eq__eq,axiom,
    ! [M: nat,N: nat] :
      ( ( ~ ( ord_less_eq @ nat @ M @ N ) )
      = ( ord_less_eq @ nat @ ( suc @ N ) @ M ) ) ).

% not_less_eq_eq
thf(fact_118_Suc__n__not__le__n,axiom,
    ! [N: nat] :
      ~ ( ord_less_eq @ nat @ ( suc @ N ) @ N ) ).

% Suc_n_not_le_n
thf(fact_119_le__Suc__eq,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ ( suc @ N ) )
      = ( ( ord_less_eq @ nat @ M @ N )
        | ( M
          = ( suc @ N ) ) ) ) ).

% le_Suc_eq
thf(fact_120_Suc__le__D,axiom,
    ! [N: nat,M6: nat] :
      ( ( ord_less_eq @ nat @ ( suc @ N ) @ M6 )
     => ? [M4: nat] :
          ( M6
          = ( suc @ M4 ) ) ) ).

% Suc_le_D
thf(fact_121_le__SucI,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ord_less_eq @ nat @ M @ ( suc @ N ) ) ) ).

% le_SucI
thf(fact_122_le__SucE,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ ( suc @ N ) )
     => ( ~ ( ord_less_eq @ nat @ M @ N )
       => ( M
          = ( suc @ N ) ) ) ) ).

% le_SucE
thf(fact_123_Suc__leD,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ ( suc @ M ) @ N )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% Suc_leD
thf(fact_124_not0__implies__Suc,axiom,
    ! [N: nat] :
      ( ( N
       != ( zero_zero @ nat ) )
     => ? [M4: nat] :
          ( N
          = ( suc @ M4 ) ) ) ).

% not0_implies_Suc
thf(fact_125_old_Onat_Oinducts,axiom,
    ! [P: nat > $o,Nat: nat] :
      ( ( P @ ( zero_zero @ nat ) )
     => ( ! [Nat3: nat] :
            ( ( P @ Nat3 )
           => ( P @ ( suc @ Nat3 ) ) )
       => ( P @ Nat ) ) ) ).

% old.nat.inducts
thf(fact_126_old_Onat_Oexhaust,axiom,
    ! [Y: nat] :
      ( ( Y
       != ( zero_zero @ nat ) )
     => ~ ! [Nat3: nat] :
            ( Y
           != ( suc @ Nat3 ) ) ) ).

% old.nat.exhaust
thf(fact_127_Zero__not__Suc,axiom,
    ! [M: nat] :
      ( ( zero_zero @ nat )
     != ( suc @ M ) ) ).

% Zero_not_Suc
thf(fact_128_Zero__neq__Suc,axiom,
    ! [M: nat] :
      ( ( zero_zero @ nat )
     != ( suc @ M ) ) ).

% Zero_neq_Suc
thf(fact_129_Suc__neq__Zero,axiom,
    ! [M: nat] :
      ( ( suc @ M )
     != ( zero_zero @ nat ) ) ).

% Suc_neq_Zero
thf(fact_130_zero__induct,axiom,
    ! [P: nat > $o,K2: nat] :
      ( ( P @ K2 )
     => ( ! [N3: nat] :
            ( ( P @ ( suc @ N3 ) )
           => ( P @ N3 ) )
       => ( P @ ( zero_zero @ nat ) ) ) ) ).

% zero_induct
thf(fact_131_diff__induct,axiom,
    ! [P: nat > nat > $o,M: nat,N: nat] :
      ( ! [X4: nat] : ( P @ X4 @ ( zero_zero @ nat ) )
     => ( ! [Y4: nat] : ( P @ ( zero_zero @ nat ) @ ( suc @ Y4 ) )
       => ( ! [X4: nat,Y4: nat] :
              ( ( P @ X4 @ Y4 )
             => ( P @ ( suc @ X4 ) @ ( suc @ Y4 ) ) )
         => ( P @ M @ N ) ) ) ) ).

% diff_induct
thf(fact_132_nat__induct,axiom,
    ! [P: nat > $o,N: nat] :
      ( ( P @ ( zero_zero @ nat ) )
     => ( ! [N3: nat] :
            ( ( P @ N3 )
           => ( P @ ( suc @ N3 ) ) )
       => ( P @ N ) ) ) ).

% nat_induct
thf(fact_133_nat_OdiscI,axiom,
    ! [Nat: nat,X2: nat] :
      ( ( Nat
        = ( suc @ X2 ) )
     => ( Nat
       != ( zero_zero @ nat ) ) ) ).

% nat.discI
thf(fact_134_old_Onat_Odistinct_I1_J,axiom,
    ! [Nat2: nat] :
      ( ( zero_zero @ nat )
     != ( suc @ Nat2 ) ) ).

% old.nat.distinct(1)
thf(fact_135_old_Onat_Odistinct_I2_J,axiom,
    ! [Nat4: nat] :
      ( ( suc @ Nat4 )
     != ( zero_zero @ nat ) ) ).

% old.nat.distinct(2)
thf(fact_136_nat_Odistinct_I1_J,axiom,
    ! [X2: nat] :
      ( ( zero_zero @ nat )
     != ( suc @ X2 ) ) ).

% nat.distinct(1)
thf(fact_137_less__imp__diff__less,axiom,
    ! [J: nat,K2: nat,N: nat] :
      ( ( ord_less @ nat @ J @ K2 )
     => ( ord_less @ nat @ ( minus_minus @ nat @ J @ N ) @ K2 ) ) ).

% less_imp_diff_less
thf(fact_138_diff__less__mono2,axiom,
    ! [M: nat,N: nat,L: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ( ord_less @ nat @ M @ L )
       => ( ord_less @ nat @ ( minus_minus @ nat @ L @ N ) @ ( minus_minus @ nat @ L @ M ) ) ) ) ).

% diff_less_mono2
thf(fact_139_diff__le__mono2,axiom,
    ! [M: nat,N: nat,L: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ord_less_eq @ nat @ ( minus_minus @ nat @ L @ N ) @ ( minus_minus @ nat @ L @ M ) ) ) ).

% diff_le_mono2
thf(fact_140_le__diff__iff_H,axiom,
    ! [A3: nat,C: nat,B3: nat] :
      ( ( ord_less_eq @ nat @ A3 @ C )
     => ( ( ord_less_eq @ nat @ B3 @ C )
       => ( ( ord_less_eq @ nat @ ( minus_minus @ nat @ C @ A3 ) @ ( minus_minus @ nat @ C @ B3 ) )
          = ( ord_less_eq @ nat @ B3 @ A3 ) ) ) ) ).

% le_diff_iff'
thf(fact_141_diff__le__self,axiom,
    ! [M: nat,N: nat] : ( ord_less_eq @ nat @ ( minus_minus @ nat @ M @ N ) @ M ) ).

% diff_le_self
thf(fact_142_diff__le__mono,axiom,
    ! [M: nat,N: nat,L: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ord_less_eq @ nat @ ( minus_minus @ nat @ M @ L ) @ ( minus_minus @ nat @ N @ L ) ) ) ).

% diff_le_mono
thf(fact_143_Nat_Odiff__diff__eq,axiom,
    ! [K2: nat,M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ K2 @ M )
     => ( ( ord_less_eq @ nat @ K2 @ N )
       => ( ( minus_minus @ nat @ ( minus_minus @ nat @ M @ K2 ) @ ( minus_minus @ nat @ N @ K2 ) )
          = ( minus_minus @ nat @ M @ N ) ) ) ) ).

% Nat.diff_diff_eq
thf(fact_144_le__diff__iff,axiom,
    ! [K2: nat,M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ K2 @ M )
     => ( ( ord_less_eq @ nat @ K2 @ N )
       => ( ( ord_less_eq @ nat @ ( minus_minus @ nat @ M @ K2 ) @ ( minus_minus @ nat @ N @ K2 ) )
          = ( ord_less_eq @ nat @ M @ N ) ) ) ) ).

% le_diff_iff
thf(fact_145_eq__diff__iff,axiom,
    ! [K2: nat,M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ K2 @ M )
     => ( ( ord_less_eq @ nat @ K2 @ N )
       => ( ( ( minus_minus @ nat @ M @ K2 )
            = ( minus_minus @ nat @ N @ K2 ) )
          = ( M = N ) ) ) ) ).

% eq_diff_iff
thf(fact_146_minus__nat_Odiff__0,axiom,
    ! [M: nat] :
      ( ( minus_minus @ nat @ M @ ( zero_zero @ nat ) )
      = M ) ).

% minus_nat.diff_0
thf(fact_147_diffs0__imp__equal,axiom,
    ! [M: nat,N: nat] :
      ( ( ( minus_minus @ nat @ M @ N )
        = ( zero_zero @ nat ) )
     => ( ( ( minus_minus @ nat @ N @ M )
          = ( zero_zero @ nat ) )
       => ( M = N ) ) ) ).

% diffs0_imp_equal
thf(fact_148_diff__Suc__less,axiom,
    ! [N: nat,I: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ord_less @ nat @ ( minus_minus @ nat @ N @ ( suc @ I ) ) @ N ) ) ).

% diff_Suc_less
thf(fact_149_fun__diff__def,axiom,
    ! [B: $tType,A: $tType] :
      ( ( minus @ B @ ( type2 @ B ) )
     => ( ( minus_minus @ ( A > B ) )
        = ( ^ [A2: A > B,B2: A > B,X: A] : ( minus_minus @ B @ ( A2 @ X ) @ ( B2 @ X ) ) ) ) ) ).

% fun_diff_def
thf(fact_150_n__not__Suc__n,axiom,
    ! [N: nat] :
      ( N
     != ( suc @ N ) ) ).

% n_not_Suc_n
thf(fact_151_Suc__inject,axiom,
    ! [X3: nat,Y: nat] :
      ( ( ( suc @ X3 )
        = ( suc @ Y ) )
     => ( X3 = Y ) ) ).

% Suc_inject
thf(fact_152_diff__commute,axiom,
    ! [I: nat,J: nat,K2: nat] :
      ( ( minus_minus @ nat @ ( minus_minus @ nat @ I @ J ) @ K2 )
      = ( minus_minus @ nat @ ( minus_minus @ nat @ I @ K2 ) @ J ) ) ).

% diff_commute
thf(fact_153_diff__less__Suc,axiom,
    ! [M: nat,N: nat] : ( ord_less @ nat @ ( minus_minus @ nat @ M @ N ) @ ( suc @ M ) ) ).

% diff_less_Suc
thf(fact_154_Suc__diff__Suc,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ N @ M )
     => ( ( suc @ ( minus_minus @ nat @ M @ ( suc @ N ) ) )
        = ( minus_minus @ nat @ M @ N ) ) ) ).

% Suc_diff_Suc
thf(fact_155_Suc__diff__le,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less_eq @ nat @ N @ M )
     => ( ( minus_minus @ nat @ ( suc @ M ) @ N )
        = ( suc @ ( minus_minus @ nat @ M @ N ) ) ) ) ).

% Suc_diff_le
thf(fact_156_zero__induct__lemma,axiom,
    ! [P: nat > $o,K2: nat,I: nat] :
      ( ( P @ K2 )
     => ( ! [N3: nat] :
            ( ( P @ ( suc @ N3 ) )
           => ( P @ N3 ) )
       => ( P @ ( minus_minus @ nat @ K2 @ I ) ) ) ) ).

% zero_induct_lemma
thf(fact_157__C2_OIH_C_I4_J,axiom,
    ! [X3: rBT_Im246033960le_rbt @ a @ b,Y: list @ ( product_prod @ a @ b ),X21: product_prod @ a @ b,X22: list @ ( product_prod @ a @ b ),Xa: a,Ya: b] :
      ( ~ ( ( na
            = ( zero_zero @ nat ) )
          | ( na
            = ( one_one @ nat ) ) )
     => ( ( ( div_mod @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
         != ( zero_zero @ nat ) )
       => ( ( ( product_Pair @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ X3 @ Y )
            = ( rBT_Im175104035eify_f @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa ) )
         => ( ( Y
              = ( cons @ ( product_prod @ a @ b ) @ X21 @ X22 ) )
           => ( ( ( product_Pair @ a @ b @ Xa @ Ya )
                = X21 )
             => ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) )
               => ( ( ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ X22 ) ) )
                 => ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ X22 ) ) )
                    = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ X22 ) ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ) ) ) ) ) ) ) ).

% "2.IH"(4)
thf(fact_158_IH_I4_J,axiom,
    ! [X3: rBT_Im246033960le_rbt @ a @ b,Y: list @ ( product_prod @ a @ b ),X21: product_prod @ a @ b,X22: list @ ( product_prod @ a @ b ),Xa: a,Ya: b] :
      ( ( ( div_mod @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
       != ( zero_zero @ nat ) )
     => ( ( ( product_Pair @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ X3 @ Y )
          = ( rBT_Im175104035eify_f @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa ) )
       => ( ( Y
            = ( cons @ ( product_prod @ a @ b ) @ X21 @ X22 ) )
         => ( ( ( product_Pair @ a @ b @ Xa @ Ya )
              = X21 )
           => ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) )
             => ( ( ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ X22 ) ) )
               => ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104036eify_g @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ X22 ) ) )
                  = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ X22 ) ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ) ) ) ) ) ) ).

% IH(4)
thf(fact_159_IH_I3_J,axiom,
    ( ( ( div_mod @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
     != ( zero_zero @ nat ) )
   => ( ( ord_less_eq @ nat @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) )
     => ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104035eify_f @ a @ b @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) @ kvsa ) ) )
        = ( minus_minus @ nat @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) @ ( divide_divide @ nat @ na @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ) ) ).

% IH(3)
thf(fact_160_mod2__gr__0,axiom,
    ! [M: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( div_mod @ nat @ M @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) )
      = ( ( div_mod @ nat @ M @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
        = ( one_one @ nat ) ) ) ).

% mod2_gr_0
thf(fact_161_not__mod__2__eq__0__eq__1,axiom,
    ! [A: $tType] :
      ( ( semiring_div_parity @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( ( div_mod @ A @ A3 @ ( numeral_numeral @ A @ ( bit0 @ one ) ) )
           != ( zero_zero @ A ) )
          = ( ( div_mod @ A @ A3 @ ( numeral_numeral @ A @ ( bit0 @ one ) ) )
            = ( one_one @ A ) ) ) ) ).

% not_mod_2_eq_0_eq_1
thf(fact_162_not__mod__2__eq__1__eq__0,axiom,
    ! [A: $tType] :
      ( ( semiring_div_parity @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( ( div_mod @ A @ A3 @ ( numeral_numeral @ A @ ( bit0 @ one ) ) )
           != ( one_one @ A ) )
          = ( ( div_mod @ A @ A3 @ ( numeral_numeral @ A @ ( bit0 @ one ) ) )
            = ( zero_zero @ A ) ) ) ) ).

% not_mod_2_eq_1_eq_0
thf(fact_163_one__div__two__eq__zero,axiom,
    ! [A: $tType] :
      ( ( semiring_div_parity @ A @ ( type2 @ A ) )
     => ( ( divide_divide @ A @ ( one_one @ A ) @ ( numeral_numeral @ A @ ( bit0 @ one ) ) )
        = ( zero_zero @ A ) ) ) ).

% one_div_two_eq_zero
thf(fact_164_mod2__Suc__Suc,axiom,
    ! [M: nat] :
      ( ( div_mod @ nat @ ( suc @ ( suc @ M ) ) @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
      = ( div_mod @ nat @ M @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ).

% mod2_Suc_Suc
thf(fact_165_div2__Suc__Suc,axiom,
    ! [M: nat] :
      ( ( divide_divide @ nat @ ( suc @ ( suc @ M ) ) @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) )
      = ( suc @ ( divide_divide @ nat @ M @ ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ) ) ).

% div2_Suc_Suc
thf(fact_166_Suc__1,axiom,
    ( ( suc @ ( one_one @ nat ) )
    = ( numeral_numeral @ nat @ ( bit0 @ one ) ) ) ).

% Suc_1
thf(fact_167_zdiv__numeral__Bit0,axiom,
    ! [V4: num,W: num] :
      ( ( divide_divide @ int @ ( numeral_numeral @ int @ ( bit0 @ V4 ) ) @ ( numeral_numeral @ int @ ( bit0 @ W ) ) )
      = ( divide_divide @ int @ ( numeral_numeral @ int @ V4 ) @ ( numeral_numeral @ int @ W ) ) ) ).

% zdiv_numeral_Bit0
thf(fact_168_num_Oinject_I1_J,axiom,
    ! [X2: num,Y2: num] :
      ( ( ( bit0 @ X2 )
        = ( bit0 @ Y2 ) )
      = ( X2 = Y2 ) ) ).

% num.inject(1)
thf(fact_169_numeral__eq__iff,axiom,
    ! [A: $tType] :
      ( ( semiring_char_0 @ A @ ( type2 @ A ) )
     => ! [M: num,N: num] :
          ( ( ( numeral_numeral @ A @ M )
            = ( numeral_numeral @ A @ N ) )
          = ( M = N ) ) ) ).

% numeral_eq_iff
thf(fact_170_mod__mod__trivial,axiom,
    ! [A: $tType] :
      ( ( semiring_div @ A @ ( type2 @ A ) )
     => ! [A3: A,B3: A] :
          ( ( div_mod @ A @ ( div_mod @ A @ A3 @ B3 ) @ B3 )
          = ( div_mod @ A @ A3 @ B3 ) ) ) ).

% mod_mod_trivial
thf(fact_171_numeral__le__iff,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [M: num,N: num] :
          ( ( ord_less_eq @ A @ ( numeral_numeral @ A @ M ) @ ( numeral_numeral @ A @ N ) )
          = ( ord_less_eq @ num @ M @ N ) ) ) ).

% numeral_le_iff
thf(fact_172_numeral__less__iff,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [M: num,N: num] :
          ( ( ord_less @ A @ ( numeral_numeral @ A @ M ) @ ( numeral_numeral @ A @ N ) )
          = ( ord_less @ num @ M @ N ) ) ) ).

% numeral_less_iff
thf(fact_173_div__by__0,axiom,
    ! [A: $tType] :
      ( ( semiring_div @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( divide_divide @ A @ A3 @ ( zero_zero @ A ) )
          = ( zero_zero @ A ) ) ) ).

% div_by_0
thf(fact_174_div__0,axiom,
    ! [A: $tType] :
      ( ( semiring_div @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( divide_divide @ A @ ( zero_zero @ A ) @ A3 )
          = ( zero_zero @ A ) ) ) ).

% div_0
thf(fact_175_mod__self,axiom,
    ! [A: $tType] :
      ( ( semiring_div @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( div_mod @ A @ A3 @ A3 )
          = ( zero_zero @ A ) ) ) ).

% mod_self
thf(fact_176_mod__by__0,axiom,
    ! [A: $tType] :
      ( ( semiring_div @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( div_mod @ A @ A3 @ ( zero_zero @ A ) )
          = A3 ) ) ).

% mod_by_0
thf(fact_177_mod__0,axiom,
    ! [A: $tType] :
      ( ( semiring_div @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( div_mod @ A @ ( zero_zero @ A ) @ A3 )
          = ( zero_zero @ A ) ) ) ).

% mod_0
thf(fact_178_minus__mod__self2,axiom,
    ! [A: $tType] :
      ( ( ring_div @ A @ ( type2 @ A ) )
     => ! [A3: A,B3: A] :
          ( ( div_mod @ A @ ( minus_minus @ A @ A3 @ B3 ) @ B3 )
          = ( div_mod @ A @ A3 @ B3 ) ) ) ).

% minus_mod_self2
thf(fact_179_Divides_Omod__less,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ( div_mod @ nat @ M @ N )
        = M ) ) ).

% Divides.mod_less
thf(fact_180_diff__numeral__special_I9_J,axiom,
    ! [A: $tType] :
      ( ( neg_numeral @ A @ ( type2 @ A ) )
     => ( ( minus_minus @ A @ ( one_one @ A ) @ ( one_one @ A ) )
        = ( zero_zero @ A ) ) ) ).

% diff_numeral_special(9)
thf(fact_181_one__eq__numeral__iff,axiom,
    ! [A: $tType] :
      ( ( semiring_char_0 @ A @ ( type2 @ A ) )
     => ! [N: num] :
          ( ( ( one_one @ A )
            = ( numeral_numeral @ A @ N ) )
          = ( one = N ) ) ) ).

% one_eq_numeral_iff
thf(fact_182_numeral__eq__one__iff,axiom,
    ! [A: $tType] :
      ( ( semiring_char_0 @ A @ ( type2 @ A ) )
     => ! [N: num] :
          ( ( ( numeral_numeral @ A @ N )
            = ( one_one @ A ) )
          = ( N = one ) ) ) ).

% numeral_eq_one_iff
thf(fact_183_mod__by__1,axiom,
    ! [A: $tType] :
      ( ( semiring_div @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( div_mod @ A @ A3 @ ( one_one @ A ) )
          = ( zero_zero @ A ) ) ) ).

% mod_by_1
thf(fact_184_mod__div__trivial,axiom,
    ! [A: $tType] :
      ( ( semiring_div @ A @ ( type2 @ A ) )
     => ! [A3: A,B3: A] :
          ( ( divide_divide @ A @ ( div_mod @ A @ A3 @ B3 ) @ B3 )
          = ( zero_zero @ A ) ) ) ).

% mod_div_trivial
thf(fact_185_div__1,axiom,
    ! [M: nat] :
      ( ( divide_divide @ nat @ M @ ( suc @ ( zero_zero @ nat ) ) )
      = M ) ).

% div_1
thf(fact_186_mod__1,axiom,
    ! [M: nat] :
      ( ( div_mod @ nat @ M @ ( suc @ ( zero_zero @ nat ) ) )
      = ( zero_zero @ nat ) ) ).

% mod_1
thf(fact_187_Divides_Odiv__less,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ( divide_divide @ nat @ M @ N )
        = ( zero_zero @ nat ) ) ) ).

% Divides.div_less
thf(fact_188_numeral__le__one__iff,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [N: num] :
          ( ( ord_less_eq @ A @ ( numeral_numeral @ A @ N ) @ ( one_one @ A ) )
          = ( ord_less_eq @ num @ N @ one ) ) ) ).

% numeral_le_one_iff
thf(fact_189_one__less__numeral__iff,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [N: num] :
          ( ( ord_less @ A @ ( one_one @ A ) @ ( numeral_numeral @ A @ N ) )
          = ( ord_less @ num @ one @ N ) ) ) ).

% one_less_numeral_iff
thf(fact_190_one__mod__two__eq__one,axiom,
    ! [A: $tType] :
      ( ( semiring_div_parity @ A @ ( type2 @ A ) )
     => ( ( div_mod @ A @ ( one_one @ A ) @ ( numeral_numeral @ A @ ( bit0 @ one ) ) )
        = ( one_one @ A ) ) ) ).

% one_mod_two_eq_one
thf(fact_191_le__num__One__iff,axiom,
    ! [X3: num] :
      ( ( ord_less_eq @ num @ X3 @ one )
      = ( X3 = one ) ) ).

% le_num_One_iff
thf(fact_192_le__numeral__extra_I3_J,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ( ord_less_eq @ A @ ( zero_zero @ A ) @ ( zero_zero @ A ) ) ) ).

% le_numeral_extra(3)
thf(fact_193_less__numeral__extra_I3_J,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ~ ( ord_less @ A @ ( zero_zero @ A ) @ ( zero_zero @ A ) ) ) ).

% less_numeral_extra(3)
thf(fact_194_zero__neq__numeral,axiom,
    ! [A: $tType] :
      ( ( semiring_char_0 @ A @ ( type2 @ A ) )
     => ! [N: num] :
          ( ( zero_zero @ A )
         != ( numeral_numeral @ A @ N ) ) ) ).

% zero_neq_numeral
thf(fact_195_num_Odistinct_I1_J,axiom,
    ! [X2: num] :
      ( one
     != ( bit0 @ X2 ) ) ).

% num.distinct(1)
thf(fact_196_le__numeral__extra_I4_J,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ( ord_less_eq @ A @ ( one_one @ A ) @ ( one_one @ A ) ) ) ).

% le_numeral_extra(4)
thf(fact_197_less__numeral__extra_I4_J,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ~ ( ord_less @ A @ ( one_one @ A ) @ ( one_one @ A ) ) ) ).

% less_numeral_extra(4)
thf(fact_198_div__by__1,axiom,
    ! [A: $tType] :
      ( ( semiring_div @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( divide_divide @ A @ A3 @ ( one_one @ A ) )
          = A3 ) ) ).

% div_by_1
thf(fact_199_mod__diff__eq,axiom,
    ! [A: $tType] :
      ( ( ring_div @ A @ ( type2 @ A ) )
     => ! [A3: A,B3: A,C: A] :
          ( ( div_mod @ A @ ( minus_minus @ A @ A3 @ B3 ) @ C )
          = ( div_mod @ A @ ( minus_minus @ A @ ( div_mod @ A @ A3 @ C ) @ ( div_mod @ A @ B3 @ C ) ) @ C ) ) ) ).

% mod_diff_eq
thf(fact_200_mod__diff__cong,axiom,
    ! [A: $tType] :
      ( ( ring_div @ A @ ( type2 @ A ) )
     => ! [A3: A,C: A,A4: A,B3: A,B4: A] :
          ( ( ( div_mod @ A @ A3 @ C )
            = ( div_mod @ A @ A4 @ C ) )
         => ( ( ( div_mod @ A @ B3 @ C )
              = ( div_mod @ A @ B4 @ C ) )
           => ( ( div_mod @ A @ ( minus_minus @ A @ A3 @ B3 ) @ C )
              = ( div_mod @ A @ ( minus_minus @ A @ A4 @ B4 ) @ C ) ) ) ) ) ).

% mod_diff_cong
thf(fact_201_mod__diff__left__eq,axiom,
    ! [A: $tType] :
      ( ( ring_div @ A @ ( type2 @ A ) )
     => ! [A3: A,B3: A,C: A] :
          ( ( div_mod @ A @ ( minus_minus @ A @ A3 @ B3 ) @ C )
          = ( div_mod @ A @ ( minus_minus @ A @ ( div_mod @ A @ A3 @ C ) @ B3 ) @ C ) ) ) ).

% mod_diff_left_eq
thf(fact_202_mod__diff__right__eq,axiom,
    ! [A: $tType] :
      ( ( ring_div @ A @ ( type2 @ A ) )
     => ! [A3: A,B3: A,C: A] :
          ( ( div_mod @ A @ ( minus_minus @ A @ A3 @ B3 ) @ C )
          = ( div_mod @ A @ ( minus_minus @ A @ A3 @ ( div_mod @ A @ B3 @ C ) ) @ C ) ) ) ).

% mod_diff_right_eq
thf(fact_203_mod__Suc__eq__Suc__mod,axiom,
    ! [M: nat,N: nat] :
      ( ( div_mod @ nat @ ( suc @ M ) @ N )
      = ( div_mod @ nat @ ( suc @ ( div_mod @ nat @ M @ N ) ) @ N ) ) ).

% mod_Suc_eq_Suc_mod
thf(fact_204_div__le__dividend,axiom,
    ! [M: nat,N: nat] : ( ord_less_eq @ nat @ ( divide_divide @ nat @ M @ N ) @ M ) ).

% div_le_dividend
thf(fact_205_div__le__mono,axiom,
    ! [M: nat,N: nat,K2: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ord_less_eq @ nat @ ( divide_divide @ nat @ M @ K2 ) @ ( divide_divide @ nat @ N @ K2 ) ) ) ).

% div_le_mono
thf(fact_206_Divides_Omod__less__eq__dividend,axiom,
    ! [M: nat,N: nat] : ( ord_less_eq @ nat @ ( div_mod @ nat @ M @ N ) @ M ) ).

% Divides.mod_less_eq_dividend
thf(fact_207_not__numeral__le__zero,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [N: num] :
          ~ ( ord_less_eq @ A @ ( numeral_numeral @ A @ N ) @ ( zero_zero @ A ) ) ) ).

% not_numeral_le_zero
thf(fact_208_zero__le__numeral,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [N: num] : ( ord_less_eq @ A @ ( zero_zero @ A ) @ ( numeral_numeral @ A @ N ) ) ) ).

% zero_le_numeral
thf(fact_209_not__numeral__less__zero,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [N: num] :
          ~ ( ord_less @ A @ ( numeral_numeral @ A @ N ) @ ( zero_zero @ A ) ) ) ).

% not_numeral_less_zero
thf(fact_210_zero__less__numeral,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [N: num] : ( ord_less @ A @ ( zero_zero @ A ) @ ( numeral_numeral @ A @ N ) ) ) ).

% zero_less_numeral
thf(fact_211_le__numeral__extra_I1_J,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ( ord_less_eq @ A @ ( zero_zero @ A ) @ ( one_one @ A ) ) ) ).

% le_numeral_extra(1)
thf(fact_212_le__numeral__extra_I2_J,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ~ ( ord_less_eq @ A @ ( one_one @ A ) @ ( zero_zero @ A ) ) ) ).

% le_numeral_extra(2)
thf(fact_213_less__numeral__extra_I1_J,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ( ord_less @ A @ ( zero_zero @ A ) @ ( one_one @ A ) ) ) ).

% less_numeral_extra(1)
thf(fact_214_less__numeral__extra_I2_J,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ~ ( ord_less @ A @ ( one_one @ A ) @ ( zero_zero @ A ) ) ) ).

% less_numeral_extra(2)
thf(fact_215_one__le__numeral,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [N: num] : ( ord_less_eq @ A @ ( one_one @ A ) @ ( numeral_numeral @ A @ N ) ) ) ).

% one_le_numeral
thf(fact_216_not__numeral__less__one,axiom,
    ! [A: $tType] :
      ( ( linordered_semidom @ A @ ( type2 @ A ) )
     => ! [N: num] :
          ~ ( ord_less @ A @ ( numeral_numeral @ A @ N ) @ ( one_one @ A ) ) ) ).

% not_numeral_less_one
thf(fact_217_semiring__numeral__div__class_Omod__less__eq__dividend,axiom,
    ! [A: $tType] :
      ( ( semiring_numeral_div @ A @ ( type2 @ A ) )
     => ! [A3: A,B3: A] :
          ( ( ord_less_eq @ A @ ( zero_zero @ A ) @ A3 )
         => ( ord_less_eq @ A @ ( div_mod @ A @ A3 @ B3 ) @ A3 ) ) ) ).

% semiring_numeral_div_class.mod_less_eq_dividend
thf(fact_218_semiring__numeral__div__class_Opos__mod__bound,axiom,
    ! [A: $tType] :
      ( ( semiring_numeral_div @ A @ ( type2 @ A ) )
     => ! [B3: A,A3: A] :
          ( ( ord_less @ A @ ( zero_zero @ A ) @ B3 )
         => ( ord_less @ A @ ( div_mod @ A @ A3 @ B3 ) @ B3 ) ) ) ).

% semiring_numeral_div_class.pos_mod_bound
thf(fact_219_numeral__One,axiom,
    ! [A: $tType] :
      ( ( numeral @ A @ ( type2 @ A ) )
     => ( ( numeral_numeral @ A @ one )
        = ( one_one @ A ) ) ) ).

% numeral_One
thf(fact_220_divide__numeral__1,axiom,
    ! [A: $tType] :
      ( ( field @ A @ ( type2 @ A ) )
     => ! [A3: A] :
          ( ( divide_divide @ A @ A3 @ ( numeral_numeral @ A @ one ) )
          = A3 ) ) ).

% divide_numeral_1
thf(fact_221_cut__eq__simps_I9_J,axiom,
    ! [M: num,Q: num,N: num] :
      ( ( ( div_mod @ nat @ ( numeral_numeral @ nat @ ( bit0 @ M ) ) @ ( numeral_numeral @ nat @ ( bit0 @ Q ) ) )
        = ( div_mod @ nat @ ( numeral_numeral @ nat @ ( bit0 @ N ) ) @ ( numeral_numeral @ nat @ ( bit0 @ Q ) ) ) )
      = ( ( div_mod @ nat @ ( numeral_numeral @ nat @ M ) @ ( numeral_numeral @ nat @ Q ) )
        = ( div_mod @ nat @ ( numeral_numeral @ nat @ N ) @ ( numeral_numeral @ nat @ Q ) ) ) ) ).

% cut_eq_simps(9)
thf(fact_222_numerals_I1_J,axiom,
    ( ( numeral_numeral @ nat @ one )
    = ( one_one @ nat ) ) ).

% numerals(1)
thf(fact_223_cut__eq__simps_I4_J,axiom,
    ! [M: num,N: num] :
      ( ( div_mod @ nat @ ( numeral_numeral @ nat @ M ) @ ( numeral_numeral @ nat @ one ) )
      = ( div_mod @ nat @ ( numeral_numeral @ nat @ N ) @ ( numeral_numeral @ nat @ one ) ) ) ).

% cut_eq_simps(4)
thf(fact_224_mod__Suc,axiom,
    ! [M: nat,N: nat] :
      ( ( ( ( suc @ ( div_mod @ nat @ M @ N ) )
          = N )
       => ( ( div_mod @ nat @ ( suc @ M ) @ N )
          = ( zero_zero @ nat ) ) )
      & ( ( ( suc @ ( div_mod @ nat @ M @ N ) )
         != N )
       => ( ( div_mod @ nat @ ( suc @ M ) @ N )
          = ( suc @ ( div_mod @ nat @ M @ N ) ) ) ) ) ).

% mod_Suc
thf(fact_225_div__eq__0__iff,axiom,
    ! [A3: nat,B3: nat] :
      ( ( ( divide_divide @ nat @ A3 @ B3 )
        = ( zero_zero @ nat ) )
      = ( ( ord_less @ nat @ A3 @ B3 )
        | ( B3
          = ( zero_zero @ nat ) ) ) ) ).

% div_eq_0_iff
thf(fact_226_mod__less__divisor,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ord_less @ nat @ ( div_mod @ nat @ M @ N ) @ N ) ) ).

% mod_less_divisor
thf(fact_227_mod__induct,axiom,
    ! [P2: nat,P: nat > $o,I: nat,J: nat] :
      ( ! [I3: nat] :
          ( ( ord_less @ nat @ I3 @ P2 )
         => ( ( P @ I3 )
           => ( P @ ( div_mod @ nat @ ( suc @ I3 ) @ P2 ) ) ) )
     => ( ( P @ I )
       => ( ( ord_less @ nat @ I @ P2 )
         => ( ( ord_less @ nat @ J @ P2 )
           => ( P @ J ) ) ) ) ) ).

% mod_induct
thf(fact_228_Suc__div__le__mono,axiom,
    ! [N: nat,K2: nat] : ( ord_less_eq @ nat @ ( divide_divide @ nat @ N @ K2 ) @ ( divide_divide @ nat @ ( suc @ N ) @ K2 ) ) ).

% Suc_div_le_mono
thf(fact_229_mod__Suc__le__divisor,axiom,
    ! [M: nat,N: nat] : ( ord_less_eq @ nat @ ( div_mod @ nat @ M @ ( suc @ N ) ) @ N ) ).

% mod_Suc_le_divisor
thf(fact_230_mod__if,axiom,
    ( ( div_mod @ nat )
    = ( ^ [M2: nat,N2: nat] : ( if @ nat @ ( ord_less @ nat @ M2 @ N2 ) @ M2 @ ( div_mod @ nat @ ( minus_minus @ nat @ M2 @ N2 ) @ N2 ) ) ) ) ).

% mod_if
thf(fact_231_mod__geq,axiom,
    ! [M: nat,N: nat] :
      ( ~ ( ord_less @ nat @ M @ N )
     => ( ( div_mod @ nat @ M @ N )
        = ( div_mod @ nat @ ( minus_minus @ nat @ M @ N ) @ N ) ) ) ).

% mod_geq
thf(fact_232_le__mod__geq,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less_eq @ nat @ N @ M )
     => ( ( div_mod @ nat @ M @ N )
        = ( div_mod @ nat @ ( minus_minus @ nat @ M @ N ) @ N ) ) ) ).

% le_mod_geq
thf(fact_233_div__eq__dividend__iff,axiom,
    ! [A3: nat,B3: nat] :
      ( ( A3
       != ( zero_zero @ nat ) )
     => ( ( ( divide_divide @ nat @ A3 @ B3 )
          = A3 )
        = ( B3
          = ( one_one @ nat ) ) ) ) ).

% div_eq_dividend_iff
thf(fact_234_semiring__numeral__div__class_Odiv__positive,axiom,
    ! [A: $tType] :
      ( ( semiring_numeral_div @ A @ ( type2 @ A ) )
     => ! [B3: A,A3: A] :
          ( ( ord_less @ A @ ( zero_zero @ A ) @ B3 )
         => ( ( ord_less_eq @ A @ B3 @ A3 )
           => ( ord_less @ A @ ( zero_zero @ A ) @ ( divide_divide @ A @ A3 @ B3 ) ) ) ) ) ).

% semiring_numeral_div_class.div_positive
thf(fact_235_semiring__numeral__div__class_Odiv__less,axiom,
    ! [A: $tType] :
      ( ( semiring_numeral_div @ A @ ( type2 @ A ) )
     => ! [A3: A,B3: A] :
          ( ( ord_less_eq @ A @ ( zero_zero @ A ) @ A3 )
         => ( ( ord_less @ A @ A3 @ B3 )
           => ( ( divide_divide @ A @ A3 @ B3 )
              = ( zero_zero @ A ) ) ) ) ) ).

% semiring_numeral_div_class.div_less
thf(fact_236_zero__not__eq__two,axiom,
    ! [A: $tType] :
      ( ( semiring_div_parity @ A @ ( type2 @ A ) )
     => ( ( zero_zero @ A )
       != ( numeral_numeral @ A @ ( bit0 @ one ) ) ) ) ).

% zero_not_eq_two
thf(fact_237_semiring__numeral__div__class_Opos__mod__sign,axiom,
    ! [A: $tType] :
      ( ( semiring_numeral_div @ A @ ( type2 @ A ) )
     => ! [B3: A,A3: A] :
          ( ( ord_less @ A @ ( zero_zero @ A ) @ B3 )
         => ( ord_less_eq @ A @ ( zero_zero @ A ) @ ( div_mod @ A @ A3 @ B3 ) ) ) ) ).

% semiring_numeral_div_class.pos_mod_sign
thf(fact_238_semiring__numeral__div__class_Omod__less,axiom,
    ! [A: $tType] :
      ( ( semiring_numeral_div @ A @ ( type2 @ A ) )
     => ! [A3: A,B3: A] :
          ( ( ord_less_eq @ A @ ( zero_zero @ A ) @ A3 )
         => ( ( ord_less @ A @ A3 @ B3 )
           => ( ( div_mod @ A @ A3 @ B3 )
              = A3 ) ) ) ) ).

% semiring_numeral_div_class.mod_less
thf(fact_239_numeral__1__eq__Suc__0,axiom,
    ( ( numeral_numeral @ nat @ one )
    = ( suc @ ( zero_zero @ nat ) ) ) ).

% numeral_1_eq_Suc_0
thf(fact_240_cut__eq__simps_I6_J,axiom,
    ! [Q: num,N: num] :
      ( ( div_mod @ nat @ ( numeral_numeral @ nat @ one ) @ ( numeral_numeral @ nat @ ( bit0 @ Q ) ) )
     != ( div_mod @ nat @ ( numeral_numeral @ nat @ ( bit0 @ N ) ) @ ( numeral_numeral @ nat @ ( bit0 @ Q ) ) ) ) ).

% cut_eq_simps(6)
thf(fact_241_cut__eq__simps_I8_J,axiom,
    ! [M: num,Q: num] :
      ( ( div_mod @ nat @ ( numeral_numeral @ nat @ ( bit0 @ M ) ) @ ( numeral_numeral @ nat @ ( bit0 @ Q ) ) )
     != ( div_mod @ nat @ ( numeral_numeral @ nat @ one ) @ ( numeral_numeral @ nat @ ( bit0 @ Q ) ) ) ) ).

% cut_eq_simps(8)
thf(fact_242_cut__eq__simps_I2_J,axiom,
    ! [N: num,Q: num] :
      ( ( ( div_mod @ nat @ ( numeral_numeral @ nat @ ( bit0 @ N ) ) @ ( numeral_numeral @ nat @ ( bit0 @ Q ) ) )
        = ( zero_zero @ nat ) )
      = ( ( div_mod @ nat @ ( numeral_numeral @ nat @ N ) @ ( numeral_numeral @ nat @ Q ) )
        = ( zero_zero @ nat ) ) ) ).

% cut_eq_simps(2)
thf(fact_243_cut__eq__simps_I1_J,axiom,
    ! [N: num] :
      ( ( div_mod @ nat @ ( numeral_numeral @ nat @ N ) @ ( numeral_numeral @ nat @ one ) )
      = ( zero_zero @ nat ) ) ).

% cut_eq_simps(1)
thf(fact_244_mod__induct__0,axiom,
    ! [P2: nat,P: nat > $o,I: nat] :
      ( ! [I3: nat] :
          ( ( ord_less @ nat @ I3 @ P2 )
         => ( ( P @ I3 )
           => ( P @ ( div_mod @ nat @ ( suc @ I3 ) @ P2 ) ) ) )
     => ( ( P @ I )
       => ( ( ord_less @ nat @ I @ P2 )
         => ( P @ ( zero_zero @ nat ) ) ) ) ) ).

% mod_induct_0
thf(fact_245_Divides_Odiv__positive,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ( ord_less_eq @ nat @ N @ M )
       => ( ord_less @ nat @ ( zero_zero @ nat ) @ ( divide_divide @ nat @ M @ N ) ) ) ) ).

% Divides.div_positive
thf(fact_246_div__le__mono2,axiom,
    ! [M: nat,N: nat,K2: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ M )
     => ( ( ord_less_eq @ nat @ M @ N )
       => ( ord_less_eq @ nat @ ( divide_divide @ nat @ K2 @ N ) @ ( divide_divide @ nat @ K2 @ M ) ) ) ) ).

% div_le_mono2
thf(fact_247_mod__le__divisor,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ord_less_eq @ nat @ ( div_mod @ nat @ M @ N ) @ N ) ) ).

% mod_le_divisor
thf(fact_248_div__less__dividend,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( one_one @ nat ) @ N )
     => ( ( ord_less @ nat @ ( zero_zero @ nat ) @ M )
       => ( ord_less @ nat @ ( divide_divide @ nat @ M @ N ) @ M ) ) ) ).

% div_less_dividend
thf(fact_249_numeral__2__eq__2,axiom,
    ( ( numeral_numeral @ nat @ ( bit0 @ one ) )
    = ( suc @ ( suc @ ( zero_zero @ nat ) ) ) ) ).

% numeral_2_eq_2
thf(fact_250_div__if,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ( ( ord_less @ nat @ M @ N )
         => ( ( divide_divide @ nat @ M @ N )
            = ( zero_zero @ nat ) ) )
        & ( ~ ( ord_less @ nat @ M @ N )
         => ( ( divide_divide @ nat @ M @ N )
            = ( suc @ ( divide_divide @ nat @ ( minus_minus @ nat @ M @ N ) @ N ) ) ) ) ) ) ).

% div_if
thf(fact_251_div__geq,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N )
     => ( ~ ( ord_less @ nat @ M @ N )
       => ( ( divide_divide @ nat @ M @ N )
          = ( suc @ ( divide_divide @ nat @ ( minus_minus @ nat @ M @ N ) @ N ) ) ) ) ) ).

% div_geq

%----Type constructors (23)
thf(tcon_fun___Orderings_Oorder,axiom,
    ! [A5: $tType,A6: $tType] :
      ( ( order @ A6 @ ( type2 @ A6 ) )
     => ( order @ ( A5 > A6 ) @ ( type2 @ ( A5 > A6 ) ) ) ) ).

thf(tcon_fun___Groups_Ominus,axiom,
    ! [A5: $tType,A6: $tType] :
      ( ( minus @ A6 @ ( type2 @ A6 ) )
     => ( minus @ ( A5 > A6 ) @ ( type2 @ ( A5 > A6 ) ) ) ) ).

thf(tcon_Int_Oint___Divides_Osemiring__numeral__div,axiom,
    semiring_numeral_div @ int @ ( type2 @ int ) ).

thf(tcon_Int_Oint___Divides_Osemiring__div__parity,axiom,
    semiring_div_parity @ int @ ( type2 @ int ) ).

thf(tcon_Int_Oint___Rings_Olinordered__semidom,axiom,
    linordered_semidom @ int @ ( type2 @ int ) ).

thf(tcon_Int_Oint___Divides_Osemiring__div,axiom,
    semiring_div @ int @ ( type2 @ int ) ).

thf(tcon_Int_Oint___Nat_Osemiring__char__0,axiom,
    semiring_char_0 @ int @ ( type2 @ int ) ).

thf(tcon_Int_Oint___Divides_Oring__div,axiom,
    ring_div @ int @ ( type2 @ int ) ).

thf(tcon_Int_Oint___Orderings_Oorder_1,axiom,
    order @ int @ ( type2 @ int ) ).

thf(tcon_Int_Oint___Num_Oneg__numeral,axiom,
    neg_numeral @ int @ ( type2 @ int ) ).

thf(tcon_Int_Oint___Groups_Ominus_2,axiom,
    minus @ int @ ( type2 @ int ) ).

thf(tcon_Int_Oint___Num_Onumeral,axiom,
    numeral @ int @ ( type2 @ int ) ).

thf(tcon_Nat_Onat___Divides_Osemiring__numeral__div_3,axiom,
    semiring_numeral_div @ nat @ ( type2 @ nat ) ).

thf(tcon_Nat_Onat___Divides_Osemiring__div__parity_4,axiom,
    semiring_div_parity @ nat @ ( type2 @ nat ) ).

thf(tcon_Nat_Onat___Rings_Olinordered__semidom_5,axiom,
    linordered_semidom @ nat @ ( type2 @ nat ) ).

thf(tcon_Nat_Onat___Divides_Osemiring__div_6,axiom,
    semiring_div @ nat @ ( type2 @ nat ) ).

thf(tcon_Nat_Onat___Nat_Osemiring__char__0_7,axiom,
    semiring_char_0 @ nat @ ( type2 @ nat ) ).

thf(tcon_Nat_Onat___Orderings_Oorder_8,axiom,
    order @ nat @ ( type2 @ nat ) ).

thf(tcon_Nat_Onat___Groups_Ominus_9,axiom,
    minus @ nat @ ( type2 @ nat ) ).

thf(tcon_Nat_Onat___Num_Onumeral_10,axiom,
    numeral @ nat @ ( type2 @ nat ) ).

thf(tcon_Num_Onum___Orderings_Oorder_11,axiom,
    order @ num @ ( type2 @ num ) ).

thf(tcon_HOL_Obool___Orderings_Oorder_12,axiom,
    order @ $o @ ( type2 @ $o ) ).

thf(tcon_HOL_Obool___Groups_Ominus_13,axiom,
    minus @ $o @ ( type2 @ $o ) ).

%----Helper facts (3)
thf(help_If_3_1_T,axiom,
    ! [P: $o] :
      ( ( P = $true )
      | ( P = $false ) ) ).

thf(help_If_2_1_T,axiom,
    ! [A: $tType,X3: A,Y: A] :
      ( ( if @ A @ $false @ X3 @ Y )
      = Y ) ).

thf(help_If_1_1_T,axiom,
    ! [A: $tType,X3: A,Y: A] :
      ( ( if @ A @ $true @ X3 @ Y )
      = X3 ) ).

%----Conjectures (1)
thf(conj_0,conjecture,
    ( ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ ( product_snd @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ ( rBT_Im175104036eify_g @ a @ b @ na @ kvsa ) ) )
    = ( minus_minus @ nat @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ) @ na ) ) ).

%------------------------------------------------------------------------------
