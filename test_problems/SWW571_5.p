%------------------------------------------------------------------------------
% File     : SWW571_5 : TPTP v8.2.0. Released v6.0.0.
% Domain   : Software Verification
% Problem  : Java type soundness line 350
% Version  : Especial.
% English  : 

% Refs     : [BN10]  Boehme & Nipkow (2010), Sledgehammer: Judgement Day
%          : [Bla13] Blanchette (2011), Email to Geoff Sutcliffe
% Source   : [Bla13]
% Names    : jinja_350 [Bla13]

% Status   : Theorem
% Rating   : 0.33 v7.4.0, 0.50 v7.1.0, 0.67 v6.4.0
% Syntax   : Number of formulae    :  155 (  51 unt;  52 typ;   0 def)
%            Number of atoms       :  211 (  57 equ)
%            Maximal formula atoms :    7 (   1 avg)
%            Number of connectives :  154 (  46   ~;   0   |;  10   &)
%                                         (  11 <=>;  87  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   19 (   8 avg)
%            Maximal term depth    :   10 (   3 avg)
%            Number of types       :    7 (   6 usr)
%            Number of type conns  :   56 (  28   >;  28   *;   0   +;   0  <<)
%            Number of predicates  :   11 (  10 usr;   0 prp; 1-5 aty)
%            Number of functors    :   36 (  36 usr;  18 con; 0-5 aty)
%            Number of variables   :  556 ( 527   !;   6   ?; 556   :)
%                                         (  23  !>;   0  ?*;   0  @-;   0  @+)
% SPC      : TF1_THM_EQU_NAR

% Comments : This file was generated by Isabelle (most likely Sledgehammer)
%            2011-12-13 16:20:33
%------------------------------------------------------------------------------
%----Should-be-implicit typings (11)
tff(ty_tc_Expr_Obop,type,
    bop: $tType ).

tff(ty_tc_Expr_Oexp,type,
    exp: $tType > $tType ).

tff(ty_tc_HOL_Obool,type,
    bool: $tType ).

tff(ty_tc_List_Olist,type,
    list: $tType > $tType ).

tff(ty_tc_Nat_Onat,type,
    nat: $tType ).

tff(ty_tc_Option_Ooption,type,
    option: $tType > $tType ).

tff(ty_tc_String_Ochar,type,
    char: $tType ).

tff(ty_tc_Type_Oty,type,
    ty: $tType ).

tff(ty_tc_Value_Oval,type,
    val: $tType ).

tff(ty_tc_fun,type,
    fun: ( $tType * $tType ) > $tType ).

tff(ty_tc_prod,type,
    product_prod: ( $tType * $tType ) > $tType ).

%----Explicit typings (41)
tff(sy_c_Conform_Ohconf,type,
    hconf: 
      !>[M: $tType] : ( ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))) * fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ) > $o ) ).

tff(sy_c_Conform_Olconf,type,
    lconf: 
      !>[M: $tType] : ( ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))) * fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) * fun(list(char),option(val)) * fun(list(char),option(ty)) ) > $o ) ).

tff(sy_c_Expr_Oexp_OBinOp,type,
    binOp: 
      !>[A: $tType] : ( ( exp(A) * bop * exp(A) ) > exp(A) ) ).

tff(sy_c_Expr_Oexp_OFAss,type,
    fAss: 
      !>[A: $tType] : ( ( exp(A) * list(char) * list(char) * exp(A) ) > exp(A) ) ).

tff(sy_c_Expr_Oexp_OVal,type,
    val1: 
      !>[A: $tType] : ( val > exp(A) ) ).

tff(sy_c_Expr_Oexp_OWhile,type,
    while: 
      !>[A: $tType] : ( ( exp(A) * exp(A) ) > exp(A) ) ).

tff(sy_c_Expr_Oexp_Othrow,type,
    throw: 
      !>[A: $tType] : ( exp(A) > exp(A) ) ).

tff(sy_c_JWellForm_Owf__J__mdecl,type,
    wf_J_mdecl: fun(list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),fun(list(char),fun(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))),bool))) ).

tff(sy_c_Map_Omap__add,type,
    map_add: 
      !>[A: $tType,B1: $tType] : ( ( fun(A,option(B1)) * fun(A,option(B1)) ) > fun(A,option(B1)) ) ).

tff(sy_c_Objects_Ohext,type,
    hext: ( fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) * fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ) > $o ).

tff(sy_c_Product__Type_OPair,type,
    product_Pair: 
      !>[A: $tType,B1: $tType] : ( ( A * B1 ) > product_prod(A,B1) ) ).

tff(sy_c_Product__Type_Ointernal__split,type,
    produc1605651328_split: 
      !>[A: $tType,B1: $tType,C1: $tType] : ( ( fun(A,fun(B1,C1)) * product_prod(A,B1) ) > C1 ) ).

tff(sy_c_Product__Type_Oprod_Oprod__rec,type,
    product_prod_rec: 
      !>[A: $tType,B1: $tType,T3: $tType] : ( ( fun(A,fun(B1,T3)) * product_prod(A,B1) ) > T3 ) ).

tff(sy_c_SmallStep_Ored,type,
    red: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))) > fun(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),bool) ).

tff(sy_c_State_Ohp,type,
    hp: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))) > fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ).

tff(sy_c_Transitive__Closure_Ortrancl,type,
    transitive_rtrancl: 
      !>[A: $tType] : ( fun(product_prod(A,A),bool) > fun(product_prod(A,A),bool) ) ).

tff(sy_c_TypeRel_Owiden,type,
    widen: 
      !>[M: $tType] : ( ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))) * ty * ty ) > $o ) ).

tff(sy_c_TypeSafe__Mirabelle__jrcojvmxyu_Osconf,type,
    typeSa976492716_sconf: ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))) * fun(list(char),option(ty)) * product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))) ) > $o ).

tff(sy_c_Type_Ois__refT,type,
    is_refT: ty > $o ).

tff(sy_c_Type_Oty_ONT,type,
    nt: ty ).

tff(sy_c_Type_Oty_OVoid,type,
    void: ty ).

tff(sy_c_WellForm_Owf__prog,type,
    wf_prog: 
      !>[M: $tType] : ( ( fun(list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))),fun(list(char),fun(product_prod(list(char),product_prod(list(ty),product_prod(ty,M))),bool))) * list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))) ) > $o ) ).

tff(sy_c_WellTypeRT_OWTrt,type,
    wTrt: ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))) * fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) * fun(list(char),option(ty)) * exp(list(char)) * ty ) > $o ).

tff(sy_c_aa,type,
    aa: 
      !>[A: $tType,B1: $tType] : ( ( fun(A,B1) * A ) > B1 ) ).

tff(sy_c_fFalse,type,
    fFalse: bool ).

tff(sy_c_fTrue,type,
    fTrue: bool ).

tff(sy_c_member,type,
    member: 
      !>[A: $tType] : ( ( A * fun(A,bool) ) > $o ) ).

tff(sy_c_pp,type,
    pp: bool > $o ).

tff(sy_v_D____,type,
    d: list(char) ).

tff(sy_v_E____,type,
    e: fun(list(char),option(ty)) ).

tff(sy_v_F____,type,
    f: list(char) ).

tff(sy_v_P,type,
    p: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))) ).

tff(sy_v_T_092_060_094isub_0622____,type,
    t_2: ty ).

tff(sy_v_T____,type,
    t: ty ).

tff(sy_v_e_092_060_094isub_0622____,type,
    e_2: exp(list(char)) ).

tff(sy_v_e_Ha____,type,
    e_a: exp(list(char)) ).

tff(sy_v_ea____,type,
    ea: exp(list(char)) ).

tff(sy_v_h_Ha____,type,
    h_a: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ).

tff(sy_v_ha____,type,
    ha: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ).

tff(sy_v_l_Ha____,type,
    l_a: fun(list(char),option(val)) ).

tff(sy_v_la____,type,
    la: fun(list(char),option(val)) ).

%----Relevant facts (100)
tff(fact_0_void,axiom,
    t = void ).

tff(fact_1__096P_ME_Mh_H_A_092_060turnstile_062_Ae_092_060_094isub_0622_A_058_AT_092_060_094isub_0622_096,axiom,
    wTrt(p,h_a,e,e_2,t_2) ).

tff(fact_2__096P_ME_Mh_H_A_092_060turnstile_062_Ae_H_A_058_ANT_096,axiom,
    wTrt(p,h_a,e,e_a,nt) ).

tff(fact_3__096P_ME_Mh_A_092_060turnstile_062_Ae_092_060_094isub_0622_A_058_AT_092_060_094isub_0622_096,axiom,
    wTrt(p,ha,e,e_2,t_2) ).

tff(fact_4_FAssRed1_I4_J,axiom,
    wTrt(p,ha,e,fAss(list(char),ea,f,d,e_2),t) ).

tff(fact_5_wt,axiom,
    wTrt(p,ha,e,fAss(list(char),ea,f,d,e_2),t) ).

tff(fact_6__096_B_Bthesis_O_A_I_B_BT_092_060_094isub_0622_O_AP_ME_Mh_A_092_060turnstile_062_Ae_092_060_094isub_0622_A_058_AT_092_060_094isub_0622_A_061_061_062_Athesis_J_A_061_061_062_Athesis_096,axiom,
    ~ ! [T_21: ty] : ~ wTrt(p,ha,e,e_2,T_21) ).

tff(fact_7_exp_Osimps_I8_J,axiom,
    ! [A: $tType,Exp23: exp(A),List23: list(char),List13: list(char),Exp13: exp(A),Exp22: exp(A),List22: list(char),List12: list(char),Exp12: exp(A)] :
      ( ( fAss(A,Exp12,List12,List22,Exp22) = fAss(A,Exp13,List13,List23,Exp23) )
    <=> ( ( Exp12 = Exp13 )
        & ( List12 = List13 )
        & ( List22 = List23 )
        & ( Exp22 = Exp23 ) ) ) ).

tff(fact_8_widen__refl,axiom,
    ! [M: $tType,T2: ty,P2: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M))))))))] : widen(M,P2,T2,T2) ).

tff(fact_9__096P_ME_Mh_A_092_060turnstile_062_Ae_A_058_ANT_096,axiom,
    wTrt(p,ha,e,ea,nt) ).

tff(fact_10_assms,axiom,
    wf_prog(product_prod(list(list(char)),exp(list(char))),wf_J_mdecl,p) ).

tff(fact_11_widen__trans,axiom,
    ! [A: $tType,T2: ty,U1: ty,S3: ty,P2: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,A))))))))] :
      ( widen(A,P2,S3,U1)
     => ( widen(A,P2,U1,T2)
       => widen(A,P2,S3,T2) ) ) ).

tff(fact_12_WTrtFAssNT,axiom,
    ! [Da: list(char),Fa: list(char),T_2: ty,E_2: exp(list(char)),E_1: exp(list(char)),Ea: fun(list(char),option(ty)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))))))))] :
      ( wTrt(Pa,Hb,Ea,E_1,nt)
     => ( wTrt(Pa,Hb,Ea,E_2,T_2)
       => wTrt(Pa,Hb,Ea,fAss(list(char),E_1,Fa,Da,E_2),void) ) ) ).

tff(fact_13_FAssRed1_I2_J,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty))] :
      ( typeSa976492716_sconf(p,Ea,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la))
     => ( wTrt(p,ha,Ea,ea,Ta)
       => ? [T1: ty] :
            ( wTrt(p,h_a,Ea,e_a,T1)
            & widen(product_prod(list(list(char)),exp(list(char))),p,T1,Ta) ) ) ) ).

tff(fact_14_IH,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty))] :
      ( typeSa976492716_sconf(p,Ea,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la))
     => ( wTrt(p,ha,Ea,ea,Ta)
       => ? [U: ty] :
            ( wTrt(p,h_a,Ea,e_a,U)
            & widen(product_prod(list(list(char)),exp(list(char))),p,U,Ta) ) ) ) ).

tff(fact_15__096h_A_092_060unlhd_062_Ah_H_096,axiom,
    hext(ha,h_a) ).

tff(fact_16_FAssRed1_I3_J,axiom,
    typeSa976492716_sconf(p,e,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la)) ).

tff(fact_17_conf,axiom,
    typeSa976492716_sconf(p,e,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la)) ).

tff(fact_18_WTrt__hext__mono,axiom,
    ! [H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Ta: ty,Eb: exp(list(char)),Ea: fun(list(char),option(ty)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))))))))] :
      ( wTrt(Pa,Hb,Ea,Eb,Ta)
     => ( hext(Hb,H_b)
       => wTrt(Pa,H_b,Ea,Eb,Ta) ) ) ).

tff(fact_19_hext__refl,axiom,
    ! [Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val)))))] : hext(Hb,Hb) ).

tff(fact_20_split__paired__All,axiom,
    ! [A: $tType,B1: $tType,Pa: fun(product_prod(A,B1),bool)] :
      ( ! [X11: product_prod(A,B1)] : pp(aa(product_prod(A,B1),bool,Pa,X11))
    <=> ! [A4: A,B3: B1] : pp(aa(product_prod(A,B1),bool,Pa,product_Pair(A,B1,A4,B3))) ) ).

tff(fact_21_Pair__eq,axiom,
    ! [A: $tType,B1: $tType,B6: B1,A7: A,B: B1,A1: A] :
      ( ( product_Pair(A,B1,A1,B) = product_Pair(A,B1,A7,B6) )
    <=> ( ( A1 = A7 )
        & ( B = B6 ) ) ) ).

tff(fact_22_Type_Oty_Osimps_I7_J,axiom,
    nt != void ).

tff(fact_23_Type_Oty_Osimps_I6_J,axiom,
    void != nt ).

tff(fact_24_red,axiom,
    member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),ea,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),e_a,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),h_a,l_a))),red(p)) ).

tff(fact_25_pred__equals__eq2,axiom,
    ! [B1: $tType,A: $tType,S2: fun(product_prod(A,B1),bool),R1: fun(product_prod(A,B1),bool)] :
      ( ! [X2: A,Xa1: B1] :
          ( member(product_prod(A,B1),product_Pair(A,B1,X2,Xa1),R1)
        <=> member(product_prod(A,B1),product_Pair(A,B1,X2,Xa1),S2) )
    <=> ( R1 = S2 ) ) ).

tff(fact_26_hext__trans,axiom,
    ! [H: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val)))))] :
      ( hext(Hb,H_b)
     => ( hext(H_b,H)
       => hext(Hb,H) ) ) ).

tff(fact_27_Pair__inject,axiom,
    ! [A: $tType,B1: $tType,B5: B1,A6: A,B4: B1,A5: A] :
      ( ( product_Pair(A,B1,A5,B4) = product_Pair(A,B1,A6,B5) )
     => ~ ( ( A5 = A6 )
         => ( B4 != B5 ) ) ) ).

tff(fact_28_red__hext__incr,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),red(Pa))
     => hext(Hb,H_b) ) ).

tff(fact_29_red__reds_OFAssRed1,axiom,
    ! [E_2: exp(list(char)),Da: list(char),Fa: list(char),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),red(Pa))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),Eb,Fa,Da,E_2),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),E_b,Fa,Da,E_2),S1)),red(Pa)) ) ).

tff(fact_30_prod__cases4,axiom,
    ! [A: $tType,B1: $tType,C1: $tType,D: $tType,Y1: product_prod(A,product_prod(B1,product_prod(C1,D)))] :
      ~ ! [A3: A,B2: B1,C2: C1,D1: D] : Y1 != product_Pair(A,product_prod(B1,product_prod(C1,D)),A3,product_Pair(B1,product_prod(C1,D),B2,product_Pair(C1,D,C2,D1))) ).

tff(fact_31_prod__induct4,axiom,
    ! [D: $tType,C1: $tType,B1: $tType,A: $tType,X: product_prod(A,product_prod(B1,product_prod(C1,D))),Pa: fun(product_prod(A,product_prod(B1,product_prod(C1,D))),bool)] :
      ( ! [A3: A,B2: B1,C2: C1,D1: D] : pp(aa(product_prod(A,product_prod(B1,product_prod(C1,D))),bool,Pa,product_Pair(A,product_prod(B1,product_prod(C1,D)),A3,product_Pair(B1,product_prod(C1,D),B2,product_Pair(C1,D,C2,D1)))))
     => pp(aa(product_prod(A,product_prod(B1,product_prod(C1,D))),bool,Pa,X)) ) ).

tff(fact_32_prod__cases5,axiom,
    ! [A: $tType,B1: $tType,C1: $tType,D: $tType,E: $tType,Y1: product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,E))))] :
      ~ ! [A3: A,B2: B1,C2: C1,D1: D,E1: E] : Y1 != product_Pair(A,product_prod(B1,product_prod(C1,product_prod(D,E))),A3,product_Pair(B1,product_prod(C1,product_prod(D,E)),B2,product_Pair(C1,product_prod(D,E),C2,product_Pair(D,E,D1,E1)))) ).

tff(fact_33_prod__induct5,axiom,
    ! [E: $tType,D: $tType,C1: $tType,B1: $tType,A: $tType,X: product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,E)))),Pa: fun(product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,E)))),bool)] :
      ( ! [A3: A,B2: B1,C2: C1,D1: D,E1: E] : pp(aa(product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,E)))),bool,Pa,product_Pair(A,product_prod(B1,product_prod(C1,product_prod(D,E))),A3,product_Pair(B1,product_prod(C1,product_prod(D,E)),B2,product_Pair(C1,product_prod(D,E),C2,product_Pair(D,E,D1,E1))))))
     => pp(aa(product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,E)))),bool,Pa,X)) ) ).

tff(fact_34_prod__induct6,axiom,
    ! [F: $tType,E: $tType,D: $tType,C1: $tType,B1: $tType,A: $tType,X: product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,product_prod(E,F))))),Pa: fun(product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,product_prod(E,F))))),bool)] :
      ( ! [A3: A,B2: B1,C2: C1,D1: D,E1: E,F2: F] : pp(aa(product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,product_prod(E,F))))),bool,Pa,product_Pair(A,product_prod(B1,product_prod(C1,product_prod(D,product_prod(E,F)))),A3,product_Pair(B1,product_prod(C1,product_prod(D,product_prod(E,F))),B2,product_Pair(C1,product_prod(D,product_prod(E,F)),C2,product_Pair(D,product_prod(E,F),D1,product_Pair(E,F,E1,F2)))))))
     => pp(aa(product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,product_prod(E,F))))),bool,Pa,X)) ) ).

tff(fact_35_prod__cases6,axiom,
    ! [A: $tType,B1: $tType,C1: $tType,D: $tType,E: $tType,F: $tType,Y1: product_prod(A,product_prod(B1,product_prod(C1,product_prod(D,product_prod(E,F)))))] :
      ~ ! [A3: A,B2: B1,C2: C1,D1: D,E1: E,F2: F] : Y1 != product_Pair(A,product_prod(B1,product_prod(C1,product_prod(D,product_prod(E,F)))),A3,product_Pair(B1,product_prod(C1,product_prod(D,product_prod(E,F))),B2,product_Pair(C1,product_prod(D,product_prod(E,F)),C2,product_Pair(D,product_prod(E,F),D1,product_Pair(E,F,E1,F2))))) ).

tff(fact_36_split__paired__Ex,axiom,
    ! [A: $tType,B1: $tType,Pa: fun(product_prod(A,B1),bool)] :
      ( ? [X11: product_prod(A,B1)] : pp(aa(product_prod(A,B1),bool,Pa,X11))
    <=> ? [A4: A,B3: B1] : pp(aa(product_prod(A,B1),bool,Pa,product_Pair(A,B1,A4,B3))) ) ).

tff(fact_37_red__preserves__hconf,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),red(Pa))
     => ( wTrt(Pa,Hb,Ea,Eb,Ta)
       => ( hconf(product_prod(list(list(char)),exp(list(char))),Pa,Hb)
         => hconf(product_prod(list(list(char)),exp(list(char))),Pa,H_b) ) ) ) ).

tff(fact_38_red__preserves__lconf,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),red(Pa))
     => ( wTrt(Pa,Hb,Ea,Eb,Ta)
       => ( lconf(product_prod(list(list(char)),exp(list(char))),Pa,Hb,Lb,Ea)
         => lconf(product_prod(list(list(char)),exp(list(char))),Pa,H_b,L_b,Ea) ) ) ) ).

tff(fact_39_prod__induct3,axiom,
    ! [C1: $tType,B1: $tType,A: $tType,X: product_prod(A,product_prod(B1,C1)),Pa: fun(product_prod(A,product_prod(B1,C1)),bool)] :
      ( ! [A3: A,B2: B1,C2: C1] : pp(aa(product_prod(A,product_prod(B1,C1)),bool,Pa,product_Pair(A,product_prod(B1,C1),A3,product_Pair(B1,C1,B2,C2))))
     => pp(aa(product_prod(A,product_prod(B1,C1)),bool,Pa,X)) ) ).

tff(fact_40_lconf__hext,axiom,
    ! [A: $tType,H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Ea: fun(list(char),option(ty)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,A))))))))] :
      ( lconf(A,Pa,Hb,Lb,Ea)
     => ( hext(Hb,H_b)
       => lconf(A,Pa,H_b,Lb,Ea) ) ) ).

tff(fact_41_prod__cases3,axiom,
    ! [A: $tType,B1: $tType,C1: $tType,Y1: product_prod(A,product_prod(B1,C1))] :
      ~ ! [A3: A,B2: B1,C2: C1] : Y1 != product_Pair(A,product_prod(B1,C1),A3,product_Pair(B1,C1,B2,C2)) ).

tff(fact_42_red__preserves__sconf,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),red(Pa))
     => ( wTrt(Pa,hp(S),Ea,Eb,Ta)
       => ( typeSa976492716_sconf(Pa,Ea,S)
         => typeSa976492716_sconf(Pa,Ea,S1) ) ) ) ).

tff(fact_43_prod_Orecs,axiom,
    ! [B1: $tType,A: $tType,C1: $tType,B: C1,A1: B1,F1: fun(B1,fun(C1,A))] : product_prod_rec(B1,C1,A,F1,product_Pair(B1,C1,A1,B)) = aa(C1,A,aa(B1,fun(C1,A),F1,A1),B) ).

tff(fact_44_red__lcl__add,axiom,
    ! [L_0: fun(list(char),option(val)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),red(Pa))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,map_add(list(char),val,L_0,Lb))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,map_add(list(char),val,L_0,L_b)))),red(Pa)) ) ).

tff(fact_45_map__add__assoc,axiom,
    ! [B1: $tType,A: $tType,M3: fun(A,option(B1)),M2: fun(A,option(B1)),M1: fun(A,option(B1))] : map_add(A,B1,M1,map_add(A,B1,M2,M3)) = map_add(A,B1,map_add(A,B1,M1,M2),M3) ).

tff(fact_46_Red__lcl__add,axiom,
    ! [L_0: fun(list(char),option(val)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,map_add(list(char),val,L_0,Lb))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,map_add(list(char),val,L_0,L_b)))),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_47_PairE,axiom,
    ! [A: $tType,B1: $tType,P1: product_prod(A,B1)] :
      ~ ! [X1: A,Y: B1] : P1 != product_Pair(A,B1,X1,Y) ).

tff(fact_48_prod_Oexhaust,axiom,
    ! [A: $tType,B1: $tType,Y1: product_prod(A,B1)] :
      ~ ! [A3: A,B2: B1] : Y1 != product_Pair(A,B1,A3,B2) ).

tff(fact_49_FAssReds1,axiom,
    ! [E_2: exp(list(char)),Da: list(char),Fa: list(char),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),Eb,Fa,Da,E_2),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),E_b,Fa,Da,E_2),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_50_rtrancl_Ortrancl__refl,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool),A1: A] : member(product_prod(A,A),product_Pair(A,A,A1,A1),transitive_rtrancl(A,R)) ).

tff(fact_51_r__into__rtrancl,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool),P: product_prod(A,A)] :
      ( member(product_prod(A,A),P,R)
     => member(product_prod(A,A),P,transitive_rtrancl(A,R)) ) ).

tff(fact_52_rtrancl__idemp,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool)] : transitive_rtrancl(A,transitive_rtrancl(A,R)) = transitive_rtrancl(A,R) ).

tff(fact_53_converse__rtrancl__into__rtrancl,axiom,
    ! [A: $tType,C: A,R: fun(product_prod(A,A),bool),B: A,A1: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A1,B),R)
     => ( member(product_prod(A,A),product_Pair(A,A,B,C),transitive_rtrancl(A,R))
       => member(product_prod(A,A),product_Pair(A,A,A1,C),transitive_rtrancl(A,R)) ) ) ).

tff(fact_54_rtrancl_Ortrancl__into__rtrancl,axiom,
    ! [A: $tType,C: A,R: fun(product_prod(A,A),bool),B: A,A1: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A1,B),transitive_rtrancl(A,R))
     => ( member(product_prod(A,A),product_Pair(A,A,B,C),R)
       => member(product_prod(A,A),product_Pair(A,A,A1,C),transitive_rtrancl(A,R)) ) ) ).

tff(fact_55_rtrancl__trans,axiom,
    ! [A: $tType,C: A,R: fun(product_prod(A,A),bool),B: A,A1: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A1,B),transitive_rtrancl(A,R))
     => ( member(product_prod(A,A),product_Pair(A,A,B,C),transitive_rtrancl(A,R))
       => member(product_prod(A,A),product_Pair(A,A,A1,C),transitive_rtrancl(A,R)) ) ) ).

tff(fact_56_converse__rtranclE2,axiom,
    ! [B1: $tType,A: $tType,R: fun(product_prod(product_prod(A,B1),product_prod(A,B1)),bool),Zb: B1,Za: A,Xb: B1,Xa: A] :
      ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Xa,Xb),product_Pair(A,B1,Za,Zb)),transitive_rtrancl(product_prod(A,B1),R))
     => ( ( product_Pair(A,B1,Xa,Xb) != product_Pair(A,B1,Za,Zb) )
       => ~ ! [A3: A,B2: B1] :
              ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Xa,Xb),product_Pair(A,B1,A3,B2)),R)
             => ~ member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,A3,B2),product_Pair(A,B1,Za,Zb)),transitive_rtrancl(product_prod(A,B1),R)) ) ) ) ).

tff(fact_57_converse__rtrancl__induct2,axiom,
    ! [A: $tType,B1: $tType,Pa: fun(A,fun(B1,bool)),R: fun(product_prod(product_prod(A,B1),product_prod(A,B1)),bool),By: B1,Bx: A,Ay: B1,Ax: A] :
      ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Ax,Ay),product_Pair(A,B1,Bx,By)),transitive_rtrancl(product_prod(A,B1),R))
     => ( pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Bx),By))
       => ( ! [A3: A,B2: B1,Aa: A,Ba: B1] :
              ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,A3,B2),product_Pair(A,B1,Aa,Ba)),R)
             => ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Aa,Ba),product_Pair(A,B1,Bx,By)),transitive_rtrancl(product_prod(A,B1),R))
               => ( pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Aa),Ba))
                 => pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,A3),B2)) ) ) )
         => pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Ax),Ay)) ) ) ) ).

tff(fact_58_rtrancl__induct2,axiom,
    ! [A: $tType,B1: $tType,Pa: fun(A,fun(B1,bool)),R: fun(product_prod(product_prod(A,B1),product_prod(A,B1)),bool),By: B1,Bx: A,Ay: B1,Ax: A] :
      ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Ax,Ay),product_Pair(A,B1,Bx,By)),transitive_rtrancl(product_prod(A,B1),R))
     => ( pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Ax),Ay))
       => ( ! [A3: A,B2: B1,Aa: A,Ba: B1] :
              ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Ax,Ay),product_Pair(A,B1,A3,B2)),transitive_rtrancl(product_prod(A,B1),R))
             => ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,A3,B2),product_Pair(A,B1,Aa,Ba)),R)
               => ( pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,A3),B2))
                 => pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Aa),Ba)) ) ) )
         => pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Bx),By)) ) ) ) ).

tff(fact_59_rtrancl__induct,axiom,
    ! [A: $tType,Pa: fun(A,bool),R: fun(product_prod(A,A),bool),B: A,A1: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A1,B),transitive_rtrancl(A,R))
     => ( pp(aa(A,bool,Pa,A1))
       => ( ! [Y: A,Z: A] :
              ( member(product_prod(A,A),product_Pair(A,A,A1,Y),transitive_rtrancl(A,R))
             => ( member(product_prod(A,A),product_Pair(A,A,Y,Z),R)
               => ( pp(aa(A,bool,Pa,Y))
                 => pp(aa(A,bool,Pa,Z)) ) ) )
         => pp(aa(A,bool,Pa,B)) ) ) ) ).

tff(fact_60_rtranclE,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool),B: A,A1: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A1,B),transitive_rtrancl(A,R))
     => ( ( A1 != B )
       => ~ ! [Y: A] :
              ( member(product_prod(A,A),product_Pair(A,A,A1,Y),transitive_rtrancl(A,R))
             => ~ member(product_prod(A,A),product_Pair(A,A,Y,B),R) ) ) ) ).

tff(fact_61_converse__rtranclE,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool),Z1: A,X: A] :
      ( member(product_prod(A,A),product_Pair(A,A,X,Z1),transitive_rtrancl(A,R))
     => ( ( X != Z1 )
       => ~ ! [Y: A] :
              ( member(product_prod(A,A),product_Pair(A,A,X,Y),R)
             => ~ member(product_prod(A,A),product_Pair(A,A,Y,Z1),transitive_rtrancl(A,R)) ) ) ) ).

tff(fact_62_converse__rtrancl__induct,axiom,
    ! [A: $tType,Pa: fun(A,bool),R: fun(product_prod(A,A),bool),B: A,A1: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A1,B),transitive_rtrancl(A,R))
     => ( pp(aa(A,bool,Pa,B))
       => ( ! [Y: A,Z: A] :
              ( member(product_prod(A,A),product_Pair(A,A,Y,Z),R)
             => ( member(product_prod(A,A),product_Pair(A,A,Z,B),transitive_rtrancl(A,R))
               => ( pp(aa(A,bool,Pa,Z))
                 => pp(aa(A,bool,Pa,Y)) ) ) )
         => pp(aa(A,bool,Pa,A1)) ) ) ) ).

tff(fact_63_FAssReds2,axiom,
    ! [Da: list(char),Fa: list(char),V: val,Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),val1(list(char),V),Fa,Da,Eb),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),val1(list(char),V),Fa,Da,E_b),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_64_FAssRedsThrow1,axiom,
    ! [E_2: exp(list(char)),Da: list(char),Fa: list(char),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),E_b),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),Eb,Fa,Da,E_2),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),E_b),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_65_internal__split__conv,axiom,
    ! [B1: $tType,A: $tType,C1: $tType,B: C1,A1: B1,C: fun(B1,fun(C1,A))] : produc1605651328_split(B1,C1,A,C,product_Pair(B1,C1,A1,B)) = aa(C1,A,aa(B1,fun(C1,A),C,A1),B) ).

tff(fact_66_exp_Osimps_I3_J,axiom,
    ! [A: $tType,Val2: val,Val1: val] :
      ( ( val1(A,Val1) = val1(A,Val2) )
    <=> ( Val1 = Val2 ) ) ).

tff(fact_67_exp_Osimps_I14_J,axiom,
    ! [A: $tType,Exp4: exp(A),Exp3: exp(A)] :
      ( ( throw(A,Exp3) = throw(A,Exp4) )
    <=> ( Exp3 = Exp4 ) ) ).

tff(fact_68_exp_Osimps_I180_J,axiom,
    ! [A: $tType,Exp: exp(A),Exp2: exp(A),List21: list(char),List11: list(char),Exp1: exp(A)] : fAss(A,Exp1,List11,List21,Exp2) != throw(A,Exp) ).

tff(fact_69_exp_Osimps_I181_J,axiom,
    ! [A: $tType,Exp2: exp(A),List21: list(char),List11: list(char),Exp1: exp(A),Exp: exp(A)] : throw(A,Exp) != fAss(A,Exp1,List11,List21,Exp2) ).

tff(fact_70_exp_Osimps_I90_J,axiom,
    ! [A: $tType,Exp: exp(A),Val: val] : val1(A,Val) != throw(A,Exp) ).

tff(fact_71_exp_Osimps_I91_J,axiom,
    ! [A: $tType,Val: val,Exp: exp(A)] : throw(A,Exp) != val1(A,Val) ).

tff(fact_72_exp_Osimps_I79_J,axiom,
    ! [A: $tType,Val: val,Exp21: exp(A),List2: list(char),List1: list(char),Exp11: exp(A)] : fAss(A,Exp11,List1,List2,Exp21) != val1(A,Val) ).

tff(fact_73_exp_Osimps_I78_J,axiom,
    ! [A: $tType,Exp21: exp(A),List2: list(char),List1: list(char),Exp11: exp(A),Val: val] : val1(A,Val) != fAss(A,Exp11,List1,List2,Exp21) ).

tff(fact_74_red__reds_OFAssThrow2,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char)),Da: list(char),Fa: list(char),V: val] : member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),val1(list(char),V),Fa,Da,throw(list(char),Eb)),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S)),red(Pa)) ).

tff(fact_75_mem__def,axiom,
    ! [A: $tType,A2: fun(A,bool),X: A] :
      ( member(A,X,A2)
    <=> pp(aa(A,bool,A2,X)) ) ).

tff(fact_76_FAssRedsThrow2,axiom,
    ! [Da: list(char),Fa: list(char),S_2: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char)),E_2: exp(list(char)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S_1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),V: val,S_0: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_1: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_1,S_0),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),val1(list(char),V),S_1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_2,S_1),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S_2)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
       => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),E_1,Fa,Da,E_2),S_0),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S_2)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ) ).

tff(fact_77_red__reds_OThrowThrow,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] : member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),throw(list(char),Eb)),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S)),red(Pa)) ).

tff(fact_78_red__reds_OThrowRed,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),red(Pa))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),E_b),S1)),red(Pa)) ) ).

tff(fact_79_ThrowRedsThrow,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),A1: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),A1),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),A1),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_80_ThrowReds,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),E_b),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_81_red__reds_OFAssThrow1,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_2: exp(list(char)),Da: list(char),Fa: list(char),Eb: exp(list(char))] : member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),throw(list(char),Eb),Fa,Da,E_2),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S)),red(Pa)) ).

tff(fact_82_red__reds_OFAssRed2,axiom,
    ! [Da: list(char),Fa: list(char),V: val,Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),red(Pa))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),val1(list(char),V),Fa,Da,Eb),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAss(list(char),val1(list(char),V),Fa,Da,E_b),S1)),red(Pa)) ) ).

tff(fact_83_WTrtThrow,axiom,
    ! [Ta: ty,T_r: ty,Eb: exp(list(char)),Ea: fun(list(char),option(ty)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))))))))] :
      ( wTrt(Pa,Hb,Ea,Eb,T_r)
     => ( is_refT(T_r)
       => wTrt(Pa,Hb,Ea,throw(list(char),Eb),Ta) ) ) ).

tff(fact_84_BinOpRedsThrow2,axiom,
    ! [Bop2: bop,S_2: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char)),E_2: exp(list(char)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S_1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),V_1: val,S_0: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_1: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_1,S_0),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),val1(list(char),V_1),S_1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_2,S_1),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S_2)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
       => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),binOp(list(char),E_1,Bop2,E_2),S_0),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S_2)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ) ).

tff(fact_85_WhileRedsThrow,axiom,
    ! [C: exp(list(char)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),B: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),B,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),while(list(char),B,C),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_86_exp_Osimps_I4_J,axiom,
    ! [A: $tType,Exp23: exp(A),Bop3: bop,Exp13: exp(A),Exp22: exp(A),Bop2: bop,Exp12: exp(A)] :
      ( ( binOp(A,Exp12,Bop2,Exp22) = binOp(A,Exp13,Bop3,Exp23) )
    <=> ( ( Exp12 = Exp13 )
        & ( Bop2 = Bop3 )
        & ( Exp22 = Exp23 ) ) ) ).

tff(fact_87_exp_Osimps_I13_J,axiom,
    ! [A: $tType,Exp23: exp(A),Exp13: exp(A),Exp22: exp(A),Exp12: exp(A)] :
      ( ( while(A,Exp12,Exp22) = while(A,Exp13,Exp23) )
    <=> ( ( Exp12 = Exp13 )
        & ( Exp22 = Exp23 ) ) ) ).

tff(fact_88_exp_Osimps_I88_J,axiom,
    ! [A: $tType,Exp21: exp(A),Exp11: exp(A),Val: val] : val1(A,Val) != while(A,Exp11,Exp21) ).

tff(fact_89_exp_Osimps_I221_J,axiom,
    ! [A: $tType,Exp2: exp(A),Exp1: exp(A),Exp: exp(A)] : throw(A,Exp) != while(A,Exp1,Exp2) ).

tff(fact_90_exp_Osimps_I70_J,axiom,
    ! [A: $tType,Exp21: exp(A),Bop1: bop,Exp11: exp(A),Val: val] : val1(A,Val) != binOp(A,Exp11,Bop1,Exp21) ).

tff(fact_91_exp_Osimps_I113_J,axiom,
    ! [A: $tType,Exp2: exp(A),Bop: bop,Exp1: exp(A),Exp: exp(A)] : throw(A,Exp) != binOp(A,Exp1,Bop,Exp2) ).

tff(fact_92_exp_Osimps_I220_J,axiom,
    ! [A: $tType,Exp: exp(A),Exp2: exp(A),Exp1: exp(A)] : while(A,Exp1,Exp2) != throw(A,Exp) ).

tff(fact_93_exp_Osimps_I89_J,axiom,
    ! [A: $tType,Val: val,Exp21: exp(A),Exp11: exp(A)] : while(A,Exp11,Exp21) != val1(A,Val) ).

tff(fact_94_exp_Osimps_I112_J,axiom,
    ! [A: $tType,Exp: exp(A),Exp2: exp(A),Bop: bop,Exp1: exp(A)] : binOp(A,Exp1,Bop,Exp2) != throw(A,Exp) ).

tff(fact_95_exp_Osimps_I71_J,axiom,
    ! [A: $tType,Val: val,Exp21: exp(A),Bop1: bop,Exp11: exp(A)] : binOp(A,Exp11,Bop1,Exp21) != val1(A,Val) ).

tff(fact_96_exp_Osimps_I110_J,axiom,
    ! [A: $tType,Exp21: exp(A),Exp11: exp(A),Exp2: exp(A),Bop: bop,Exp1: exp(A)] : binOp(A,Exp1,Bop,Exp2) != while(A,Exp11,Exp21) ).

tff(fact_97_exp_Osimps_I111_J,axiom,
    ! [A: $tType,Exp2: exp(A),Bop: bop,Exp1: exp(A),Exp21: exp(A),Exp11: exp(A)] : while(A,Exp11,Exp21) != binOp(A,Exp1,Bop,Exp2) ).

tff(fact_98_exp_Osimps_I179_J,axiom,
    ! [A: $tType,Exp2: exp(A),List21: list(char),List11: list(char),Exp1: exp(A),Exp21: exp(A),Exp11: exp(A)] : while(A,Exp11,Exp21) != fAss(A,Exp1,List11,List21,Exp2) ).

tff(fact_99_exp_Osimps_I100_J,axiom,
    ! [A: $tType,Exp21: exp(A),List2: list(char),List1: list(char),Exp11: exp(A),Exp2: exp(A),Bop: bop,Exp1: exp(A)] : binOp(A,Exp1,Bop,Exp2) != fAss(A,Exp11,List1,List2,Exp21) ).

%----Helper facts (2)
tff(help_pp_1_1_U,axiom,
    ~ pp(fFalse) ).

tff(help_pp_2_1_U,axiom,
    pp(fTrue) ).

%----Conjectures (1)
tff(conj_0,conjecture,
    ? [T: ty] :
      ( wTrt(p,h_a,e,fAss(list(char),e_a,f,d,e_2),T)
      & widen(product_prod(list(list(char)),exp(list(char))),p,T,t) ) ).

%------------------------------------------------------------------------------
