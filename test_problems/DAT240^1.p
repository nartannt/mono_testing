%------------------------------------------------------------------------------
% File     : DAT240^1 : TPTP v8.2.0. Released v7.0.0.
% Domain   : Data Structures
% Problem  : Red-black trees 1688
% Version  : [Bla16] axioms : Especial.
% English  :

% Refs     : [RB15]  Reynolds & Blanchette (2015), A Decision Procedure for
%          : [Bla16] Blanchette (2016), Email to Geoff Sutcliffe
% Source   : [Bla16]
% Names    : rbt_impl__1688.p [Bla16]

% Status   : Theorem
% Rating   : 1.00 v7.1.0
% Syntax   : Number of formulae    :  313 ( 121 unt;  53 typ;   0 def)
%            Number of atoms       :  724 ( 283 equ;   0 cnn)
%            Maximal formula atoms :   12 (   2 avg)
%            Number of connectives : 4113 (  78   ~;   7   |;  66   &;3705   @)
%                                         (   0 <=>; 257  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   28 (   8 avg)
%            Number of types       :    4 (   3 usr)
%            Number of type conns  :  252 ( 252   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :   52 (  50 usr;   7 con; 0-6 aty)
%            Number of variables   : 1129 (  52   ^; 965   !;  61   ?;1129   :)
%                                         (  51  !>;   0  ?*;   0  @-;   0  @+)
% SPC      : TH1_THM_EQU_NAR

% Comments : This file was generated by Isabelle (most likely Sledgehammer)
%            2016-07-13 14:48:19.043
%------------------------------------------------------------------------------
%----Could-be-implicit typings (8)
thf(ty_t_RBT__Impl__Mirabelle__msmaddcmtr_Orbt,type,
    rBT_Im246033960le_rbt: $tType > $tType > $tType ).

thf(ty_t_Product__Type_Oprod,type,
    product_prod: $tType > $tType > $tType ).

thf(ty_t_List_Olist,type,
    list: $tType > $tType ).

thf(ty_t_Set_Oset,type,
    set: $tType > $tType ).

thf(ty_t_Nat_Onat,type,
    nat: $tType ).

thf(ty_t_itself,type,
    itself: $tType > $tType ).

thf(ty_tf_b,type,
    b: $tType ).

thf(ty_tf_a,type,
    a: $tType ).

%----Explicit typings (45)
thf(sy_cl_HOL_Otype,type,
    type: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_cl_Orderings_Oorder,type,
    order: 
      !>[A: $tType] : ( ( itself @ A ) > $o ) ).

thf(sy_c_Conditionally__Complete__Lattices_Opreorder_Obdd__above,type,
    condit2040224947_above: 
      !>[A: $tType] : ( ( A > A > $o ) > ( set @ A ) > $o ) ).

thf(sy_c_Conditionally__Complete__Lattices_Opreorder_Obdd__below,type,
    condit1201339847_below: 
      !>[A: $tType] : ( ( A > A > $o ) > ( set @ A ) > $o ) ).

thf(sy_c_Finite__Set_Ofinite,type,
    finite_finite: 
      !>[A: $tType] : ( ( set @ A ) > $o ) ).

thf(sy_c_Finite__Set_Ofolding,type,
    finite_folding: 
      !>[A: $tType,B: $tType] : ( ( A > B > B ) > $o ) ).

thf(sy_c_List_Oappend,type,
    append: 
      !>[A: $tType] : ( ( list @ A ) > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Odistinct,type,
    distinct: 
      !>[A: $tType] : ( ( list @ A ) > $o ) ).

thf(sy_c_List_Odrop,type,
    drop: 
      !>[A: $tType] : ( nat > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Olinorder_Oinsort__insert__key,type,
    insort_insert_key: 
      !>[A: $tType,B: $tType] : ( ( A > A > $o ) > ( B > A ) > B > ( list @ B ) > ( list @ B ) ) ).

thf(sy_c_List_Olinorder_Oinsort__key,type,
    insort_key: 
      !>[A: $tType,B: $tType] : ( ( A > A > $o ) > ( B > A ) > B > ( list @ B ) > ( list @ B ) ) ).

thf(sy_c_List_Olinorder_Osort__key,type,
    sort_key: 
      !>[A: $tType,B: $tType] : ( ( A > A > $o ) > ( B > A ) > ( list @ B ) > ( list @ B ) ) ).

thf(sy_c_List_Olinorder_Osorted,type,
    sorted: 
      !>[A: $tType] : ( ( A > A > $o ) > ( list @ A ) > $o ) ).

thf(sy_c_List_Olinorder_Osorted__list__of__set,type,
    sorted_list_of_set: 
      !>[A: $tType] : ( ( A > A > $o ) > ( set @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Olist_OCons,type,
    cons: 
      !>[A: $tType] : ( A > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Olist_ONil,type,
    nil: 
      !>[A: $tType] : ( list @ A ) ).

thf(sy_c_List_Olist_Omap,type,
    map: 
      !>[A: $tType,Aa: $tType] : ( ( A > Aa ) > ( list @ A ) > ( list @ Aa ) ) ).

thf(sy_c_List_Olist_Oset,type,
    set2: 
      !>[A: $tType] : ( ( list @ A ) > ( set @ A ) ) ).

thf(sy_c_List_Oremdups,type,
    remdups: 
      !>[A: $tType] : ( ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Oremove1,type,
    remove1: 
      !>[A: $tType] : ( A > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Otake,type,
    take: 
      !>[A: $tType] : ( nat > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_Nat_OSuc,type,
    suc: nat > nat ).

thf(sy_c_Nat_Osize__class_Osize,type,
    size_size: 
      !>[A: $tType] : ( A > nat ) ).

thf(sy_c_Orderings_Oord_OLeast,type,
    least: 
      !>[A: $tType] : ( ( A > A > $o ) > ( A > $o ) > A ) ).

thf(sy_c_Orderings_Oord__class_Oless__eq,type,
    ord_less_eq: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Orderings_Oorder_Oantimono,type,
    antimono: 
      !>[A: $tType,B: $tType] : ( ( A > A > $o ) > ( A > B ) > $o ) ).

thf(sy_c_Orderings_Oorder_Omono,type,
    mono: 
      !>[A: $tType,B: $tType] : ( ( A > A > $o ) > ( A > B ) > $o ) ).

thf(sy_c_Product__Type_OPair,type,
    product_Pair: 
      !>[A: $tType,B: $tType] : ( A > B > ( product_prod @ A @ B ) ) ).

thf(sy_c_Product__Type_Oprod_Ocase__prod,type,
    product_case_prod: 
      !>[A: $tType,B: $tType,C: $tType] : ( ( A > B > C ) > ( product_prod @ A @ B ) > C ) ).

thf(sy_c_Product__Type_Oprod_Ofst,type,
    product_fst: 
      !>[A: $tType,B: $tType] : ( ( product_prod @ A @ B ) > A ) ).

thf(sy_c_Pure_Otype,type,
    type2: 
      !>[A: $tType] : ( itself @ A ) ).

thf(sy_c_RBT__Impl__Mirabelle__msmaddcmtr_Oentries,type,
    rBT_Im954575269ntries: 
      !>[A: $tType,B: $tType] : ( ( rBT_Im246033960le_rbt @ A @ B ) > ( list @ ( product_prod @ A @ B ) ) ) ).

thf(sy_c_RBT__Impl__Mirabelle__msmaddcmtr_Orbtreeify,type,
    rBT_Im522418883reeify: 
      !>[A: $tType,B: $tType] : ( ( list @ ( product_prod @ A @ B ) ) > ( rBT_Im246033960le_rbt @ A @ B ) ) ).

thf(sy_c_RBT__Impl__Mirabelle__msmaddcmtr_Orbtreeify__f,type,
    rBT_Im175104035eify_f: 
      !>[A: $tType,B: $tType] : ( nat > ( list @ ( product_prod @ A @ B ) ) > ( product_prod @ ( rBT_Im246033960le_rbt @ A @ B ) @ ( list @ ( product_prod @ A @ B ) ) ) ) ).

thf(sy_c_Set_OCollect,type,
    collect: 
      !>[A: $tType] : ( ( A > $o ) > ( set @ A ) ) ).

thf(sy_c_Set__Interval_Oord_OatLeast,type,
    set_atLeast: 
      !>[A: $tType] : ( ( A > A > $o ) > A > ( set @ A ) ) ).

thf(sy_c_Set__Interval_Oord_OatMost,type,
    set_atMost: 
      !>[A: $tType] : ( ( A > A > $o ) > A > ( set @ A ) ) ).

thf(sy_c_member,type,
    member: 
      !>[A: $tType] : ( A > ( set @ A ) > $o ) ).

thf(sy_v_k____,type,
    k: a ).

thf(sy_v_kvs_H____,type,
    kvs: list @ ( product_prod @ a @ b ) ).

thf(sy_v_kvsa____,type,
    kvsa: list @ ( product_prod @ a @ b ) ).

thf(sy_v_less__eq,type,
    less_eq: a > a > $o ).

thf(sy_v_na____,type,
    na: nat ).

thf(sy_v_t____,type,
    t: rBT_Im246033960le_rbt @ a @ b ).

thf(sy_v_v____,type,
    v: b ).

%----Relevant facts (255)
thf(fact_0__092_060open_062distinct_A_Imap_Afst_Akvs_J_092_060close_062,axiom,
    distinct @ a @ ( map @ ( product_prod @ a @ b ) @ a @ ( product_fst @ a @ b ) @ kvsa ) ).

% \<open>distinct (map fst kvs)\<close>
thf(fact_1_g__odd_Oprems_I2_J,axiom,
    distinct @ a @ ( map @ ( product_prod @ a @ b ) @ a @ ( product_fst @ a @ b ) @ kvsa ) ).

% g_odd.prems(2)
thf(fact_2_kvs_H,axiom,
    ( ( drop @ ( product_prod @ a @ b ) @ na @ kvsa )
    = ( cons @ ( product_prod @ a @ b ) @ ( product_Pair @ a @ b @ k @ v ) @ kvs ) ) ).

% kvs'
thf(fact_3_calculation,axiom,
    ( ! [X: product_prod @ a @ b] :
        ( ( member @ ( product_prod @ a @ b ) @ X @ ( set2 @ ( product_prod @ a @ b ) @ ( take @ ( product_prod @ a @ b ) @ na @ kvsa ) ) )
       => ( product_case_prod @ a @ b @ $o
          @ ^ [Y: a,Z: b] : ( less_eq @ Y @ k )
          @ X ) )
    & ! [X: product_prod @ a @ b] :
        ( ( member @ ( product_prod @ a @ b ) @ X @ ( set2 @ ( product_prod @ a @ b ) @ kvs ) )
       => ( product_case_prod @ a @ b @ $o
          @ ^ [Y: a,Z: b] : ( less_eq @ k @ Y )
          @ X ) ) ) ).

% calculation
thf(fact_4_split__part,axiom,
    ! [B: $tType,A: $tType,P: $o,Q: A > B > $o] :
      ( ( product_case_prod @ A @ B @ $o
        @ ^ [A2: A,B2: B] :
            ( P
            & ( Q @ A2 @ B2 ) ) )
      = ( ^ [Ab: product_prod @ A @ B] :
            ( P
            & ( product_case_prod @ A @ B @ $o @ Q @ Ab ) ) ) ) ).

% split_part
thf(fact_5_unfold,axiom,
    ( kvsa
    = ( append @ ( product_prod @ a @ b ) @ ( take @ ( product_prod @ a @ b ) @ na @ kvsa ) @ ( cons @ ( product_prod @ a @ b ) @ ( product_Pair @ a @ b @ k @ v ) @ kvs ) ) ) ).

% unfold
thf(fact_6_in__set__takeD,axiom,
    ! [A: $tType,X2: A,N: nat,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ ( take @ A @ N @ Xs ) ) )
     => ( member @ A @ X2 @ ( set2 @ A @ Xs ) ) ) ).

% in_set_takeD
thf(fact_7__092_060open_062entries_At_A_061_Atake_An_Akvs_092_060close_062,axiom,
    ( ( rBT_Im954575269ntries @ a @ b @ t )
    = ( take @ ( product_prod @ a @ b ) @ na @ kvsa ) ) ).

% \<open>entries t = take n kvs\<close>
thf(fact_8__092_060open_062entries_At_A_061_Atake_An_Akvs_A_092_060and_062_A_Ik_M_Av_J_A_D_Akvs_H_A_061_Adrop_An_Akvs_092_060close_062,axiom,
    ( ( ( rBT_Im954575269ntries @ a @ b @ t )
      = ( take @ ( product_prod @ a @ b ) @ na @ kvsa ) )
    & ( ( cons @ ( product_prod @ a @ b ) @ ( product_Pair @ a @ b @ k @ v ) @ kvs )
      = ( drop @ ( product_prod @ a @ b ) @ na @ kvsa ) ) ) ).

% \<open>entries t = take n kvs \<and> (k, v) # kvs' = drop n kvs\<close>
thf(fact_9_prod_Odisc__eq__case,axiom,
    ! [B: $tType,A: $tType,Prod: product_prod @ A @ B] :
      ( product_case_prod @ A @ B @ $o
      @ ^ [Uu: A,Uv: B] : $true
      @ Prod ) ).

% prod.disc_eq_case
thf(fact_10_g__odd_Ohyps_I2_J,axiom,
    ord_less_eq @ nat @ na @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvsa ) ).

% g_odd.hyps(2)
thf(fact_11_prod_Ocase__distrib,axiom,
    ! [C: $tType,D: $tType,B: $tType,A: $tType,H: C > D,F: A > B > C,Prod: product_prod @ A @ B] :
      ( ( H @ ( product_case_prod @ A @ B @ C @ F @ Prod ) )
      = ( product_case_prod @ A @ B @ D
        @ ^ [X1: A,X22: B] : ( H @ ( F @ X1 @ X22 ) )
        @ Prod ) ) ).

% prod.case_distrib
thf(fact_12_case__prod__app,axiom,
    ! [A: $tType,D: $tType,C: $tType,B: $tType] :
      ( ( product_case_prod @ B @ C @ ( D > A ) )
      = ( ^ [F2: B > C > D > A,X3: product_prod @ B @ C,Y: D] :
            ( product_case_prod @ B @ C @ A
            @ ^ [L: B,R: C] : ( F2 @ L @ R @ Y )
            @ X3 ) ) ) ).

% case_prod_app
thf(fact_13_g__odd_Ohyps_I3_J,axiom,
    ( ( rBT_Im175104035eify_f @ a @ b @ na @ kvsa )
    = ( product_Pair @ ( rBT_Im246033960le_rbt @ a @ b ) @ ( list @ ( product_prod @ a @ b ) ) @ t @ ( cons @ ( product_prod @ a @ b ) @ ( product_Pair @ a @ b @ k @ v ) @ kvs ) ) ) ).

% g_odd.hyps(3)
thf(fact_14_case__prodI,axiom,
    ! [A: $tType,B: $tType,F: A > B > $o,A3: A,B3: B] :
      ( ( F @ A3 @ B3 )
     => ( product_case_prod @ A @ B @ $o @ F @ ( product_Pair @ A @ B @ A3 @ B3 ) ) ) ).

% case_prodI
thf(fact_15_local_Oantisym,axiom,
    ! [X2: a,Y2: a] :
      ( ( less_eq @ X2 @ Y2 )
     => ( ( less_eq @ Y2 @ X2 )
       => ( X2 = Y2 ) ) ) ).

% local.antisym
thf(fact_16_local_Oantisym__conv,axiom,
    ! [Y2: a,X2: a] :
      ( ( less_eq @ Y2 @ X2 )
     => ( ( less_eq @ X2 @ Y2 )
        = ( X2 = Y2 ) ) ) ).

% local.antisym_conv
thf(fact_17_local_Odual__order_Oantisym,axiom,
    ! [B3: a,A3: a] :
      ( ( less_eq @ B3 @ A3 )
     => ( ( less_eq @ A3 @ B3 )
       => ( A3 = B3 ) ) ) ).

% local.dual_order.antisym
thf(fact_18_local_Odual__order_Otrans,axiom,
    ! [B3: a,A3: a,C2: a] :
      ( ( less_eq @ B3 @ A3 )
     => ( ( less_eq @ C2 @ B3 )
       => ( less_eq @ C2 @ A3 ) ) ) ).

% local.dual_order.trans
thf(fact_19_local_Oeq__iff,axiom,
    ( ( ^ [Y3: a,Z2: a] : Y3 = Z2 )
    = ( ^ [X3: a,Y: a] :
          ( ( less_eq @ X3 @ Y )
          & ( less_eq @ Y @ X3 ) ) ) ) ).

% local.eq_iff
thf(fact_20_local_Oeq__refl,axiom,
    ! [X2: a,Y2: a] :
      ( ( X2 = Y2 )
     => ( less_eq @ X2 @ Y2 ) ) ).

% local.eq_refl
thf(fact_21_local_Ole__cases,axiom,
    ! [X2: a,Y2: a] :
      ( ~ ( less_eq @ X2 @ Y2 )
     => ( less_eq @ Y2 @ X2 ) ) ).

% local.le_cases
thf(fact_22_local_Ole__cases3,axiom,
    ! [X2: a,Y2: a,Z3: a] :
      ( ( ( less_eq @ X2 @ Y2 )
       => ~ ( less_eq @ Y2 @ Z3 ) )
     => ( ( ( less_eq @ Y2 @ X2 )
         => ~ ( less_eq @ X2 @ Z3 ) )
       => ( ( ( less_eq @ X2 @ Z3 )
           => ~ ( less_eq @ Z3 @ Y2 ) )
         => ( ( ( less_eq @ Z3 @ Y2 )
             => ~ ( less_eq @ Y2 @ X2 ) )
           => ( ( ( less_eq @ Y2 @ Z3 )
               => ~ ( less_eq @ Z3 @ X2 ) )
             => ~ ( ( less_eq @ Z3 @ X2 )
                 => ~ ( less_eq @ X2 @ Y2 ) ) ) ) ) ) ) ).

% local.le_cases3
thf(fact_23_local_Olinear,axiom,
    ! [X2: a,Y2: a] :
      ( ( less_eq @ X2 @ Y2 )
      | ( less_eq @ Y2 @ X2 ) ) ).

% local.linear
thf(fact_24_local_Olinorder__wlog,axiom,
    ! [P: a > a > $o,A3: a,B3: a] :
      ( ! [A4: a,B4: a] :
          ( ( less_eq @ A4 @ B4 )
         => ( P @ A4 @ B4 ) )
     => ( ! [A4: a,B4: a] :
            ( ( P @ B4 @ A4 )
           => ( P @ A4 @ B4 ) )
       => ( P @ A3 @ B3 ) ) ) ).

% local.linorder_wlog
thf(fact_25_local_Oord__eq__le__trans,axiom,
    ! [A3: a,B3: a,C2: a] :
      ( ( A3 = B3 )
     => ( ( less_eq @ B3 @ C2 )
       => ( less_eq @ A3 @ C2 ) ) ) ).

% local.ord_eq_le_trans
thf(fact_26_local_Oord__le__eq__trans,axiom,
    ! [A3: a,B3: a,C2: a] :
      ( ( less_eq @ A3 @ B3 )
     => ( ( B3 = C2 )
       => ( less_eq @ A3 @ C2 ) ) ) ).

% local.ord_le_eq_trans
thf(fact_27_local_Oorder_Oantisym,axiom,
    ! [A3: a,B3: a] :
      ( ( less_eq @ A3 @ B3 )
     => ( ( less_eq @ B3 @ A3 )
       => ( A3 = B3 ) ) ) ).

% local.order.antisym
thf(fact_28_local_Oorder_Otrans,axiom,
    ! [A3: a,B3: a,C2: a] :
      ( ( less_eq @ A3 @ B3 )
     => ( ( less_eq @ B3 @ C2 )
       => ( less_eq @ A3 @ C2 ) ) ) ).

% local.order.trans
thf(fact_29_local_Oorder__trans,axiom,
    ! [X2: a,Y2: a,Z3: a] :
      ( ( less_eq @ X2 @ Y2 )
     => ( ( less_eq @ Y2 @ Z3 )
       => ( less_eq @ X2 @ Z3 ) ) ) ).

% local.order_trans
thf(fact_30_prod_Oinject,axiom,
    ! [A: $tType,B: $tType,X12: A,X23: B,Y1: A,Y22: B] :
      ( ( ( product_Pair @ A @ B @ X12 @ X23 )
        = ( product_Pair @ A @ B @ Y1 @ Y22 ) )
      = ( ( X12 = Y1 )
        & ( X23 = Y22 ) ) ) ).

% prod.inject
thf(fact_31_old_Oprod_Oinject,axiom,
    ! [A: $tType,B: $tType,A3: A,B3: B,A5: A,B5: B] :
      ( ( ( product_Pair @ A @ B @ A3 @ B3 )
        = ( product_Pair @ A @ B @ A5 @ B5 ) )
      = ( ( A3 = A5 )
        & ( B3 = B5 ) ) ) ).

% old.prod.inject
thf(fact_32_list_Oinject,axiom,
    ! [A: $tType,X21: A,X222: list @ A,Y21: A,Y222: list @ A] :
      ( ( ( cons @ A @ X21 @ X222 )
        = ( cons @ A @ Y21 @ Y222 ) )
      = ( ( X21 = Y21 )
        & ( X222 = Y222 ) ) ) ).

% list.inject
thf(fact_33_append__assoc,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Zs: list @ A] :
      ( ( append @ A @ ( append @ A @ Xs @ Ys ) @ Zs )
      = ( append @ A @ Xs @ ( append @ A @ Ys @ Zs ) ) ) ).

% append_assoc
thf(fact_34_append__same__eq,axiom,
    ! [A: $tType,Ys: list @ A,Xs: list @ A,Zs: list @ A] :
      ( ( ( append @ A @ Ys @ Xs )
        = ( append @ A @ Zs @ Xs ) )
      = ( Ys = Zs ) ) ).

% append_same_eq
thf(fact_35_same__append__eq,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Zs: list @ A] :
      ( ( ( append @ A @ Xs @ Ys )
        = ( append @ A @ Xs @ Zs ) )
      = ( Ys = Zs ) ) ).

% same_append_eq
thf(fact_36_case__prodI2_H,axiom,
    ! [A: $tType,B: $tType,C: $tType,P2: product_prod @ A @ B,C2: A > B > C > $o,X2: C] :
      ( ! [A4: A,B4: B] :
          ( ( ( product_Pair @ A @ B @ A4 @ B4 )
            = P2 )
         => ( C2 @ A4 @ B4 @ X2 ) )
     => ( product_case_prod @ A @ B @ ( C > $o ) @ C2 @ P2 @ X2 ) ) ).

% case_prodI2'
thf(fact_37_mem__case__prodI,axiom,
    ! [A: $tType,B: $tType,C: $tType,Z3: A,C2: B > C > ( set @ A ),A3: B,B3: C] :
      ( ( member @ A @ Z3 @ ( C2 @ A3 @ B3 ) )
     => ( member @ A @ Z3 @ ( product_case_prod @ B @ C @ ( set @ A ) @ C2 @ ( product_Pair @ B @ C @ A3 @ B3 ) ) ) ) ).

% mem_case_prodI
thf(fact_38_mem__case__prodI2,axiom,
    ! [C: $tType,B: $tType,A: $tType,P2: product_prod @ A @ B,Z3: C,C2: A > B > ( set @ C )] :
      ( ! [A4: A,B4: B] :
          ( ( P2
            = ( product_Pair @ A @ B @ A4 @ B4 ) )
         => ( member @ C @ Z3 @ ( C2 @ A4 @ B4 ) ) )
     => ( member @ C @ Z3 @ ( product_case_prod @ A @ B @ ( set @ C ) @ C2 @ P2 ) ) ) ).

% mem_case_prodI2
thf(fact_39_map__ident,axiom,
    ! [A: $tType] :
      ( ( map @ A @ A
        @ ^ [X3: A] : X3 )
      = ( ^ [Xs2: list @ A] : Xs2 ) ) ).

% map_ident
thf(fact_40_local_Oorder_Orefl,axiom,
    ! [A3: a] : ( less_eq @ A3 @ A3 ) ).

% local.order.refl
thf(fact_41_local_Oorder__refl,axiom,
    ! [X2: a] : ( less_eq @ X2 @ X2 ) ).

% local.order_refl
thf(fact_42_local_OLeastI2__order,axiom,
    ! [P: a > $o,X2: a,Q: a > $o] :
      ( ( P @ X2 )
     => ( ! [Y4: a] :
            ( ( P @ Y4 )
           => ( less_eq @ X2 @ Y4 ) )
       => ( ! [X4: a] :
              ( ( P @ X4 )
             => ( ! [Y5: a] :
                    ( ( P @ Y5 )
                   => ( less_eq @ X4 @ Y5 ) )
               => ( Q @ X4 ) ) )
         => ( Q @ ( least @ a @ less_eq @ P ) ) ) ) ) ).

% local.LeastI2_order
thf(fact_43_local_OLeast__equality,axiom,
    ! [P: a > $o,X2: a] :
      ( ( P @ X2 )
     => ( ! [Y4: a] :
            ( ( P @ Y4 )
           => ( less_eq @ X2 @ Y4 ) )
       => ( ( least @ a @ less_eq @ P )
          = X2 ) ) ) ).

% local.Least_equality
thf(fact_44_local_OantimonoD,axiom,
    ! [B: $tType] :
      ( ( order @ B @ ( type2 @ B ) )
     => ! [F: a > B,X2: a,Y2: a] :
          ( ( antimono @ a @ B @ less_eq @ F )
         => ( ( less_eq @ X2 @ Y2 )
           => ( ord_less_eq @ B @ ( F @ Y2 ) @ ( F @ X2 ) ) ) ) ) ).

% local.antimonoD
thf(fact_45_mem__Collect__eq,axiom,
    ! [A: $tType,A3: A,P: A > $o] :
      ( ( member @ A @ A3 @ ( collect @ A @ P ) )
      = ( P @ A3 ) ) ).

% mem_Collect_eq
thf(fact_46_Collect__mem__eq,axiom,
    ! [A: $tType,A6: set @ A] :
      ( ( collect @ A
        @ ^ [X3: A] : ( member @ A @ X3 @ A6 ) )
      = A6 ) ).

% Collect_mem_eq
thf(fact_47_Collect__cong,axiom,
    ! [A: $tType,P: A > $o,Q: A > $o] :
      ( ! [X4: A] :
          ( ( P @ X4 )
          = ( Q @ X4 ) )
     => ( ( collect @ A @ P )
        = ( collect @ A @ Q ) ) ) ).

% Collect_cong
thf(fact_48_ext,axiom,
    ! [B: $tType,A: $tType,F: A > B,G: A > B] :
      ( ! [X4: A] :
          ( ( F @ X4 )
          = ( G @ X4 ) )
     => ( F = G ) ) ).

% ext
thf(fact_49_local_OantimonoE,axiom,
    ! [B: $tType] :
      ( ( order @ B @ ( type2 @ B ) )
     => ! [F: a > B,X2: a,Y2: a] :
          ( ( antimono @ a @ B @ less_eq @ F )
         => ( ( less_eq @ X2 @ Y2 )
           => ( ord_less_eq @ B @ ( F @ Y2 ) @ ( F @ X2 ) ) ) ) ) ).

% local.antimonoE
thf(fact_50_local_OantimonoI,axiom,
    ! [B: $tType] :
      ( ( order @ B @ ( type2 @ B ) )
     => ! [F: a > B] :
          ( ! [X4: a,Y4: a] :
              ( ( less_eq @ X4 @ Y4 )
             => ( ord_less_eq @ B @ ( F @ Y4 ) @ ( F @ X4 ) ) )
         => ( antimono @ a @ B @ less_eq @ F ) ) ) ).

% local.antimonoI
thf(fact_51_local_Oantimono__def,axiom,
    ! [B: $tType] :
      ( ( order @ B @ ( type2 @ B ) )
     => ! [F: a > B] :
          ( ( antimono @ a @ B @ less_eq @ F )
          = ( ! [X3: a,Y: a] :
                ( ( less_eq @ X3 @ Y )
               => ( ord_less_eq @ B @ ( F @ Y ) @ ( F @ X3 ) ) ) ) ) ) ).

% local.antimono_def
thf(fact_52_map__eq__conv,axiom,
    ! [A: $tType,B: $tType,F: B > A,Xs: list @ B,G: B > A] :
      ( ( ( map @ B @ A @ F @ Xs )
        = ( map @ B @ A @ G @ Xs ) )
      = ( ! [X3: B] :
            ( ( member @ B @ X3 @ ( set2 @ B @ Xs ) )
           => ( ( F @ X3 )
              = ( G @ X3 ) ) ) ) ) ).

% map_eq_conv
thf(fact_53_length__map,axiom,
    ! [A: $tType,B: $tType,F: B > A,Xs: list @ B] :
      ( ( size_size @ ( list @ A ) @ ( map @ B @ A @ F @ Xs ) )
      = ( size_size @ ( list @ B ) @ Xs ) ) ).

% length_map
thf(fact_54_append__eq__append__conv,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Us: list @ A,Vs: list @ A] :
      ( ( ( ( size_size @ ( list @ A ) @ Xs )
          = ( size_size @ ( list @ A ) @ Ys ) )
        | ( ( size_size @ ( list @ A ) @ Us )
          = ( size_size @ ( list @ A ) @ Vs ) ) )
     => ( ( ( append @ A @ Xs @ Us )
          = ( append @ A @ Ys @ Vs ) )
        = ( ( Xs = Ys )
          & ( Us = Vs ) ) ) ) ).

% append_eq_append_conv
thf(fact_55_map__append,axiom,
    ! [A: $tType,B: $tType,F: B > A,Xs: list @ B,Ys: list @ B] :
      ( ( map @ B @ A @ F @ ( append @ B @ Xs @ Ys ) )
      = ( append @ A @ ( map @ B @ A @ F @ Xs ) @ ( map @ B @ A @ F @ Ys ) ) ) ).

% map_append
thf(fact_56_case__prod__conv,axiom,
    ! [B: $tType,A: $tType,C: $tType,F: B > C > A,A3: B,B3: C] :
      ( ( product_case_prod @ B @ C @ A @ F @ ( product_Pair @ B @ C @ A3 @ B3 ) )
      = ( F @ A3 @ B3 ) ) ).

% case_prod_conv
thf(fact_57_case__prodI2,axiom,
    ! [B: $tType,A: $tType,P2: product_prod @ A @ B,C2: A > B > $o] :
      ( ! [A4: A,B4: B] :
          ( ( P2
            = ( product_Pair @ A @ B @ A4 @ B4 ) )
         => ( C2 @ A4 @ B4 ) )
     => ( product_case_prod @ A @ B @ $o @ C2 @ P2 ) ) ).

% case_prodI2
thf(fact_58_local_Odistinct__insort__insert,axiom,
    ! [B: $tType,Xs: list @ B,F: B > a,X2: B] :
      ( ( distinct @ B @ Xs )
     => ( distinct @ B @ ( insort_insert_key @ a @ B @ less_eq @ F @ X2 @ Xs ) ) ) ).

% local.distinct_insort_insert
thf(fact_59_take__all,axiom,
    ! [A: $tType,Xs: list @ A,N: nat] :
      ( ( ord_less_eq @ nat @ ( size_size @ ( list @ A ) @ Xs ) @ N )
     => ( ( take @ A @ N @ Xs )
        = Xs ) ) ).

% take_all
thf(fact_60_append__take__drop__id,axiom,
    ! [A: $tType,N: nat,Xs: list @ A] :
      ( ( append @ A @ ( take @ A @ N @ Xs ) @ ( drop @ A @ N @ Xs ) )
      = Xs ) ).

% append_take_drop_id
thf(fact_61_g__odd_Ohyps_I4_J,axiom,
    ord_less_eq @ nat @ na @ ( suc @ ( size_size @ ( list @ ( product_prod @ a @ b ) ) @ kvs ) ) ).

% g_odd.hyps(4)
thf(fact_62_local_Oinsort__insert__triv,axiom,
    ! [X2: a,Xs: list @ a] :
      ( ( member @ a @ X2 @ ( set2 @ a @ Xs ) )
     => ( ( insort_insert_key @ a @ a @ less_eq
          @ ^ [X3: a] : X3
          @ X2
          @ Xs )
        = Xs ) ) ).

% local.insort_insert_triv
thf(fact_63_g__odd_Oprems_I1_J,axiom,
    sorted @ a @ less_eq @ ( map @ ( product_prod @ a @ b ) @ a @ ( product_fst @ a @ b ) @ kvsa ) ).

% g_odd.prems(1)
thf(fact_64_local_OmonoD,axiom,
    ! [B: $tType] :
      ( ( order @ B @ ( type2 @ B ) )
     => ! [F: a > B,X2: a,Y2: a] :
          ( ( mono @ a @ B @ less_eq @ F )
         => ( ( less_eq @ X2 @ Y2 )
           => ( ord_less_eq @ B @ ( F @ X2 ) @ ( F @ Y2 ) ) ) ) ) ).

% local.monoD
thf(fact_65_local_OmonoE,axiom,
    ! [B: $tType] :
      ( ( order @ B @ ( type2 @ B ) )
     => ! [F: a > B,X2: a,Y2: a] :
          ( ( mono @ a @ B @ less_eq @ F )
         => ( ( less_eq @ X2 @ Y2 )
           => ( ord_less_eq @ B @ ( F @ X2 ) @ ( F @ Y2 ) ) ) ) ) ).

% local.monoE
thf(fact_66_local_OmonoI,axiom,
    ! [B: $tType] :
      ( ( order @ B @ ( type2 @ B ) )
     => ! [F: a > B] :
          ( ! [X4: a,Y4: a] :
              ( ( less_eq @ X4 @ Y4 )
             => ( ord_less_eq @ B @ ( F @ X4 ) @ ( F @ Y4 ) ) )
         => ( mono @ a @ B @ less_eq @ F ) ) ) ).

% local.monoI
thf(fact_67_local_Omono__def,axiom,
    ! [B: $tType] :
      ( ( order @ B @ ( type2 @ B ) )
     => ! [F: a > B] :
          ( ( mono @ a @ B @ less_eq @ F )
          = ( ! [X3: a,Y: a] :
                ( ( less_eq @ X3 @ Y )
               => ( ord_less_eq @ B @ ( F @ X3 ) @ ( F @ Y ) ) ) ) ) ) ).

% local.mono_def
thf(fact_68_list_Osimps_I9_J,axiom,
    ! [B: $tType,A: $tType,F: A > B,X21: A,X222: list @ A] :
      ( ( map @ A @ B @ F @ ( cons @ A @ X21 @ X222 ) )
      = ( cons @ B @ ( F @ X21 ) @ ( map @ A @ B @ F @ X222 ) ) ) ).

% list.simps(9)
thf(fact_69_drop__map,axiom,
    ! [A: $tType,B: $tType,N: nat,F: B > A,Xs: list @ B] :
      ( ( drop @ A @ N @ ( map @ B @ A @ F @ Xs ) )
      = ( map @ B @ A @ F @ ( drop @ B @ N @ Xs ) ) ) ).

% drop_map
thf(fact_70_Cons__eq__map__D,axiom,
    ! [A: $tType,B: $tType,X2: A,Xs: list @ A,F: B > A,Ys: list @ B] :
      ( ( ( cons @ A @ X2 @ Xs )
        = ( map @ B @ A @ F @ Ys ) )
     => ? [Z4: B,Zs2: list @ B] :
          ( ( Ys
            = ( cons @ B @ Z4 @ Zs2 ) )
          & ( X2
            = ( F @ Z4 ) )
          & ( Xs
            = ( map @ B @ A @ F @ Zs2 ) ) ) ) ).

% Cons_eq_map_D
thf(fact_71_distinct__drop,axiom,
    ! [A: $tType,Xs: list @ A,I: nat] :
      ( ( distinct @ A @ Xs )
     => ( distinct @ A @ ( drop @ A @ I @ Xs ) ) ) ).

% distinct_drop
thf(fact_72_map__eq__Cons__D,axiom,
    ! [B: $tType,A: $tType,F: B > A,Xs: list @ B,Y2: A,Ys: list @ A] :
      ( ( ( map @ B @ A @ F @ Xs )
        = ( cons @ A @ Y2 @ Ys ) )
     => ? [Z4: B,Zs2: list @ B] :
          ( ( Xs
            = ( cons @ B @ Z4 @ Zs2 ) )
          & ( ( F @ Z4 )
            = Y2 )
          & ( ( map @ B @ A @ F @ Zs2 )
            = Ys ) ) ) ).

% map_eq_Cons_D
thf(fact_73_not__Cons__self2,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( cons @ A @ X2 @ Xs )
     != Xs ) ).

% not_Cons_self2
thf(fact_74_Cons__eq__appendI,axiom,
    ! [A: $tType,X2: A,Xs1: list @ A,Ys: list @ A,Xs: list @ A,Zs: list @ A] :
      ( ( ( cons @ A @ X2 @ Xs1 )
        = Ys )
     => ( ( Xs
          = ( append @ A @ Xs1 @ Zs ) )
       => ( ( cons @ A @ X2 @ Xs )
          = ( append @ A @ Ys @ Zs ) ) ) ) ).

% Cons_eq_appendI
thf(fact_75_impossible__Cons,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,X2: A] :
      ( ( ord_less_eq @ nat @ ( size_size @ ( list @ A ) @ Xs ) @ ( size_size @ ( list @ A ) @ Ys ) )
     => ( Xs
       != ( cons @ A @ X2 @ Ys ) ) ) ).

% impossible_Cons
thf(fact_76_fst__eqD,axiom,
    ! [B: $tType,A: $tType,X2: A,Y2: B,A3: A] :
      ( ( ( product_fst @ A @ B @ ( product_Pair @ A @ B @ X2 @ Y2 ) )
        = A3 )
     => ( X2 = A3 ) ) ).

% fst_eqD
thf(fact_77_Cons__eq__map__conv,axiom,
    ! [A: $tType,B: $tType,X2: A,Xs: list @ A,F: B > A,Ys: list @ B] :
      ( ( ( cons @ A @ X2 @ Xs )
        = ( map @ B @ A @ F @ Ys ) )
      = ( ? [Z: B,Zs3: list @ B] :
            ( ( Ys
              = ( cons @ B @ Z @ Zs3 ) )
            & ( X2
              = ( F @ Z ) )
            & ( Xs
              = ( map @ B @ A @ F @ Zs3 ) ) ) ) ) ).

% Cons_eq_map_conv
thf(fact_78_map__eq__Cons__conv,axiom,
    ! [A: $tType,B: $tType,F: B > A,Xs: list @ B,Y2: A,Ys: list @ A] :
      ( ( ( map @ B @ A @ F @ Xs )
        = ( cons @ A @ Y2 @ Ys ) )
      = ( ? [Z: B,Zs3: list @ B] :
            ( ( Xs
              = ( cons @ B @ Z @ Zs3 ) )
            & ( ( F @ Z )
              = Y2 )
            & ( ( map @ B @ A @ F @ Zs3 )
              = Ys ) ) ) ) ).

% map_eq_Cons_conv
thf(fact_79_fst__conv,axiom,
    ! [B: $tType,A: $tType,X12: A,X23: B] :
      ( ( product_fst @ A @ B @ ( product_Pair @ A @ B @ X12 @ X23 ) )
      = X12 ) ).

% fst_conv
thf(fact_80_Ex__list__of__length,axiom,
    ! [A: $tType,N: nat] :
    ? [Xs3: list @ A] :
      ( ( size_size @ ( list @ A ) @ Xs3 )
      = N ) ).

% Ex_list_of_length
thf(fact_81_append__eq__appendI,axiom,
    ! [A: $tType,Xs: list @ A,Xs1: list @ A,Zs: list @ A,Ys: list @ A,Us: list @ A] :
      ( ( ( append @ A @ Xs @ Xs1 )
        = Zs )
     => ( ( Ys
          = ( append @ A @ Xs1 @ Us ) )
       => ( ( append @ A @ Xs @ Ys )
          = ( append @ A @ Zs @ Us ) ) ) ) ).

% append_eq_appendI
thf(fact_82_neq__if__length__neq,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( ( size_size @ ( list @ A ) @ Xs )
       != ( size_size @ ( list @ A ) @ Ys ) )
     => ( Xs != Ys ) ) ).

% neq_if_length_neq
thf(fact_83_surj__pair,axiom,
    ! [A: $tType,B: $tType,P2: product_prod @ A @ B] :
    ? [X4: A,Y4: B] :
      ( P2
      = ( product_Pair @ A @ B @ X4 @ Y4 ) ) ).

% surj_pair
thf(fact_84_append__Cons,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Ys: list @ A] :
      ( ( append @ A @ ( cons @ A @ X2 @ Xs ) @ Ys )
      = ( cons @ A @ X2 @ ( append @ A @ Xs @ Ys ) ) ) ).

% append_Cons
thf(fact_85_prod__cases,axiom,
    ! [B: $tType,A: $tType,P: ( product_prod @ A @ B ) > $o,P2: product_prod @ A @ B] :
      ( ! [A4: A,B4: B] : ( P @ ( product_Pair @ A @ B @ A4 @ B4 ) )
     => ( P @ P2 ) ) ).

% prod_cases
thf(fact_86_append__eq__conv__conj,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Zs: list @ A] :
      ( ( ( append @ A @ Xs @ Ys )
        = Zs )
      = ( ( Xs
          = ( take @ A @ ( size_size @ ( list @ A ) @ Xs ) @ Zs ) )
        & ( Ys
          = ( drop @ A @ ( size_size @ ( list @ A ) @ Xs ) @ Zs ) ) ) ) ).

% append_eq_conv_conj
thf(fact_87_Pair__inject,axiom,
    ! [A: $tType,B: $tType,A3: A,B3: B,A5: A,B5: B] :
      ( ( ( product_Pair @ A @ B @ A3 @ B3 )
        = ( product_Pair @ A @ B @ A5 @ B5 ) )
     => ~ ( ( A3 = A5 )
         => ( B3 != B5 ) ) ) ).

% Pair_inject
thf(fact_88_case__prodD_H,axiom,
    ! [B: $tType,A: $tType,C: $tType,R2: A > B > C > $o,A3: A,B3: B,C2: C] :
      ( ( product_case_prod @ A @ B @ ( C > $o ) @ R2 @ ( product_Pair @ A @ B @ A3 @ B3 ) @ C2 )
     => ( R2 @ A3 @ B3 @ C2 ) ) ).

% case_prodD'
thf(fact_89_case__prodE_H,axiom,
    ! [B: $tType,A: $tType,C: $tType,C2: A > B > C > $o,P2: product_prod @ A @ B,Z3: C] :
      ( ( product_case_prod @ A @ B @ ( C > $o ) @ C2 @ P2 @ Z3 )
     => ~ ! [X4: A,Y4: B] :
            ( ( P2
              = ( product_Pair @ A @ B @ X4 @ Y4 ) )
           => ~ ( C2 @ X4 @ Y4 @ Z3 ) ) ) ).

% case_prodE'
thf(fact_90_prod__cases3,axiom,
    ! [A: $tType,B: $tType,C: $tType,Y2: product_prod @ A @ ( product_prod @ B @ C )] :
      ~ ! [A4: A,B4: B,C3: C] :
          ( Y2
         != ( product_Pair @ A @ ( product_prod @ B @ C ) @ A4 @ ( product_Pair @ B @ C @ B4 @ C3 ) ) ) ).

% prod_cases3
thf(fact_91_prod__cases4,axiom,
    ! [A: $tType,B: $tType,C: $tType,D: $tType,Y2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) )] :
      ~ ! [A4: A,B4: B,C3: C,D2: D] :
          ( Y2
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) ) @ A4 @ ( product_Pair @ B @ ( product_prod @ C @ D ) @ B4 @ ( product_Pair @ C @ D @ C3 @ D2 ) ) ) ) ).

% prod_cases4
thf(fact_92_prod__cases5,axiom,
    ! [A: $tType,B: $tType,C: $tType,D: $tType,E: $tType,Y2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E ) ) )] :
      ~ ! [A4: A,B4: B,C3: C,D2: D,E2: E] :
          ( Y2
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E ) ) ) @ A4 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ E ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ E ) @ C3 @ ( product_Pair @ D @ E @ D2 @ E2 ) ) ) ) ) ).

% prod_cases5
thf(fact_93_prod__cases6,axiom,
    ! [A: $tType,B: $tType,C: $tType,D: $tType,E: $tType,F3: $tType,Y2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ F3 ) ) ) )] :
      ~ ! [A4: A,B4: B,C3: C,D2: D,E2: E,F4: F3] :
          ( Y2
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ F3 ) ) ) ) @ A4 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ F3 ) ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ ( product_prod @ E @ F3 ) ) @ C3 @ ( product_Pair @ D @ ( product_prod @ E @ F3 ) @ D2 @ ( product_Pair @ E @ F3 @ E2 @ F4 ) ) ) ) ) ) ).

% prod_cases6
thf(fact_94_prod__cases7,axiom,
    ! [A: $tType,B: $tType,C: $tType,D: $tType,E: $tType,F3: $tType,G2: $tType,Y2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) ) ) )] :
      ~ ! [A4: A,B4: B,C3: C,D2: D,E2: E,F4: F3,G3: G2] :
          ( Y2
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) ) ) ) @ A4 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) ) @ C3 @ ( product_Pair @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) @ D2 @ ( product_Pair @ E @ ( product_prod @ F3 @ G2 ) @ E2 @ ( product_Pair @ F3 @ G2 @ F4 @ G3 ) ) ) ) ) ) ) ).

% prod_cases7
thf(fact_95_map__eq__imp__length__eq,axiom,
    ! [A: $tType,B: $tType,C: $tType,F: B > A,Xs: list @ B,G: C > A,Ys: list @ C] :
      ( ( ( map @ B @ A @ F @ Xs )
        = ( map @ C @ A @ G @ Ys ) )
     => ( ( size_size @ ( list @ B ) @ Xs )
        = ( size_size @ ( list @ C ) @ Ys ) ) ) ).

% map_eq_imp_length_eq
thf(fact_96_prod__induct3,axiom,
    ! [C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ C ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ C )] :
      ( ! [A4: A,B4: B,C3: C] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ C ) @ A4 @ ( product_Pair @ B @ C @ B4 @ C3 ) ) )
     => ( P @ X2 ) ) ).

% prod_induct3
thf(fact_97_prod__induct4,axiom,
    ! [D: $tType,C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) )] :
      ( ! [A4: A,B4: B,C3: C,D2: D] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) ) @ A4 @ ( product_Pair @ B @ ( product_prod @ C @ D ) @ B4 @ ( product_Pair @ C @ D @ C3 @ D2 ) ) ) )
     => ( P @ X2 ) ) ).

% prod_induct4
thf(fact_98_prod__induct5,axiom,
    ! [E: $tType,D: $tType,C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E ) ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E ) ) )] :
      ( ! [A4: A,B4: B,C3: C,D2: D,E2: E] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E ) ) ) @ A4 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ E ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ E ) @ C3 @ ( product_Pair @ D @ E @ D2 @ E2 ) ) ) ) )
     => ( P @ X2 ) ) ).

% prod_induct5
thf(fact_99_prod__induct6,axiom,
    ! [F3: $tType,E: $tType,D: $tType,C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ F3 ) ) ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ F3 ) ) ) )] :
      ( ! [A4: A,B4: B,C3: C,D2: D,E2: E,F4: F3] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ F3 ) ) ) ) @ A4 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ F3 ) ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ ( product_prod @ E @ F3 ) ) @ C3 @ ( product_Pair @ D @ ( product_prod @ E @ F3 ) @ D2 @ ( product_Pair @ E @ F3 @ E2 @ F4 ) ) ) ) ) )
     => ( P @ X2 ) ) ).

% prod_induct6
thf(fact_100_prod__induct7,axiom,
    ! [G2: $tType,F3: $tType,E: $tType,D: $tType,C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) ) ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) ) ) )] :
      ( ! [A4: A,B4: B,C3: C,D2: D,E2: E,F4: F3,G3: G2] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) ) ) ) @ A4 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) ) @ C3 @ ( product_Pair @ D @ ( product_prod @ E @ ( product_prod @ F3 @ G2 ) ) @ D2 @ ( product_Pair @ E @ ( product_prod @ F3 @ G2 ) @ E2 @ ( product_Pair @ F3 @ G2 @ F4 @ G3 ) ) ) ) ) ) )
     => ( P @ X2 ) ) ).

% prod_induct7
thf(fact_101_append__eq__append__conv2,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Zs: list @ A,Ts: list @ A] :
      ( ( ( append @ A @ Xs @ Ys )
        = ( append @ A @ Zs @ Ts ) )
      = ( ? [Us2: list @ A] :
            ( ( ( Xs
                = ( append @ A @ Zs @ Us2 ) )
              & ( ( append @ A @ Us2 @ Ys )
                = Ts ) )
            | ( ( ( append @ A @ Xs @ Us2 )
                = Zs )
              & ( Ys
                = ( append @ A @ Us2 @ Ts ) ) ) ) ) ) ).

% append_eq_append_conv2
thf(fact_102_mem__case__prodE,axiom,
    ! [B: $tType,A: $tType,C: $tType,Z3: A,C2: B > C > ( set @ A ),P2: product_prod @ B @ C] :
      ( ( member @ A @ Z3 @ ( product_case_prod @ B @ C @ ( set @ A ) @ C2 @ P2 ) )
     => ~ ! [X4: B,Y4: C] :
            ( ( P2
              = ( product_Pair @ B @ C @ X4 @ Y4 ) )
           => ~ ( member @ A @ Z3 @ ( C2 @ X4 @ Y4 ) ) ) ) ).

% mem_case_prodE
thf(fact_103_append__eq__append__conv__if,axiom,
    ! [A: $tType,Xs_1: list @ A,Xs_2: list @ A,Ys_1: list @ A,Ys_2: list @ A] :
      ( ( ( append @ A @ Xs_1 @ Xs_2 )
        = ( append @ A @ Ys_1 @ Ys_2 ) )
      = ( ( ( ord_less_eq @ nat @ ( size_size @ ( list @ A ) @ Xs_1 ) @ ( size_size @ ( list @ A ) @ Ys_1 ) )
         => ( ( Xs_1
              = ( take @ A @ ( size_size @ ( list @ A ) @ Xs_1 ) @ Ys_1 ) )
            & ( Xs_2
              = ( append @ A @ ( drop @ A @ ( size_size @ ( list @ A ) @ Xs_1 ) @ Ys_1 ) @ Ys_2 ) ) ) )
        & ( ~ ( ord_less_eq @ nat @ ( size_size @ ( list @ A ) @ Xs_1 ) @ ( size_size @ ( list @ A ) @ Ys_1 ) )
         => ( ( ( take @ A @ ( size_size @ ( list @ A ) @ Ys_1 ) @ Xs_1 )
              = Ys_1 )
            & ( ( append @ A @ ( drop @ A @ ( size_size @ ( list @ A ) @ Ys_1 ) @ Xs_1 ) @ Xs_2 )
              = Ys_2 ) ) ) ) ) ).

% append_eq_append_conv_if
thf(fact_104_not__distinct__conv__prefix,axiom,
    ! [A: $tType,As: list @ A] :
      ( ( ~ ( distinct @ A @ As ) )
      = ( ? [Xs2: list @ A,Y: A,Ys2: list @ A] :
            ( ( member @ A @ Y @ ( set2 @ A @ Xs2 ) )
            & ( distinct @ A @ Xs2 )
            & ( As
              = ( append @ A @ Xs2 @ ( cons @ A @ Y @ Ys2 ) ) ) ) ) ) ).

% not_distinct_conv_prefix
thf(fact_105_old_Oprod_Oexhaust,axiom,
    ! [A: $tType,B: $tType,Y2: product_prod @ A @ B] :
      ~ ! [A4: A,B4: B] :
          ( Y2
         != ( product_Pair @ A @ B @ A4 @ B4 ) ) ).

% old.prod.exhaust
thf(fact_106_old_Oprod_Oinducts,axiom,
    ! [B: $tType,A: $tType,P: ( product_prod @ A @ B ) > $o,Prod: product_prod @ A @ B] :
      ( ! [A4: A,B4: B] : ( P @ ( product_Pair @ A @ B @ A4 @ B4 ) )
     => ( P @ Prod ) ) ).

% old.prod.inducts
thf(fact_107_distinct__length__2__or__more,axiom,
    ! [A: $tType,A3: A,B3: A,Xs: list @ A] :
      ( ( distinct @ A @ ( cons @ A @ A3 @ ( cons @ A @ B3 @ Xs ) ) )
      = ( ( A3 != B3 )
        & ( distinct @ A @ ( cons @ A @ A3 @ Xs ) )
        & ( distinct @ A @ ( cons @ A @ B3 @ Xs ) ) ) ) ).

% distinct_length_2_or_more
thf(fact_108_case__prod__Pair__iden,axiom,
    ! [B: $tType,A: $tType,P2: product_prod @ A @ B] :
      ( ( product_case_prod @ A @ B @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B ) @ P2 )
      = P2 ) ).

% case_prod_Pair_iden
thf(fact_109_rbtreeify__fD,axiom,
    ! [B: $tType,A: $tType,N: nat,Kvs: list @ ( product_prod @ A @ B ),T: rBT_Im246033960le_rbt @ A @ B,Kvs2: list @ ( product_prod @ A @ B )] :
      ( ( ( rBT_Im175104035eify_f @ A @ B @ N @ Kvs )
        = ( product_Pair @ ( rBT_Im246033960le_rbt @ A @ B ) @ ( list @ ( product_prod @ A @ B ) ) @ T @ Kvs2 ) )
     => ( ( ord_less_eq @ nat @ N @ ( size_size @ ( list @ ( product_prod @ A @ B ) ) @ Kvs ) )
       => ( ( ( rBT_Im954575269ntries @ A @ B @ T )
            = ( take @ ( product_prod @ A @ B ) @ N @ Kvs ) )
          & ( Kvs2
            = ( drop @ ( product_prod @ A @ B ) @ N @ Kvs ) ) ) ) ) ).

% rbtreeify_fD
thf(fact_110_split__list__first__prop__iff,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ( ? [X3: A] :
            ( ( member @ A @ X3 @ ( set2 @ A @ Xs ) )
            & ( P @ X3 ) ) )
      = ( ? [Ys2: list @ A,X3: A] :
            ( ? [Zs3: list @ A] :
                ( Xs
                = ( append @ A @ Ys2 @ ( cons @ A @ X3 @ Zs3 ) ) )
            & ( P @ X3 )
            & ! [Y: A] :
                ( ( member @ A @ Y @ ( set2 @ A @ Ys2 ) )
               => ~ ( P @ Y ) ) ) ) ) ).

% split_list_first_prop_iff
thf(fact_111_split__list__last__prop__iff,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ( ? [X3: A] :
            ( ( member @ A @ X3 @ ( set2 @ A @ Xs ) )
            & ( P @ X3 ) ) )
      = ( ? [Ys2: list @ A,X3: A,Zs3: list @ A] :
            ( ( Xs
              = ( append @ A @ Ys2 @ ( cons @ A @ X3 @ Zs3 ) ) )
            & ( P @ X3 )
            & ! [Y: A] :
                ( ( member @ A @ Y @ ( set2 @ A @ Zs3 ) )
               => ~ ( P @ Y ) ) ) ) ) ).

% split_list_last_prop_iff
thf(fact_112_in__set__conv__decomp__first,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
      = ( ? [Ys2: list @ A,Zs3: list @ A] :
            ( ( Xs
              = ( append @ A @ Ys2 @ ( cons @ A @ X2 @ Zs3 ) ) )
            & ~ ( member @ A @ X2 @ ( set2 @ A @ Ys2 ) ) ) ) ) ).

% in_set_conv_decomp_first
thf(fact_113_in__set__conv__decomp__last,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
      = ( ? [Ys2: list @ A,Zs3: list @ A] :
            ( ( Xs
              = ( append @ A @ Ys2 @ ( cons @ A @ X2 @ Zs3 ) ) )
            & ~ ( member @ A @ X2 @ ( set2 @ A @ Zs3 ) ) ) ) ) ).

% in_set_conv_decomp_last
thf(fact_114_split__list__first__propE,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X: A] :
          ( ( member @ A @ X @ ( set2 @ A @ Xs ) )
          & ( P @ X ) )
     => ~ ! [Ys3: list @ A,X4: A] :
            ( ? [Zs2: list @ A] :
                ( Xs
                = ( append @ A @ Ys3 @ ( cons @ A @ X4 @ Zs2 ) ) )
           => ( ( P @ X4 )
             => ~ ! [Xa: A] :
                    ( ( member @ A @ Xa @ ( set2 @ A @ Ys3 ) )
                   => ~ ( P @ Xa ) ) ) ) ) ).

% split_list_first_propE
thf(fact_115_split__list__last__propE,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X: A] :
          ( ( member @ A @ X @ ( set2 @ A @ Xs ) )
          & ( P @ X ) )
     => ~ ! [Ys3: list @ A,X4: A,Zs2: list @ A] :
            ( ( Xs
              = ( append @ A @ Ys3 @ ( cons @ A @ X4 @ Zs2 ) ) )
           => ( ( P @ X4 )
             => ~ ! [Xa: A] :
                    ( ( member @ A @ Xa @ ( set2 @ A @ Zs2 ) )
                   => ~ ( P @ Xa ) ) ) ) ) ).

% split_list_last_propE
thf(fact_116_split__list__first__prop,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X: A] :
          ( ( member @ A @ X @ ( set2 @ A @ Xs ) )
          & ( P @ X ) )
     => ? [Ys3: list @ A,X4: A] :
          ( ? [Zs2: list @ A] :
              ( Xs
              = ( append @ A @ Ys3 @ ( cons @ A @ X4 @ Zs2 ) ) )
          & ( P @ X4 )
          & ! [Xa: A] :
              ( ( member @ A @ Xa @ ( set2 @ A @ Ys3 ) )
             => ~ ( P @ Xa ) ) ) ) ).

% split_list_first_prop
thf(fact_117_split__list__last__prop,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X: A] :
          ( ( member @ A @ X @ ( set2 @ A @ Xs ) )
          & ( P @ X ) )
     => ? [Ys3: list @ A,X4: A,Zs2: list @ A] :
          ( ( Xs
            = ( append @ A @ Ys3 @ ( cons @ A @ X4 @ Zs2 ) ) )
          & ( P @ X4 )
          & ! [Xa: A] :
              ( ( member @ A @ Xa @ ( set2 @ A @ Zs2 ) )
             => ~ ( P @ Xa ) ) ) ) ).

% split_list_last_prop
thf(fact_118_in__set__conv__decomp,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
      = ( ? [Ys2: list @ A,Zs3: list @ A] :
            ( Xs
            = ( append @ A @ Ys2 @ ( cons @ A @ X2 @ Zs3 ) ) ) ) ) ).

% in_set_conv_decomp
thf(fact_119_split__list__propE,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X: A] :
          ( ( member @ A @ X @ ( set2 @ A @ Xs ) )
          & ( P @ X ) )
     => ~ ! [Ys3: list @ A,X4: A] :
            ( ? [Zs2: list @ A] :
                ( Xs
                = ( append @ A @ Ys3 @ ( cons @ A @ X4 @ Zs2 ) ) )
           => ~ ( P @ X4 ) ) ) ).

% split_list_propE
thf(fact_120_split__list__first,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ? [Ys3: list @ A,Zs2: list @ A] :
          ( ( Xs
            = ( append @ A @ Ys3 @ ( cons @ A @ X2 @ Zs2 ) ) )
          & ~ ( member @ A @ X2 @ ( set2 @ A @ Ys3 ) ) ) ) ).

% split_list_first
thf(fact_121_split__list__prop,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X: A] :
          ( ( member @ A @ X @ ( set2 @ A @ Xs ) )
          & ( P @ X ) )
     => ? [Ys3: list @ A,X4: A] :
          ( ? [Zs2: list @ A] :
              ( Xs
              = ( append @ A @ Ys3 @ ( cons @ A @ X4 @ Zs2 ) ) )
          & ( P @ X4 ) ) ) ).

% split_list_prop
thf(fact_122_split__list__last,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ? [Ys3: list @ A,Zs2: list @ A] :
          ( ( Xs
            = ( append @ A @ Ys3 @ ( cons @ A @ X2 @ Zs2 ) ) )
          & ~ ( member @ A @ X2 @ ( set2 @ A @ Zs2 ) ) ) ) ).

% split_list_last
thf(fact_123_split__list,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ? [Ys3: list @ A,Zs2: list @ A] :
          ( Xs
          = ( append @ A @ Ys3 @ ( cons @ A @ X2 @ Zs2 ) ) ) ) ).

% split_list
thf(fact_124_list_Omap__ident,axiom,
    ! [A: $tType,T: list @ A] :
      ( ( map @ A @ A
        @ ^ [X3: A] : X3
        @ T )
      = T ) ).

% list.map_ident
thf(fact_125_distinct_Osimps_I2_J,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( distinct @ A @ ( cons @ A @ X2 @ Xs ) )
      = ( ~ ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
        & ( distinct @ A @ Xs ) ) ) ).

% distinct.simps(2)
thf(fact_126_list_Oinj__map__strong,axiom,
    ! [B: $tType,A: $tType,X2: list @ A,Xa2: list @ A,F: A > B,Fa: A > B] :
      ( ! [Z4: A,Za: A] :
          ( ( member @ A @ Z4 @ ( set2 @ A @ X2 ) )
         => ( ( member @ A @ Za @ ( set2 @ A @ Xa2 ) )
           => ( ( ( F @ Z4 )
                = ( Fa @ Za ) )
             => ( Z4 = Za ) ) ) )
     => ( ( ( map @ A @ B @ F @ X2 )
          = ( map @ A @ B @ Fa @ Xa2 ) )
       => ( X2 = Xa2 ) ) ) ).

% list.inj_map_strong
thf(fact_127_list_Omap__cong0,axiom,
    ! [B: $tType,A: $tType,X2: list @ A,F: A > B,G: A > B] :
      ( ! [Z4: A] :
          ( ( member @ A @ Z4 @ ( set2 @ A @ X2 ) )
         => ( ( F @ Z4 )
            = ( G @ Z4 ) ) )
     => ( ( map @ A @ B @ F @ X2 )
        = ( map @ A @ B @ G @ X2 ) ) ) ).

% list.map_cong0
thf(fact_128_list_Omap__cong,axiom,
    ! [B: $tType,A: $tType,X2: list @ A,Ya: list @ A,F: A > B,G: A > B] :
      ( ( X2 = Ya )
     => ( ! [Z4: A] :
            ( ( member @ A @ Z4 @ ( set2 @ A @ Ya ) )
           => ( ( F @ Z4 )
              = ( G @ Z4 ) ) )
       => ( ( map @ A @ B @ F @ X2 )
          = ( map @ A @ B @ G @ Ya ) ) ) ) ).

% list.map_cong
thf(fact_129_ex__map__conv,axiom,
    ! [A: $tType,B: $tType,Ys: list @ B,F: A > B] :
      ( ( ? [Xs2: list @ A] :
            ( Ys
            = ( map @ A @ B @ F @ Xs2 ) ) )
      = ( ! [X3: B] :
            ( ( member @ B @ X3 @ ( set2 @ B @ Ys ) )
           => ? [Y: A] :
                ( X3
                = ( F @ Y ) ) ) ) ) ).

% ex_map_conv
thf(fact_130_map__cong,axiom,
    ! [B: $tType,A: $tType,Xs: list @ A,Ys: list @ A,F: A > B,G: A > B] :
      ( ( Xs = Ys )
     => ( ! [X4: A] :
            ( ( member @ A @ X4 @ ( set2 @ A @ Ys ) )
           => ( ( F @ X4 )
              = ( G @ X4 ) ) )
       => ( ( map @ A @ B @ F @ Xs )
          = ( map @ A @ B @ G @ Ys ) ) ) ) ).

% map_cong
thf(fact_131_map__idI,axiom,
    ! [A: $tType,Xs: list @ A,F: A > A] :
      ( ! [X4: A] :
          ( ( member @ A @ X4 @ ( set2 @ A @ Xs ) )
         => ( ( F @ X4 )
            = X4 ) )
     => ( ( map @ A @ A @ F @ Xs )
        = Xs ) ) ).

% map_idI
thf(fact_132_map__ext,axiom,
    ! [B: $tType,A: $tType,Xs: list @ A,F: A > B,G: A > B] :
      ( ! [X4: A] :
          ( ( member @ A @ X4 @ ( set2 @ A @ Xs ) )
         => ( ( F @ X4 )
            = ( G @ X4 ) ) )
     => ( ( map @ A @ B @ F @ Xs )
        = ( map @ A @ B @ G @ Xs ) ) ) ).

% map_ext
thf(fact_133_in__set__dropD,axiom,
    ! [A: $tType,X2: A,N: nat,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ ( drop @ A @ N @ Xs ) ) )
     => ( member @ A @ X2 @ ( set2 @ A @ Xs ) ) ) ).

% in_set_dropD
thf(fact_134_list_Oset__cases,axiom,
    ! [A: $tType,E3: A,A3: list @ A] :
      ( ( member @ A @ E3 @ ( set2 @ A @ A3 ) )
     => ( ! [Z22: list @ A] :
            ( A3
           != ( cons @ A @ E3 @ Z22 ) )
       => ~ ! [Z1: A,Z22: list @ A] :
              ( ( A3
                = ( cons @ A @ Z1 @ Z22 ) )
             => ~ ( member @ A @ E3 @ ( set2 @ A @ Z22 ) ) ) ) ) ).

% list.set_cases
thf(fact_135_set__ConsD,axiom,
    ! [A: $tType,Y2: A,X2: A,Xs: list @ A] :
      ( ( member @ A @ Y2 @ ( set2 @ A @ ( cons @ A @ X2 @ Xs ) ) )
     => ( ( Y2 = X2 )
        | ( member @ A @ Y2 @ ( set2 @ A @ Xs ) ) ) ) ).

% set_ConsD
thf(fact_136_list_Oset__intros_I1_J,axiom,
    ! [A: $tType,A1: A,A22: list @ A] : ( member @ A @ A1 @ ( set2 @ A @ ( cons @ A @ A1 @ A22 ) ) ) ).

% list.set_intros(1)
thf(fact_137_list_Oset__intros_I2_J,axiom,
    ! [A: $tType,X2: A,A22: list @ A,A1: A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ A22 ) )
     => ( member @ A @ X2 @ ( set2 @ A @ ( cons @ A @ A1 @ A22 ) ) ) ) ).

% list.set_intros(2)
thf(fact_138_old_Oprod_Ocase,axiom,
    ! [A: $tType,C: $tType,B: $tType,F: A > B > C,X12: A,X23: B] :
      ( ( product_case_prod @ A @ B @ C @ F @ ( product_Pair @ A @ B @ X12 @ X23 ) )
      = ( F @ X12 @ X23 ) ) ).

% old.prod.case
thf(fact_139_take__map,axiom,
    ! [A: $tType,B: $tType,N: nat,F: B > A,Xs: list @ B] :
      ( ( take @ A @ N @ ( map @ B @ A @ F @ Xs ) )
      = ( map @ B @ A @ F @ ( take @ B @ N @ Xs ) ) ) ).

% take_map
thf(fact_140_distinct__take,axiom,
    ! [A: $tType,Xs: list @ A,I: nat] :
      ( ( distinct @ A @ Xs )
     => ( distinct @ A @ ( take @ A @ I @ Xs ) ) ) ).

% distinct_take
thf(fact_141_fst__def,axiom,
    ! [B: $tType,A: $tType] :
      ( ( product_fst @ A @ B )
      = ( product_case_prod @ A @ B @ A
        @ ^ [X1: A,X22: B] : X1 ) ) ).

% fst_def
thf(fact_142_cond__case__prod__eta,axiom,
    ! [C: $tType,B: $tType,A: $tType,F: A > B > C,G: ( product_prod @ A @ B ) > C] :
      ( ! [X4: A,Y4: B] :
          ( ( F @ X4 @ Y4 )
          = ( G @ ( product_Pair @ A @ B @ X4 @ Y4 ) ) )
     => ( ( product_case_prod @ A @ B @ C @ F )
        = G ) ) ).

% cond_case_prod_eta
thf(fact_143_case__prod__eta,axiom,
    ! [C: $tType,B: $tType,A: $tType,F: ( product_prod @ A @ B ) > C] :
      ( ( product_case_prod @ A @ B @ C
        @ ^ [X3: A,Y: B] : ( F @ ( product_Pair @ A @ B @ X3 @ Y ) ) )
      = F ) ).

% case_prod_eta
thf(fact_144_case__prodE2,axiom,
    ! [B: $tType,A: $tType,C: $tType,Q: A > $o,P: B > C > A,Z3: product_prod @ B @ C] :
      ( ( Q @ ( product_case_prod @ B @ C @ A @ P @ Z3 ) )
     => ~ ! [X4: B,Y4: C] :
            ( ( Z3
              = ( product_Pair @ B @ C @ X4 @ Y4 ) )
           => ~ ( Q @ ( P @ X4 @ Y4 ) ) ) ) ).

% case_prodE2
thf(fact_145_case__prodE,axiom,
    ! [A: $tType,B: $tType,C2: A > B > $o,P2: product_prod @ A @ B] :
      ( ( product_case_prod @ A @ B @ $o @ C2 @ P2 )
     => ~ ! [X4: A,Y4: B] :
            ( ( P2
              = ( product_Pair @ A @ B @ X4 @ Y4 ) )
           => ~ ( C2 @ X4 @ Y4 ) ) ) ).

% case_prodE
thf(fact_146_case__prodD,axiom,
    ! [A: $tType,B: $tType,F: A > B > $o,A3: A,B3: B] :
      ( ( product_case_prod @ A @ B @ $o @ F @ ( product_Pair @ A @ B @ A3 @ B3 ) )
     => ( F @ A3 @ B3 ) ) ).

% case_prodD
thf(fact_147_take__equalityI,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ! [I2: nat] :
          ( ( take @ A @ I2 @ Xs )
          = ( take @ A @ I2 @ Ys ) )
     => ( Xs = Ys ) ) ).

% take_equalityI
thf(fact_148_local_OatLeast__def,axiom,
    ! [L2: a] :
      ( ( set_atLeast @ a @ less_eq @ L2 )
      = ( collect @ a @ ( less_eq @ L2 ) ) ) ).

% local.atLeast_def
thf(fact_149_local_Odistinct__sorted__list__of__set,axiom,
    ! [A6: set @ a] : ( distinct @ a @ ( sorted_list_of_set @ a @ less_eq @ A6 ) ) ).

% local.distinct_sorted_list_of_set
thf(fact_150_local_Odistinct__insort,axiom,
    ! [B: $tType,F: B > a,X2: B,Xs: list @ B] :
      ( ( distinct @ B @ ( insort_key @ a @ B @ less_eq @ F @ X2 @ Xs ) )
      = ( ~ ( member @ B @ X2 @ ( set2 @ B @ Xs ) )
        & ( distinct @ B @ Xs ) ) ) ).

% local.distinct_insort
thf(fact_151_local_Oinsort__is__Cons,axiom,
    ! [B: $tType,Xs: list @ B,F: B > a,A3: B] :
      ( ! [X4: B] :
          ( ( member @ B @ X4 @ ( set2 @ B @ Xs ) )
         => ( less_eq @ ( F @ A3 ) @ ( F @ X4 ) ) )
     => ( ( insort_key @ a @ B @ less_eq @ F @ A3 @ Xs )
        = ( cons @ B @ A3 @ Xs ) ) ) ).

% local.insort_is_Cons
thf(fact_152_local_OatMost__def,axiom,
    ! [U: a] :
      ( ( set_atMost @ a @ less_eq @ U )
      = ( collect @ a
        @ ^ [X3: a] : ( less_eq @ X3 @ U ) ) ) ).

% local.atMost_def
thf(fact_153_local_Obdd__above__def,axiom,
    ! [A6: set @ a] :
      ( ( condit2040224947_above @ a @ less_eq @ A6 )
      = ( ? [M: a] :
          ! [X3: a] :
            ( ( member @ a @ X3 @ A6 )
           => ( less_eq @ X3 @ M ) ) ) ) ).

% local.bdd_above_def
thf(fact_154_local_Obdd__below__def,axiom,
    ! [A6: set @ a] :
      ( ( condit1201339847_below @ a @ less_eq @ A6 )
      = ( ? [M2: a] :
          ! [X3: a] :
            ( ( member @ a @ X3 @ A6 )
           => ( less_eq @ M2 @ X3 ) ) ) ) ).

% local.bdd_below_def
thf(fact_155_local_Oinsort__key_Osimps_I2_J,axiom,
    ! [B: $tType,F: B > a,X2: B,Y2: B,Ys: list @ B] :
      ( ( ( less_eq @ ( F @ X2 ) @ ( F @ Y2 ) )
       => ( ( insort_key @ a @ B @ less_eq @ F @ X2 @ ( cons @ B @ Y2 @ Ys ) )
          = ( cons @ B @ X2 @ ( cons @ B @ Y2 @ Ys ) ) ) )
      & ( ~ ( less_eq @ ( F @ X2 ) @ ( F @ Y2 ) )
       => ( ( insort_key @ a @ B @ less_eq @ F @ X2 @ ( cons @ B @ Y2 @ Ys ) )
          = ( cons @ B @ Y2 @ ( insort_key @ a @ B @ less_eq @ F @ X2 @ Ys ) ) ) ) ) ).

% local.insort_key.simps(2)
thf(fact_156_entries__rbtreeify,axiom,
    ! [B: $tType,A: $tType,Kvs: list @ ( product_prod @ A @ B )] :
      ( ( rBT_Im954575269ntries @ A @ B @ ( rBT_Im522418883reeify @ A @ B @ Kvs ) )
      = Kvs ) ).

% entries_rbtreeify
thf(fact_157__092_060open_062sorted_A_Imap_Afst_Akvs_J_092_060close_062,axiom,
    sorted @ a @ less_eq @ ( map @ ( product_prod @ a @ b ) @ a @ ( product_fst @ a @ b ) @ kvsa ) ).

% \<open>sorted (map fst kvs)\<close>
thf(fact_158_local_Oinsort__left__comm,axiom,
    ! [X2: a,Y2: a,Xs: list @ a] :
      ( ( insort_key @ a @ a @ less_eq
        @ ^ [X3: a] : X3
        @ X2
        @ ( insort_key @ a @ a @ less_eq
          @ ^ [X3: a] : X3
          @ Y2
          @ Xs ) )
      = ( insort_key @ a @ a @ less_eq
        @ ^ [X3: a] : X3
        @ Y2
        @ ( insort_key @ a @ a @ less_eq
          @ ^ [X3: a] : X3
          @ X2
          @ Xs ) ) ) ).

% local.insort_left_comm
thf(fact_159_local_Osorted__drop,axiom,
    ! [Xs: list @ a,N: nat] :
      ( ( sorted @ a @ less_eq @ Xs )
     => ( sorted @ a @ less_eq @ ( drop @ a @ N @ Xs ) ) ) ).

% local.sorted_drop
thf(fact_160_local_Osorted__many,axiom,
    ! [X2: a,Y2: a,Zs: list @ a] :
      ( ( less_eq @ X2 @ Y2 )
     => ( ( sorted @ a @ less_eq @ ( cons @ a @ Y2 @ Zs ) )
       => ( sorted @ a @ less_eq @ ( cons @ a @ X2 @ ( cons @ a @ Y2 @ Zs ) ) ) ) ) ).

% local.sorted_many
thf(fact_161_local_Osorted__take,axiom,
    ! [Xs: list @ a,N: nat] :
      ( ( sorted @ a @ less_eq @ Xs )
     => ( sorted @ a @ less_eq @ ( take @ a @ N @ Xs ) ) ) ).

% local.sorted_take
thf(fact_162_local_Oinsort__key__left__comm,axiom,
    ! [B: $tType,F: B > a,X2: B,Y2: B,Xs: list @ B] :
      ( ( ( F @ X2 )
       != ( F @ Y2 ) )
     => ( ( insort_key @ a @ B @ less_eq @ F @ Y2 @ ( insort_key @ a @ B @ less_eq @ F @ X2 @ Xs ) )
        = ( insort_key @ a @ B @ less_eq @ F @ X2 @ ( insort_key @ a @ B @ less_eq @ F @ Y2 @ Xs ) ) ) ) ).

% local.insort_key_left_comm
thf(fact_163_local_Obdd__below__mono,axiom,
    ! [B6: set @ a,A6: set @ a] :
      ( ( condit1201339847_below @ a @ less_eq @ B6 )
     => ( ( ord_less_eq @ ( set @ a ) @ A6 @ B6 )
       => ( condit1201339847_below @ a @ less_eq @ A6 ) ) ) ).

% local.bdd_below_mono
thf(fact_164_local_Obdd__above__mono,axiom,
    ! [B6: set @ a,A6: set @ a] :
      ( ( condit2040224947_above @ a @ less_eq @ B6 )
     => ( ( ord_less_eq @ ( set @ a ) @ A6 @ B6 )
       => ( condit2040224947_above @ a @ less_eq @ A6 ) ) ) ).

% local.bdd_above_mono
thf(fact_165_local_Osorted__insort,axiom,
    ! [X2: a,Xs: list @ a] :
      ( ( sorted @ a @ less_eq
        @ ( insort_key @ a @ a @ less_eq
          @ ^ [X3: a] : X3
          @ X2
          @ Xs ) )
      = ( sorted @ a @ less_eq @ Xs ) ) ).

% local.sorted_insort
thf(fact_166_local_Olift__Suc__mono__le,axiom,
    ! [F: nat > a,N: nat,N2: nat] :
      ( ! [N3: nat] : ( less_eq @ ( F @ N3 ) @ ( F @ ( suc @ N3 ) ) )
     => ( ( ord_less_eq @ nat @ N @ N2 )
       => ( less_eq @ ( F @ N ) @ ( F @ N2 ) ) ) ) ).

% local.lift_Suc_mono_le
thf(fact_167_local_Olift__Suc__antimono__le,axiom,
    ! [F: nat > a,N: nat,N2: nat] :
      ( ! [N3: nat] : ( less_eq @ ( F @ ( suc @ N3 ) ) @ ( F @ N3 ) )
     => ( ( ord_less_eq @ nat @ N @ N2 )
       => ( less_eq @ ( F @ N2 ) @ ( F @ N ) ) ) ) ).

% local.lift_Suc_antimono_le
thf(fact_168_local_Osorted__append,axiom,
    ! [Xs: list @ a,Ys: list @ a] :
      ( ( sorted @ a @ less_eq @ ( append @ a @ Xs @ Ys ) )
      = ( ( sorted @ a @ less_eq @ Xs )
        & ( sorted @ a @ less_eq @ Ys )
        & ! [X3: a] :
            ( ( member @ a @ X3 @ ( set2 @ a @ Xs ) )
           => ! [Y: a] :
                ( ( member @ a @ Y @ ( set2 @ a @ Ys ) )
               => ( less_eq @ X3 @ Y ) ) ) ) ) ).

% local.sorted_append
thf(fact_169_local_Osorted__Cons,axiom,
    ! [X2: a,Xs: list @ a] :
      ( ( sorted @ a @ less_eq @ ( cons @ a @ X2 @ Xs ) )
      = ( ( sorted @ a @ less_eq @ Xs )
        & ! [X3: a] :
            ( ( member @ a @ X3 @ ( set2 @ a @ Xs ) )
           => ( less_eq @ X2 @ X3 ) ) ) ) ).

% local.sorted_Cons
thf(fact_170_local_Osorted_OCons,axiom,
    ! [Xs: list @ a,X2: a] :
      ( ! [X4: a] :
          ( ( member @ a @ X4 @ ( set2 @ a @ Xs ) )
         => ( less_eq @ X2 @ X4 ) )
     => ( ( sorted @ a @ less_eq @ Xs )
       => ( sorted @ a @ less_eq @ ( cons @ a @ X2 @ Xs ) ) ) ) ).

% local.sorted.Cons
thf(fact_171_local_Osorted__insort__insert,axiom,
    ! [Xs: list @ a,X2: a] :
      ( ( sorted @ a @ less_eq @ Xs )
     => ( sorted @ a @ less_eq
        @ ( insort_insert_key @ a @ a @ less_eq
          @ ^ [X3: a] : X3
          @ X2
          @ Xs ) ) ) ).

% local.sorted_insort_insert
thf(fact_172_local_Oinsort__insert__insort,axiom,
    ! [X2: a,Xs: list @ a] :
      ( ~ ( member @ a @ X2 @ ( set2 @ a @ Xs ) )
     => ( ( insort_insert_key @ a @ a @ less_eq
          @ ^ [X3: a] : X3
          @ X2
          @ Xs )
        = ( insort_key @ a @ a @ less_eq
          @ ^ [X3: a] : X3
          @ X2
          @ Xs ) ) ) ).

% local.insort_insert_insort
thf(fact_173_local_Osorted__insort__key,axiom,
    ! [B: $tType,F: B > a,X2: B,Xs: list @ B] :
      ( ( sorted @ a @ less_eq @ ( map @ B @ a @ F @ ( insort_key @ a @ B @ less_eq @ F @ X2 @ Xs ) ) )
      = ( sorted @ a @ less_eq @ ( map @ B @ a @ F @ Xs ) ) ) ).

% local.sorted_insort_key
thf(fact_174_local_Osorted__distinct__set__unique,axiom,
    ! [Xs: list @ a,Ys: list @ a] :
      ( ( sorted @ a @ less_eq @ Xs )
     => ( ( distinct @ a @ Xs )
       => ( ( sorted @ a @ less_eq @ Ys )
         => ( ( distinct @ a @ Ys )
           => ( ( ( set2 @ a @ Xs )
                = ( set2 @ a @ Ys ) )
             => ( Xs = Ys ) ) ) ) ) ) ).

% local.sorted_distinct_set_unique
thf(fact_175_local_Osorted__insort__insert__key,axiom,
    ! [B: $tType,F: B > a,Xs: list @ B,X2: B] :
      ( ( sorted @ a @ less_eq @ ( map @ B @ a @ F @ Xs ) )
     => ( sorted @ a @ less_eq @ ( map @ B @ a @ F @ ( insort_insert_key @ a @ B @ less_eq @ F @ X2 @ Xs ) ) ) ) ).

% local.sorted_insort_insert_key
thf(fact_176_local_Osorted__many__eq,axiom,
    ! [X2: a,Y2: a,Zs: list @ a] :
      ( ( sorted @ a @ less_eq @ ( cons @ a @ X2 @ ( cons @ a @ Y2 @ Zs ) ) )
      = ( ( less_eq @ X2 @ Y2 )
        & ( sorted @ a @ less_eq @ ( cons @ a @ Y2 @ Zs ) ) ) ) ).

% local.sorted_many_eq
thf(fact_177_local_Obdd__belowI,axiom,
    ! [A6: set @ a,M3: a] :
      ( ! [X4: a] :
          ( ( member @ a @ X4 @ A6 )
         => ( less_eq @ M3 @ X4 ) )
     => ( condit1201339847_below @ a @ less_eq @ A6 ) ) ).

% local.bdd_belowI
thf(fact_178_local_Obdd__aboveI,axiom,
    ! [A6: set @ a,M4: a] :
      ( ! [X4: a] :
          ( ( member @ a @ X4 @ A6 )
         => ( less_eq @ X4 @ M4 ) )
     => ( condit2040224947_above @ a @ less_eq @ A6 ) ) ).

% local.bdd_aboveI
thf(fact_179_local_OatMost__iff,axiom,
    ! [I: a,K: a] :
      ( ( member @ a @ I @ ( set_atMost @ a @ less_eq @ K ) )
      = ( less_eq @ I @ K ) ) ).

% local.atMost_iff
thf(fact_180_local_OatLeast__iff,axiom,
    ! [I: a,K: a] :
      ( ( member @ a @ I @ ( set_atLeast @ a @ less_eq @ K ) )
      = ( less_eq @ K @ I ) ) ).

% local.atLeast_iff
thf(fact_181_take__Suc__Cons,axiom,
    ! [A: $tType,N: nat,X2: A,Xs: list @ A] :
      ( ( take @ A @ ( suc @ N ) @ ( cons @ A @ X2 @ Xs ) )
      = ( cons @ A @ X2 @ ( take @ A @ N @ Xs ) ) ) ).

% take_Suc_Cons
thf(fact_182_drop__Suc__Cons,axiom,
    ! [A: $tType,N: nat,X2: A,Xs: list @ A] :
      ( ( drop @ A @ ( suc @ N ) @ ( cons @ A @ X2 @ Xs ) )
      = ( drop @ A @ N @ Xs ) ) ).

% drop_Suc_Cons
thf(fact_183_local_Obdd__above__Iic,axiom,
    ! [B3: a] : ( condit2040224947_above @ a @ less_eq @ ( set_atMost @ a @ less_eq @ B3 ) ) ).

% local.bdd_above_Iic
thf(fact_184_local_Obdd__below__Ici,axiom,
    ! [A3: a] : ( condit1201339847_below @ a @ less_eq @ ( set_atLeast @ a @ less_eq @ A3 ) ) ).

% local.bdd_below_Ici
thf(fact_185_local_Olength__insort,axiom,
    ! [B: $tType,F: B > a,X2: B,Xs: list @ B] :
      ( ( size_size @ ( list @ B ) @ ( insort_key @ a @ B @ less_eq @ F @ X2 @ Xs ) )
      = ( suc @ ( size_size @ ( list @ B ) @ Xs ) ) ) ).

% local.length_insort
thf(fact_186_entries__rbtreeify__f,axiom,
    ! [B: $tType,A: $tType,N: nat,Kvs: list @ ( product_prod @ A @ B )] :
      ( ( ord_less_eq @ nat @ N @ ( size_size @ ( list @ ( product_prod @ A @ B ) ) @ Kvs ) )
     => ( ( rBT_Im954575269ntries @ A @ B @ ( product_fst @ ( rBT_Im246033960le_rbt @ A @ B ) @ ( list @ ( product_prod @ A @ B ) ) @ ( rBT_Im175104035eify_f @ A @ B @ N @ Kvs ) ) )
        = ( take @ ( product_prod @ A @ B ) @ N @ Kvs ) ) ) ).

% entries_rbtreeify_f
thf(fact_187_Collect__case__prod__mono,axiom,
    ! [B: $tType,A: $tType,A6: A > B > $o,B6: A > B > $o] :
      ( ( ord_less_eq @ ( A > B > $o ) @ A6 @ B6 )
     => ( ord_less_eq @ ( set @ ( product_prod @ A @ B ) ) @ ( collect @ ( product_prod @ A @ B ) @ ( product_case_prod @ A @ B @ $o @ A6 ) ) @ ( collect @ ( product_prod @ A @ B ) @ ( product_case_prod @ A @ B @ $o @ B6 ) ) ) ) ).

% Collect_case_prod_mono
thf(fact_188_subset__code_I1_J,axiom,
    ! [A: $tType,Xs: list @ A,B6: set @ A] :
      ( ( ord_less_eq @ ( set @ A ) @ ( set2 @ A @ Xs ) @ B6 )
      = ( ! [X3: A] :
            ( ( member @ A @ X3 @ ( set2 @ A @ Xs ) )
           => ( member @ A @ X3 @ B6 ) ) ) ) ).

% subset_code(1)
thf(fact_189_length__Suc__conv,axiom,
    ! [A: $tType,Xs: list @ A,N: nat] :
      ( ( ( size_size @ ( list @ A ) @ Xs )
        = ( suc @ N ) )
      = ( ? [Y: A,Ys2: list @ A] :
            ( ( Xs
              = ( cons @ A @ Y @ Ys2 ) )
            & ( ( size_size @ ( list @ A ) @ Ys2 )
              = N ) ) ) ) ).

% length_Suc_conv
thf(fact_190_Suc__length__conv,axiom,
    ! [A: $tType,N: nat,Xs: list @ A] :
      ( ( ( suc @ N )
        = ( size_size @ ( list @ A ) @ Xs ) )
      = ( ? [Y: A,Ys2: list @ A] :
            ( ( Xs
              = ( cons @ A @ Y @ Ys2 ) )
            & ( ( size_size @ ( list @ A ) @ Ys2 )
              = N ) ) ) ) ).

% Suc_length_conv
thf(fact_191_set__subset__Cons,axiom,
    ! [A: $tType,Xs: list @ A,X2: A] : ( ord_less_eq @ ( set @ A ) @ ( set2 @ A @ Xs ) @ ( set2 @ A @ ( cons @ A @ X2 @ Xs ) ) ) ).

% set_subset_Cons
thf(fact_192_set__take__subset,axiom,
    ! [A: $tType,N: nat,Xs: list @ A] : ( ord_less_eq @ ( set @ A ) @ ( set2 @ A @ ( take @ A @ N @ Xs ) ) @ ( set2 @ A @ Xs ) ) ).

% set_take_subset
thf(fact_193_set__drop__subset,axiom,
    ! [A: $tType,N: nat,Xs: list @ A] : ( ord_less_eq @ ( set @ A ) @ ( set2 @ A @ ( drop @ A @ N @ Xs ) ) @ ( set2 @ A @ Xs ) ) ).

% set_drop_subset
thf(fact_194_set__take__subset__set__take,axiom,
    ! [A: $tType,M3: nat,N: nat,Xs: list @ A] :
      ( ( ord_less_eq @ nat @ M3 @ N )
     => ( ord_less_eq @ ( set @ A ) @ ( set2 @ A @ ( take @ A @ M3 @ Xs ) ) @ ( set2 @ A @ ( take @ A @ N @ Xs ) ) ) ) ).

% set_take_subset_set_take
thf(fact_195_set__drop__subset__set__drop,axiom,
    ! [A: $tType,N: nat,M3: nat,Xs: list @ A] :
      ( ( ord_less_eq @ nat @ N @ M3 )
     => ( ord_less_eq @ ( set @ A ) @ ( set2 @ A @ ( drop @ A @ M3 @ Xs ) ) @ ( set2 @ A @ ( drop @ A @ N @ Xs ) ) ) ) ).

% set_drop_subset_set_drop
thf(fact_196_length__entries__rbtreeify__f,axiom,
    ! [A: $tType,B: $tType,N: nat,Kvs: list @ ( product_prod @ A @ B )] :
      ( ( ord_less_eq @ nat @ N @ ( size_size @ ( list @ ( product_prod @ A @ B ) ) @ Kvs ) )
     => ( ( size_size @ ( list @ ( product_prod @ A @ B ) ) @ ( rBT_Im954575269ntries @ A @ B @ ( product_fst @ ( rBT_Im246033960le_rbt @ A @ B ) @ ( list @ ( product_prod @ A @ B ) ) @ ( rBT_Im175104035eify_f @ A @ B @ N @ Kvs ) ) ) )
        = N ) ) ).

% length_entries_rbtreeify_f
thf(fact_197_local_Osorted__sort__key,axiom,
    ! [B: $tType,F: B > a,Xs: list @ B] : ( sorted @ a @ less_eq @ ( map @ B @ a @ F @ ( sort_key @ a @ B @ less_eq @ F @ Xs ) ) ) ).

% local.sorted_sort_key
thf(fact_198_local_Osorted__sort__id,axiom,
    ! [Xs: list @ a] :
      ( ( sorted @ a @ less_eq @ Xs )
     => ( ( sort_key @ a @ a @ less_eq
          @ ^ [X3: a] : X3
          @ Xs )
        = Xs ) ) ).

% local.sorted_sort_id
thf(fact_199_local_Osorted__sort,axiom,
    ! [Xs: list @ a] :
      ( sorted @ a @ less_eq
      @ ( sort_key @ a @ a @ less_eq
        @ ^ [X3: a] : X3
        @ Xs ) ) ).

% local.sorted_sort
thf(fact_200_local_Oset__sort,axiom,
    ! [B: $tType,F: B > a,Xs: list @ B] :
      ( ( set2 @ B @ ( sort_key @ a @ B @ less_eq @ F @ Xs ) )
      = ( set2 @ B @ Xs ) ) ).

% local.set_sort
thf(fact_201_local_Olength__sort,axiom,
    ! [B: $tType,F: B > a,Xs: list @ B] :
      ( ( size_size @ ( list @ B ) @ ( sort_key @ a @ B @ less_eq @ F @ Xs ) )
      = ( size_size @ ( list @ B ) @ Xs ) ) ).

% local.length_sort
thf(fact_202_local_Odistinct__sort,axiom,
    ! [B: $tType,F: B > a,Xs: list @ B] :
      ( ( distinct @ B @ ( sort_key @ a @ B @ less_eq @ F @ Xs ) )
      = ( distinct @ B @ Xs ) ) ).

% local.distinct_sort
thf(fact_203_local_Osort__key__simps_I2_J,axiom,
    ! [B: $tType,F: B > a,X2: B,Xs: list @ B] :
      ( ( sort_key @ a @ B @ less_eq @ F @ ( cons @ B @ X2 @ Xs ) )
      = ( insort_key @ a @ B @ less_eq @ F @ X2 @ ( sort_key @ a @ B @ less_eq @ F @ Xs ) ) ) ).

% local.sort_key_simps(2)
thf(fact_204_predicate2D__conj,axiom,
    ! [A: $tType,B: $tType,P: A > B > $o,Q: A > B > $o,R2: $o,X2: A,Y2: B] :
      ( ( ( ord_less_eq @ ( A > B > $o ) @ P @ Q )
        & R2 )
     => ( R2
        & ( ( P @ X2 @ Y2 )
         => ( Q @ X2 @ Y2 ) ) ) ) ).

% predicate2D_conj
thf(fact_205_eq__subset,axiom,
    ! [A: $tType,P: A > A > $o] :
      ( ord_less_eq @ ( A > A > $o )
      @ ^ [Y3: A,Z2: A] : Y3 = Z2
      @ ^ [A2: A,B2: A] :
          ( ( P @ A2 @ B2 )
          | ( A2 = B2 ) ) ) ).

% eq_subset
thf(fact_206_local_Osorted__list__of__set_Ofolding__axioms,axiom,
    ( finite_folding @ a @ ( list @ a )
    @ ( insort_key @ a @ a @ less_eq
      @ ^ [X3: a] : X3 ) ) ).

% local.sorted_list_of_set.folding_axioms
thf(fact_207_local_Osorted__list__of__set__sort__remdups,axiom,
    ! [Xs: list @ a] :
      ( ( sorted_list_of_set @ a @ less_eq @ ( set2 @ a @ Xs ) )
      = ( sort_key @ a @ a @ less_eq
        @ ^ [X3: a] : X3
        @ ( remdups @ a @ Xs ) ) ) ).

% local.sorted_list_of_set_sort_remdups
thf(fact_208_local_Osorted__remdups,axiom,
    ! [L2: list @ a] :
      ( ( sorted @ a @ less_eq @ L2 )
     => ( sorted @ a @ less_eq @ ( remdups @ a @ L2 ) ) ) ).

% local.sorted_remdups
thf(fact_209_set__remdups,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( set2 @ A @ ( remdups @ A @ Xs ) )
      = ( set2 @ A @ Xs ) ) ).

% set_remdups
thf(fact_210_length__remdups__eq,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( ( size_size @ ( list @ A ) @ ( remdups @ A @ Xs ) )
        = ( size_size @ ( list @ A ) @ Xs ) )
      = ( ( remdups @ A @ Xs )
        = Xs ) ) ).

% length_remdups_eq
thf(fact_211_distinct__remdups,axiom,
    ! [A: $tType,Xs: list @ A] : ( distinct @ A @ ( remdups @ A @ Xs ) ) ).

% distinct_remdups
thf(fact_212_remdups__id__iff__distinct,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( ( remdups @ A @ Xs )
        = Xs )
      = ( distinct @ A @ Xs ) ) ).

% remdups_id_iff_distinct
thf(fact_213_length__remdups__leq,axiom,
    ! [A: $tType,Xs: list @ A] : ( ord_less_eq @ nat @ ( size_size @ ( list @ A ) @ ( remdups @ A @ Xs ) ) @ ( size_size @ ( list @ A ) @ Xs ) ) ).

% length_remdups_leq
thf(fact_214_remdups__map__remdups,axiom,
    ! [A: $tType,B: $tType,F: B > A,Xs: list @ B] :
      ( ( remdups @ A @ ( map @ B @ A @ F @ ( remdups @ B @ Xs ) ) )
      = ( remdups @ A @ ( map @ B @ A @ F @ Xs ) ) ) ).

% remdups_map_remdups
thf(fact_215_remdups__remdups,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( remdups @ A @ ( remdups @ A @ Xs ) )
      = ( remdups @ A @ Xs ) ) ).

% remdups_remdups
thf(fact_216_distinct__remdups__id,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( distinct @ A @ Xs )
     => ( ( remdups @ A @ Xs )
        = Xs ) ) ).

% distinct_remdups_id
thf(fact_217_remdups_Osimps_I2_J,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
       => ( ( remdups @ A @ ( cons @ A @ X2 @ Xs ) )
          = ( remdups @ A @ Xs ) ) )
      & ( ~ ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
       => ( ( remdups @ A @ ( cons @ A @ X2 @ Xs ) )
          = ( cons @ A @ X2 @ ( remdups @ A @ Xs ) ) ) ) ) ).

% remdups.simps(2)
thf(fact_218_local_Oinsort__remove1,axiom,
    ! [A3: a,Xs: list @ a] :
      ( ( member @ a @ A3 @ ( set2 @ a @ Xs ) )
     => ( ( sorted @ a @ less_eq @ Xs )
       => ( ( insort_key @ a @ a @ less_eq
            @ ^ [X3: a] : X3
            @ A3
            @ ( remove1 @ a @ A3 @ Xs ) )
          = Xs ) ) ) ).

% local.insort_remove1
thf(fact_219_Suc__le__mono,axiom,
    ! [N: nat,M3: nat] :
      ( ( ord_less_eq @ nat @ ( suc @ N ) @ ( suc @ M3 ) )
      = ( ord_less_eq @ nat @ N @ M3 ) ) ).

% Suc_le_mono
thf(fact_220_local_Osorted__remove1,axiom,
    ! [Xs: list @ a,A3: a] :
      ( ( sorted @ a @ less_eq @ Xs )
     => ( sorted @ a @ less_eq @ ( remove1 @ a @ A3 @ Xs ) ) ) ).

% local.sorted_remove1
thf(fact_221_nat_Oinject,axiom,
    ! [X23: nat,Y22: nat] :
      ( ( ( suc @ X23 )
        = ( suc @ Y22 ) )
      = ( X23 = Y22 ) ) ).

% nat.inject
thf(fact_222_old_Onat_Oinject,axiom,
    ! [Nat: nat,Nat2: nat] :
      ( ( ( suc @ Nat )
        = ( suc @ Nat2 ) )
      = ( Nat = Nat2 ) ) ).

% old.nat.inject
thf(fact_223_local_Osorted__map__remove1,axiom,
    ! [B: $tType,F: B > a,Xs: list @ B,X2: B] :
      ( ( sorted @ a @ less_eq @ ( map @ B @ a @ F @ Xs ) )
     => ( sorted @ a @ less_eq @ ( map @ B @ a @ F @ ( remove1 @ B @ X2 @ Xs ) ) ) ) ).

% local.sorted_map_remove1
thf(fact_224_in__set__remove1,axiom,
    ! [A: $tType,A3: A,B3: A,Xs: list @ A] :
      ( ( A3 != B3 )
     => ( ( member @ A @ A3 @ ( set2 @ A @ ( remove1 @ A @ B3 @ Xs ) ) )
        = ( member @ A @ A3 @ ( set2 @ A @ Xs ) ) ) ) ).

% in_set_remove1
thf(fact_225_local_Oremove1__insort,axiom,
    ! [X2: a,Xs: list @ a] :
      ( ( remove1 @ a @ X2
        @ ( insort_key @ a @ a @ less_eq
          @ ^ [X3: a] : X3
          @ X2
          @ Xs ) )
      = Xs ) ).

% local.remove1_insort
thf(fact_226_set__remove1__subset,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] : ( ord_less_eq @ ( set @ A ) @ ( set2 @ A @ ( remove1 @ A @ X2 @ Xs ) ) @ ( set2 @ A @ Xs ) ) ).

% set_remove1_subset
thf(fact_227_remove1__append,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Ys: list @ A] :
      ( ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
       => ( ( remove1 @ A @ X2 @ ( append @ A @ Xs @ Ys ) )
          = ( append @ A @ ( remove1 @ A @ X2 @ Xs ) @ Ys ) ) )
      & ( ~ ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
       => ( ( remove1 @ A @ X2 @ ( append @ A @ Xs @ Ys ) )
          = ( append @ A @ Xs @ ( remove1 @ A @ X2 @ Ys ) ) ) ) ) ).

% remove1_append
thf(fact_228_remove1__idem,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ~ ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ( ( remove1 @ A @ X2 @ Xs )
        = Xs ) ) ).

% remove1_idem
thf(fact_229_notin__set__remove1,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Y2: A] :
      ( ~ ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ~ ( member @ A @ X2 @ ( set2 @ A @ ( remove1 @ A @ Y2 @ Xs ) ) ) ) ).

% notin_set_remove1
thf(fact_230_distinct__remove1,axiom,
    ! [A: $tType,Xs: list @ A,X2: A] :
      ( ( distinct @ A @ Xs )
     => ( distinct @ A @ ( remove1 @ A @ X2 @ Xs ) ) ) ).

% distinct_remove1
thf(fact_231_remove1__commute,axiom,
    ! [A: $tType,X2: A,Y2: A,Zs: list @ A] :
      ( ( remove1 @ A @ X2 @ ( remove1 @ A @ Y2 @ Zs ) )
      = ( remove1 @ A @ Y2 @ ( remove1 @ A @ X2 @ Zs ) ) ) ).

% remove1_commute
thf(fact_232_remove1_Osimps_I2_J,axiom,
    ! [A: $tType,X2: A,Y2: A,Xs: list @ A] :
      ( ( ( X2 = Y2 )
       => ( ( remove1 @ A @ X2 @ ( cons @ A @ Y2 @ Xs ) )
          = Xs ) )
      & ( ( X2 != Y2 )
       => ( ( remove1 @ A @ X2 @ ( cons @ A @ Y2 @ Xs ) )
          = ( cons @ A @ Y2 @ ( remove1 @ A @ X2 @ Xs ) ) ) ) ) ).

% remove1.simps(2)
thf(fact_233_remove1__remdups,axiom,
    ! [A: $tType,Xs: list @ A,X2: A] :
      ( ( distinct @ A @ Xs )
     => ( ( remove1 @ A @ X2 @ ( remdups @ A @ Xs ) )
        = ( remdups @ A @ ( remove1 @ A @ X2 @ Xs ) ) ) ) ).

% remove1_remdups
thf(fact_234_Suc__inject,axiom,
    ! [X2: nat,Y2: nat] :
      ( ( ( suc @ X2 )
        = ( suc @ Y2 ) )
     => ( X2 = Y2 ) ) ).

% Suc_inject
thf(fact_235_n__not__Suc__n,axiom,
    ! [N: nat] :
      ( N
     != ( suc @ N ) ) ).

% n_not_Suc_n
thf(fact_236_le__refl,axiom,
    ! [N: nat] : ( ord_less_eq @ nat @ N @ N ) ).

% le_refl
thf(fact_237_le__trans,axiom,
    ! [I: nat,J: nat,K: nat] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ( ord_less_eq @ nat @ J @ K )
       => ( ord_less_eq @ nat @ I @ K ) ) ) ).

% le_trans
thf(fact_238_eq__imp__le,axiom,
    ! [M3: nat,N: nat] :
      ( ( M3 = N )
     => ( ord_less_eq @ nat @ M3 @ N ) ) ).

% eq_imp_le
thf(fact_239_le__antisym,axiom,
    ! [M3: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M3 @ N )
     => ( ( ord_less_eq @ nat @ N @ M3 )
       => ( M3 = N ) ) ) ).

% le_antisym
thf(fact_240_nat__le__linear,axiom,
    ! [M3: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M3 @ N )
      | ( ord_less_eq @ nat @ N @ M3 ) ) ).

% nat_le_linear
thf(fact_241_Suc__leD,axiom,
    ! [M3: nat,N: nat] :
      ( ( ord_less_eq @ nat @ ( suc @ M3 ) @ N )
     => ( ord_less_eq @ nat @ M3 @ N ) ) ).

% Suc_leD
thf(fact_242_le__SucE,axiom,
    ! [M3: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M3 @ ( suc @ N ) )
     => ( ~ ( ord_less_eq @ nat @ M3 @ N )
       => ( M3
          = ( suc @ N ) ) ) ) ).

% le_SucE
thf(fact_243_le__SucI,axiom,
    ! [M3: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M3 @ N )
     => ( ord_less_eq @ nat @ M3 @ ( suc @ N ) ) ) ).

% le_SucI
thf(fact_244_Suc__le__D,axiom,
    ! [N: nat,M5: nat] :
      ( ( ord_less_eq @ nat @ ( suc @ N ) @ M5 )
     => ? [M6: nat] :
          ( M5
          = ( suc @ M6 ) ) ) ).

% Suc_le_D
thf(fact_245_le__Suc__eq,axiom,
    ! [M3: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M3 @ ( suc @ N ) )
      = ( ( ord_less_eq @ nat @ M3 @ N )
        | ( M3
          = ( suc @ N ) ) ) ) ).

% le_Suc_eq
thf(fact_246_Suc__n__not__le__n,axiom,
    ! [N: nat] :
      ~ ( ord_less_eq @ nat @ ( suc @ N ) @ N ) ).

% Suc_n_not_le_n
thf(fact_247_not__less__eq__eq,axiom,
    ! [M3: nat,N: nat] :
      ( ( ~ ( ord_less_eq @ nat @ M3 @ N ) )
      = ( ord_less_eq @ nat @ ( suc @ N ) @ M3 ) ) ).

% not_less_eq_eq
thf(fact_248_full__nat__induct,axiom,
    ! [P: nat > $o,N: nat] :
      ( ! [N3: nat] :
          ( ! [M7: nat] :
              ( ( ord_less_eq @ nat @ ( suc @ M7 ) @ N3 )
             => ( P @ M7 ) )
         => ( P @ N3 ) )
     => ( P @ N ) ) ).

% full_nat_induct
thf(fact_249_order__class_Olift__Suc__mono__le,axiom,
    ! [A: $tType] :
      ( ( order @ A @ ( type2 @ A ) )
     => ! [F: nat > A,N: nat,N2: nat] :
          ( ! [N3: nat] : ( ord_less_eq @ A @ ( F @ N3 ) @ ( F @ ( suc @ N3 ) ) )
         => ( ( ord_less_eq @ nat @ N @ N2 )
           => ( ord_less_eq @ A @ ( F @ N ) @ ( F @ N2 ) ) ) ) ) ).

% order_class.lift_Suc_mono_le
thf(fact_250_order__class_Olift__Suc__antimono__le,axiom,
    ! [A: $tType] :
      ( ( order @ A @ ( type2 @ A ) )
     => ! [F: nat > A,N: nat,N2: nat] :
          ( ! [N3: nat] : ( ord_less_eq @ A @ ( F @ ( suc @ N3 ) ) @ ( F @ N3 ) )
         => ( ( ord_less_eq @ nat @ N @ N2 )
           => ( ord_less_eq @ A @ ( F @ N2 ) @ ( F @ N ) ) ) ) ) ).

% order_class.lift_Suc_antimono_le
thf(fact_251_local_Osorted__list__of__set,axiom,
    ! [A6: set @ a] :
      ( ( finite_finite @ a @ A6 )
     => ( ( ( set2 @ a @ ( sorted_list_of_set @ a @ less_eq @ A6 ) )
          = A6 )
        & ( sorted @ a @ less_eq @ ( sorted_list_of_set @ a @ less_eq @ A6 ) )
        & ( distinct @ a @ ( sorted_list_of_set @ a @ less_eq @ A6 ) ) ) ) ).

% local.sorted_list_of_set
thf(fact_252_local_Osorted_Ocases,axiom,
    ! [A3: list @ a] :
      ( ( sorted @ a @ less_eq @ A3 )
     => ( ( A3
         != ( nil @ a ) )
       => ~ ! [Xs3: list @ a,X4: a] :
              ( ( A3
                = ( cons @ a @ X4 @ Xs3 ) )
             => ( ! [Xa: a] :
                    ( ( member @ a @ Xa @ ( set2 @ a @ Xs3 ) )
                   => ( less_eq @ X4 @ Xa ) )
               => ~ ( sorted @ a @ less_eq @ Xs3 ) ) ) ) ) ).

% local.sorted.cases
thf(fact_253_local_Oinsort__not__Nil,axiom,
    ! [B: $tType,F: B > a,A3: B,Xs: list @ B] :
      ( ( insort_key @ a @ B @ less_eq @ F @ A3 @ Xs )
     != ( nil @ B ) ) ).

% local.insort_not_Nil
thf(fact_254_local_Osorted_ONil,axiom,
    sorted @ a @ less_eq @ ( nil @ a ) ).

% local.sorted.Nil

%----Type constructors (4)
thf(tcon_fun___Orderings_Oorder,axiom,
    ! [A7: $tType,A8: $tType] :
      ( ( order @ A8 @ ( type2 @ A8 ) )
     => ( order @ ( A7 > A8 ) @ ( type2 @ ( A7 > A8 ) ) ) ) ).

thf(tcon_Nat_Onat___Orderings_Oorder_1,axiom,
    order @ nat @ ( type2 @ nat ) ).

thf(tcon_Set_Oset___Orderings_Oorder_2,axiom,
    ! [A7: $tType] : ( order @ ( set @ A7 ) @ ( type2 @ ( set @ A7 ) ) ) ).

thf(tcon_HOL_Obool___Orderings_Oorder_3,axiom,
    order @ $o @ ( type2 @ $o ) ).

%----Conjectures (1)
thf(conj_0,conjecture,
    ( ! [X4: product_prod @ a @ b] :
        ( ( member @ ( product_prod @ a @ b ) @ X4 @ ( set2 @ ( product_prod @ a @ b ) @ ( take @ ( product_prod @ a @ b ) @ na @ kvsa ) ) )
       => ( product_case_prod @ a @ b @ $o
          @ ^ [Y: a,Z: b] : Y != k
          @ X4 ) )
    & ! [X4: product_prod @ a @ b] :
        ( ( member @ ( product_prod @ a @ b ) @ X4 @ ( set2 @ ( product_prod @ a @ b ) @ kvs ) )
       => ( product_case_prod @ a @ b @ $o
          @ ^ [Y: a,Z: b] : Y != k
          @ X4 ) ) ) ).

%------------------------------------------------------------------------------
