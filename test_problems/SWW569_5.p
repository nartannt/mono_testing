%------------------------------------------------------------------------------
% File     : SWW569_5 : TPTP v8.2.0. Released v6.0.0.
% Domain   : Software Verification
% Problem  : Java type soundness line 326
% Version  : Especial.
% English  : 

% Refs     : [BN10]  Boehme & Nipkow (2010), Sledgehammer: Judgement Day
%          : [Bla13] Blanchette (2011), Email to Geoff Sutcliffe
% Source   : [Bla13]
% Names    : jinja_326 [Bla13]

% Status   : Theorem
% Rating   : 0.33 v7.4.0, 0.25 v7.3.0, 0.50 v7.1.0, 0.33 v6.4.0
% Syntax   : Number of formulae    :  153 (  42 unt;  50 typ;   0 def)
%            Number of atoms       :  225 (  59 equ)
%            Maximal formula atoms :    7 (   1 avg)
%            Number of connectives :  166 (  44   ~;   1   |;  11   &)
%                                         (  12 <=>;  98  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   19 (   8 avg)
%            Maximal term depth    :   10 (   3 avg)
%            Number of types       :    6 (   5 usr)
%            Number of type conns  :   64 (  30   >;  34   *;   0   +;   0  <<)
%            Number of predicates  :   12 (  11 usr;   0 prp; 1-6 aty)
%            Number of functors    :   34 (  34 usr;  15 con; 0-6 aty)
%            Number of variables   :  576 ( 541   !;   9   ?; 576   :)
%                                         (  26  !>;   0  ?*;   0  @-;   0  @+)
% SPC      : TF1_THM_EQU_NAR

% Comments : This file was generated by Isabelle (most likely Sledgehammer)
%            2011-12-13 16:20:10
%------------------------------------------------------------------------------
%----Should-be-implicit typings (10)
tff(ty_tc_Expr_Oexp,type,
    exp: $tType > $tType ).

tff(ty_tc_HOL_Obool,type,
    bool: $tType ).

tff(ty_tc_List_Olist,type,
    list: $tType > $tType ).

tff(ty_tc_Nat_Onat,type,
    nat: $tType ).

tff(ty_tc_Option_Ooption,type,
    option: $tType > $tType ).

tff(ty_tc_String_Ochar,type,
    char: $tType ).

tff(ty_tc_Type_Oty,type,
    ty: $tType ).

tff(ty_tc_Value_Oval,type,
    val: $tType ).

tff(ty_tc_fun,type,
    fun: ( $tType * $tType ) > $tType ).

tff(ty_tc_prod,type,
    product_prod: ( $tType * $tType ) > $tType ).

%----Explicit typings (40)
tff(sy_c_Conform_Ohconf,type,
    hconf: 
      !>[M: $tType] : ( ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))) * fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ) > $o ) ).

tff(sy_c_Conform_Olconf,type,
    lconf: 
      !>[M: $tType] : ( ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))) * fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) * fun(list(char),option(val)) * fun(list(char),option(ty)) ) > $o ) ).

tff(sy_c_Expr_Oexp_OFAcc,type,
    fAcc: 
      !>[A: $tType] : ( ( exp(A) * list(char) * list(char) ) > exp(A) ) ).

tff(sy_c_Expr_Oexp_OTryCatch,type,
    tryCatch: 
      !>[A: $tType] : ( ( exp(A) * list(char) * A * exp(A) ) > exp(A) ) ).

tff(sy_c_Expr_Oexp_OWhile,type,
    while: 
      !>[A: $tType] : ( ( exp(A) * exp(A) ) > exp(A) ) ).

tff(sy_c_Expr_Oexp_Othrow,type,
    throw: 
      !>[A: $tType] : ( exp(A) > exp(A) ) ).

tff(sy_c_JWellForm_Owf__J__mdecl,type,
    wf_J_mdecl: fun(list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),fun(list(char),fun(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))),bool))) ).

tff(sy_c_Map_Omap__add,type,
    map_add: 
      !>[A: $tType,B1: $tType] : ( ( fun(A,option(B1)) * fun(A,option(B1)) ) > fun(A,option(B1)) ) ).

tff(sy_c_Objects_Ohext,type,
    hext: ( fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) * fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ) > $o ).

tff(sy_c_Product__Type_OPair,type,
    product_Pair: 
      !>[A: $tType,B1: $tType] : ( ( A * B1 ) > product_prod(A,B1) ) ).

tff(sy_c_Product__Type_Ocurry,type,
    product_curry: 
      !>[A: $tType,B1: $tType,C2: $tType] : ( ( fun(product_prod(A,B1),C2) * A * B1 ) > C2 ) ).

tff(sy_c_Product__Type_Ointernal__split,type,
    produc1605651328_split: 
      !>[A: $tType,B1: $tType,C2: $tType] : ( ( fun(A,fun(B1,C2)) * product_prod(A,B1) ) > C2 ) ).

tff(sy_c_Product__Type_Oprod_Oprod__rec,type,
    product_prod_rec: 
      !>[A: $tType,B1: $tType,T3: $tType] : ( ( fun(A,fun(B1,T3)) * product_prod(A,B1) ) > T3 ) ).

tff(sy_c_SmallStep_Ored,type,
    red: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))) > fun(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),bool) ).

tff(sy_c_State_Ohp,type,
    hp: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))) > fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ).

tff(sy_c_Transitive__Closure_Ortrancl,type,
    transitive_rtrancl: 
      !>[A: $tType] : ( fun(product_prod(A,A),bool) > fun(product_prod(A,A),bool) ) ).

tff(sy_c_TypeRel_Ohas__field,type,
    has_field: 
      !>[M: $tType] : ( ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))) * list(char) * list(char) * ty * list(char) ) > $o ) ).

tff(sy_c_TypeRel_Owiden,type,
    widen: 
      !>[M: $tType] : ( ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))) * ty * ty ) > $o ) ).

tff(sy_c_TypeSafe__Mirabelle__jrcojvmxyu_Osconf,type,
    typeSa976492716_sconf: ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))) * fun(list(char),option(ty)) * product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))) ) > $o ).

tff(sy_c_Type_Ois__refT,type,
    is_refT: ty > $o ).

tff(sy_c_Type_Oty_OClass,type,
    class: list(char) > ty ).

tff(sy_c_Type_Oty_ONT,type,
    nt: ty ).

tff(sy_c_WellForm_Owf__prog,type,
    wf_prog: 
      !>[M: $tType] : ( ( fun(list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))),fun(list(char),fun(product_prod(list(char),product_prod(list(ty),product_prod(ty,M))),bool))) * list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M)))))))) ) > $o ) ).

tff(sy_c_WellTypeRT_OWTrt,type,
    wTrt: ( list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))) * fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) * fun(list(char),option(ty)) * exp(list(char)) * ty ) > $o ).

tff(sy_c_aa,type,
    aa: 
      !>[A: $tType,B1: $tType] : ( ( fun(A,B1) * A ) > B1 ) ).

tff(sy_c_fFalse,type,
    fFalse: bool ).

tff(sy_c_fTrue,type,
    fTrue: bool ).

tff(sy_c_member,type,
    member: 
      !>[A: $tType] : ( ( A * fun(A,bool) ) > $o ) ).

tff(sy_c_pp,type,
    pp: bool > $o ).

tff(sy_v_D____,type,
    d: list(char) ).

tff(sy_v_E____,type,
    e: fun(list(char),option(ty)) ).

tff(sy_v_F____,type,
    f: list(char) ).

tff(sy_v_P,type,
    p: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))) ).

tff(sy_v_T____,type,
    t: ty ).

tff(sy_v_e_Ha____,type,
    e_a: exp(list(char)) ).

tff(sy_v_ea____,type,
    ea: exp(list(char)) ).

tff(sy_v_h_Ha____,type,
    h_a: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ).

tff(sy_v_ha____,type,
    ha: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))) ).

tff(sy_v_l_Ha____,type,
    l_a: fun(list(char),option(val)) ).

tff(sy_v_la____,type,
    la: fun(list(char),option(val)) ).

%----Relevant facts (100)
tff(fact_0__096P_ME_Mh_H_A_092_060turnstile_062_Ae_H_A_058_ANT_096,axiom,
    wTrt(p,h_a,e,e_a,nt) ).

tff(fact_1_FAccRed_I4_J,axiom,
    wTrt(p,ha,e,fAcc(list(char),ea,f,d),t) ).

tff(fact_2_wt,axiom,
    wTrt(p,ha,e,fAcc(list(char),ea,f,d),t) ).

tff(fact_3_exp_Osimps_I7_J,axiom,
    ! [A: $tType,List22: list(char),List12: list(char),Exp5: exp(A),List21: list(char),List11: list(char),Exp4: exp(A)] :
      ( ( fAcc(A,Exp4,List11,List21) = fAcc(A,Exp5,List12,List22) )
    <=> ( ( Exp4 = Exp5 )
        & ( List11 = List12 )
        & ( List21 = List22 ) ) ) ).

tff(fact_4_widen__refl,axiom,
    ! [M: $tType,T1: ty,P2: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M))))))))] : widen(M,P2,T1,T1) ).

tff(fact_5__096P_ME_Mh_A_092_060turnstile_062_Ae_A_058_ANT_096,axiom,
    wTrt(p,ha,e,ea,nt) ).

tff(fact_6_assms,axiom,
    wf_prog(product_prod(list(list(char)),exp(list(char))),wf_J_mdecl,p) ).

tff(fact_7_calculation,axiom,
    ! [C1: list(char)] :
      ( wTrt(p,ha,e,ea,class(C1))
     => ( has_field(product_prod(list(list(char)),exp(list(char))),p,C1,f,t,d)
       => ? [T2: ty] :
            ( wTrt(p,h_a,e,fAcc(list(char),e_a,f,d),T2)
            & widen(product_prod(list(list(char)),exp(list(char))),p,T2,t) ) ) ) ).

tff(fact_8_WTrtFAccNT,axiom,
    ! [Ta: ty,Da: list(char),Fa: list(char),Eb: exp(list(char)),Ea: fun(list(char),option(ty)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))))))))] :
      ( wTrt(Pa,Hb,Ea,Eb,nt)
     => wTrt(Pa,Hb,Ea,fAcc(list(char),Eb,Fa,Da),Ta) ) ).

tff(fact_9_widen__trans,axiom,
    ! [A: $tType,T1: ty,U1: ty,S3: ty,P2: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,A))))))))] :
      ( widen(A,P2,S3,U1)
     => ( widen(A,P2,U1,T1)
       => widen(A,P2,S3,T1) ) ) ).

tff(fact_10_FAccRed_I2_J,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty))] :
      ( typeSa976492716_sconf(p,Ea,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la))
     => ( wTrt(p,ha,Ea,ea,Ta)
       => ? [T2: ty] :
            ( wTrt(p,h_a,Ea,e_a,T2)
            & widen(product_prod(list(list(char)),exp(list(char))),p,T2,Ta) ) ) ) ).

tff(fact_11_IH,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty))] :
      ( typeSa976492716_sconf(p,Ea,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la))
     => ( wTrt(p,ha,Ea,ea,Ta)
       => ? [U: ty] :
            ( wTrt(p,h_a,Ea,e_a,U)
            & widen(product_prod(list(list(char)),exp(list(char))),p,U,Ta) ) ) ) ).

tff(fact_12_FAccRed_I3_J,axiom,
    typeSa976492716_sconf(p,e,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la)) ).

tff(fact_13_conf,axiom,
    typeSa976492716_sconf(p,e,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la)) ).

tff(fact_14_widen__null,axiom,
    ! [M: $tType,C6: list(char),P2: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,M))))))))] : widen(M,P2,nt,class(C6)) ).

tff(fact_15_WTrtFAcc,axiom,
    ! [Da: list(char),Ta: ty,Fa: list(char),C1: list(char),Eb: exp(list(char)),Ea: fun(list(char),option(ty)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))))))))] :
      ( wTrt(Pa,Hb,Ea,Eb,class(C1))
     => ( has_field(product_prod(list(list(char)),exp(list(char))),Pa,C1,Fa,Ta,Da)
       => wTrt(Pa,Hb,Ea,fAcc(list(char),Eb,Fa,Da),Ta) ) ) ).

tff(fact_16_WTrt__elim__cases_I7_J,axiom,
    ! [Ta: ty,Da: list(char),Fa: list(char),Eb: exp(list(char)),Ea: fun(list(char),option(ty)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))))))))] :
      ( wTrt(Pa,Hb,Ea,fAcc(list(char),Eb,Fa,Da),Ta)
     => ( ! [C3: list(char)] :
            ( wTrt(Pa,Hb,Ea,Eb,class(C3))
           => ~ has_field(product_prod(list(list(char)),exp(list(char))),Pa,C3,Fa,Ta,Da) )
       => wTrt(Pa,Hb,Ea,Eb,nt) ) ) ).

tff(fact_17_Type_Oty_Oinject,axiom,
    ! [List4: list(char),List3: list(char)] :
      ( ( class(List3) = class(List4) )
    <=> ( List3 = List4 ) ) ).

tff(fact_18_Class__widen,axiom,
    ! [A: $tType,T1: ty,C6: list(char),P2: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,A))))))))] :
      ( widen(A,P2,class(C6),T1)
     => ? [D2: list(char)] : T1 = class(D2) ) ).

tff(fact_19_split__paired__All,axiom,
    ! [A: $tType,B1: $tType,Pa: fun(product_prod(A,B1),bool)] :
      ( ! [X11: product_prod(A,B1)] : pp(aa(product_prod(A,B1),bool,Pa,X11))
    <=> ! [A6: A,B3: B1] : pp(aa(product_prod(A,B1),bool,Pa,product_Pair(A,B1,A6,B3))) ) ).

tff(fact_20_Pair__eq,axiom,
    ! [A: $tType,B1: $tType,B6: B1,A3: A,B: B1,A2: A] :
      ( ( product_Pair(A,B1,A2,B) = product_Pair(A,B1,A3,B6) )
    <=> ( ( A2 = A3 )
        & ( B = B6 ) ) ) ).

tff(fact_21_Type_Oty_Osimps_I20_J,axiom,
    ! [List: list(char)] : nt != class(List) ).

tff(fact_22_Type_Oty_Osimps_I21_J,axiom,
    ! [List: list(char)] : class(List) != nt ).

tff(fact_23_FAccRed_I1_J,axiom,
    member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),ea,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),ha,la)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),e_a,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),h_a,l_a))),red(p)) ).

tff(fact_24_pred__equals__eq2,axiom,
    ! [B1: $tType,A: $tType,S2: fun(product_prod(A,B1),bool),R1: fun(product_prod(A,B1),bool)] :
      ( ! [X3: A,Xa2: B1] :
          ( member(product_prod(A,B1),product_Pair(A,B1,X3,Xa2),R1)
        <=> member(product_prod(A,B1),product_Pair(A,B1,X3,Xa2),S2) )
    <=> ( R1 = S2 ) ) ).

tff(fact_25_Pair__inject,axiom,
    ! [A: $tType,B1: $tType,B5: B1,A1: A,B4: B1,A7: A] :
      ( ( product_Pair(A,B1,A7,B4) = product_Pair(A,B1,A1,B5) )
     => ~ ( ( A7 = A1 )
         => ( B4 != B5 ) ) ) ).

tff(fact_26_red__reds_OFAccRed,axiom,
    ! [Da: list(char),Fa: list(char),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),red(Pa))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAcc(list(char),Eb,Fa,Da),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAcc(list(char),E_b,Fa,Da),S1)),red(Pa)) ) ).

tff(fact_27_prod__cases4,axiom,
    ! [A: $tType,B1: $tType,C2: $tType,D: $tType,Y1: product_prod(A,product_prod(B1,product_prod(C2,D)))] :
      ~ ! [A5: A,B2: B1,C5: C2,D1: D] : Y1 != product_Pair(A,product_prod(B1,product_prod(C2,D)),A5,product_Pair(B1,product_prod(C2,D),B2,product_Pair(C2,D,C5,D1))) ).

tff(fact_28_prod__induct4,axiom,
    ! [D: $tType,C2: $tType,B1: $tType,A: $tType,X: product_prod(A,product_prod(B1,product_prod(C2,D))),Pa: fun(product_prod(A,product_prod(B1,product_prod(C2,D))),bool)] :
      ( ! [A5: A,B2: B1,C5: C2,D1: D] : pp(aa(product_prod(A,product_prod(B1,product_prod(C2,D))),bool,Pa,product_Pair(A,product_prod(B1,product_prod(C2,D)),A5,product_Pair(B1,product_prod(C2,D),B2,product_Pair(C2,D,C5,D1)))))
     => pp(aa(product_prod(A,product_prod(B1,product_prod(C2,D))),bool,Pa,X)) ) ).

tff(fact_29_prod__cases5,axiom,
    ! [A: $tType,B1: $tType,C2: $tType,D: $tType,E: $tType,Y1: product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,E))))] :
      ~ ! [A5: A,B2: B1,C5: C2,D1: D,E1: E] : Y1 != product_Pair(A,product_prod(B1,product_prod(C2,product_prod(D,E))),A5,product_Pair(B1,product_prod(C2,product_prod(D,E)),B2,product_Pair(C2,product_prod(D,E),C5,product_Pair(D,E,D1,E1)))) ).

tff(fact_30_prod__induct5,axiom,
    ! [E: $tType,D: $tType,C2: $tType,B1: $tType,A: $tType,X: product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,E)))),Pa: fun(product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,E)))),bool)] :
      ( ! [A5: A,B2: B1,C5: C2,D1: D,E1: E] : pp(aa(product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,E)))),bool,Pa,product_Pair(A,product_prod(B1,product_prod(C2,product_prod(D,E))),A5,product_Pair(B1,product_prod(C2,product_prod(D,E)),B2,product_Pair(C2,product_prod(D,E),C5,product_Pair(D,E,D1,E1))))))
     => pp(aa(product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,E)))),bool,Pa,X)) ) ).

tff(fact_31_prod__cases6,axiom,
    ! [A: $tType,B1: $tType,C2: $tType,D: $tType,E: $tType,F2: $tType,Y1: product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,product_prod(E,F2)))))] :
      ~ ! [A5: A,B2: B1,C5: C2,D1: D,E1: E,F3: F2] : Y1 != product_Pair(A,product_prod(B1,product_prod(C2,product_prod(D,product_prod(E,F2)))),A5,product_Pair(B1,product_prod(C2,product_prod(D,product_prod(E,F2))),B2,product_Pair(C2,product_prod(D,product_prod(E,F2)),C5,product_Pair(D,product_prod(E,F2),D1,product_Pair(E,F2,E1,F3))))) ).

tff(fact_32_prod__induct6,axiom,
    ! [F2: $tType,E: $tType,D: $tType,C2: $tType,B1: $tType,A: $tType,X: product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,product_prod(E,F2))))),Pa: fun(product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,product_prod(E,F2))))),bool)] :
      ( ! [A5: A,B2: B1,C5: C2,D1: D,E1: E,F3: F2] : pp(aa(product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,product_prod(E,F2))))),bool,Pa,product_Pair(A,product_prod(B1,product_prod(C2,product_prod(D,product_prod(E,F2)))),A5,product_Pair(B1,product_prod(C2,product_prod(D,product_prod(E,F2))),B2,product_Pair(C2,product_prod(D,product_prod(E,F2)),C5,product_Pair(D,product_prod(E,F2),D1,product_Pair(E,F2,E1,F3)))))))
     => pp(aa(product_prod(A,product_prod(B1,product_prod(C2,product_prod(D,product_prod(E,F2))))),bool,Pa,X)) ) ).

tff(fact_33_split__paired__Ex,axiom,
    ! [A: $tType,B1: $tType,Pa: fun(product_prod(A,B1),bool)] :
      ( ? [X11: product_prod(A,B1)] : pp(aa(product_prod(A,B1),bool,Pa,X11))
    <=> ? [A6: A,B3: B1] : pp(aa(product_prod(A,B1),bool,Pa,product_Pair(A,B1,A6,B3))) ) ).

tff(fact_34_red__preserves__hconf,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),red(Pa))
     => ( wTrt(Pa,Hb,Ea,Eb,Ta)
       => ( hconf(product_prod(list(list(char)),exp(list(char))),Pa,Hb)
         => hconf(product_prod(list(list(char)),exp(list(char))),Pa,H_b) ) ) ) ).

tff(fact_35_red__preserves__lconf,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),red(Pa))
     => ( wTrt(Pa,Hb,Ea,Eb,Ta)
       => ( lconf(product_prod(list(list(char)),exp(list(char))),Pa,Hb,Lb,Ea)
         => lconf(product_prod(list(list(char)),exp(list(char))),Pa,H_b,L_b,Ea) ) ) ) ).

tff(fact_36_prod__induct3,axiom,
    ! [C2: $tType,B1: $tType,A: $tType,X: product_prod(A,product_prod(B1,C2)),Pa: fun(product_prod(A,product_prod(B1,C2)),bool)] :
      ( ! [A5: A,B2: B1,C5: C2] : pp(aa(product_prod(A,product_prod(B1,C2)),bool,Pa,product_Pair(A,product_prod(B1,C2),A5,product_Pair(B1,C2,B2,C5))))
     => pp(aa(product_prod(A,product_prod(B1,C2)),bool,Pa,X)) ) ).

tff(fact_37_prod__cases3,axiom,
    ! [A: $tType,B1: $tType,C2: $tType,Y1: product_prod(A,product_prod(B1,C2))] :
      ~ ! [A5: A,B2: B1,C5: C2] : Y1 != product_Pair(A,product_prod(B1,C2),A5,product_Pair(B1,C2,B2,C5)) ).

tff(fact_38_red__preserves__sconf,axiom,
    ! [Ta: ty,Ea: fun(list(char),option(ty)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),red(Pa))
     => ( wTrt(Pa,hp(S),Ea,Eb,Ta)
       => ( typeSa976492716_sconf(Pa,Ea,S)
         => typeSa976492716_sconf(Pa,Ea,S1) ) ) ) ).

tff(fact_39_prod_Orecs,axiom,
    ! [B1: $tType,A: $tType,C2: $tType,B: C2,A2: B1,F1: fun(B1,fun(C2,A))] : product_prod_rec(B1,C2,A,F1,product_Pair(B1,C2,A2,B)) = aa(C2,A,aa(B1,fun(C2,A),F1,A2),B) ).

tff(fact_40_red__hext__incr,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),red(Pa))
     => hext(Hb,H_b) ) ).

tff(fact_41_red__lcl__add,axiom,
    ! [L_0: fun(list(char),option(val)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),red(Pa))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,map_add(list(char),val,L_0,Lb))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,map_add(list(char),val,L_0,L_b)))),red(Pa)) ) ).

tff(fact_42_is__refT__def,axiom,
    ! [Ta: ty] :
      ( is_refT(Ta)
    <=> ( ( Ta = nt )
        | ? [C4: list(char)] : Ta = class(C4) ) ) ).

tff(fact_43_prod_Oexhaust,axiom,
    ! [A: $tType,B1: $tType,Y1: product_prod(A,B1)] :
      ~ ! [A5: A,B2: B1] : Y1 != product_Pair(A,B1,A5,B2) ).

tff(fact_44_WTrt__hext__mono,axiom,
    ! [H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Ta: ty,Eb: exp(list(char)),Ea: fun(list(char),option(ty)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))))))))] :
      ( wTrt(Pa,Hb,Ea,Eb,Ta)
     => ( hext(Hb,H_b)
       => wTrt(Pa,H_b,Ea,Eb,Ta) ) ) ).

tff(fact_45_refTE,axiom,
    ! [T1: ty] :
      ( is_refT(T1)
     => ( ( T1 != nt )
       => ~ ! [C3: list(char)] : T1 != class(C3) ) ) ).

tff(fact_46_hext__refl,axiom,
    ! [Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val)))))] : hext(Hb,Hb) ).

tff(fact_47_map__add__assoc,axiom,
    ! [B1: $tType,A: $tType,M3: fun(A,option(B1)),M2: fun(A,option(B1)),M1: fun(A,option(B1))] : map_add(A,B1,M1,map_add(A,B1,M2,M3)) = map_add(A,B1,map_add(A,B1,M1,M2),M3) ).

tff(fact_48_lconf__hext,axiom,
    ! [A: $tType,H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Ea: fun(list(char),option(ty)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,A))))))))] :
      ( lconf(A,Pa,Hb,Lb,Ea)
     => ( hext(Hb,H_b)
       => lconf(A,Pa,H_b,Lb,Ea) ) ) ).

tff(fact_49_hext__trans,axiom,
    ! [H: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val)))))] :
      ( hext(Hb,H_b)
     => ( hext(H_b,H)
       => hext(Hb,H) ) ) ).

tff(fact_50_Red__lcl__add,axiom,
    ! [L_0: fun(list(char),option(val)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),L_b: fun(list(char),option(val)),H_b: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),E_b: exp(list(char)),Lb: fun(list(char),option(val)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,Lb)),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,L_b))),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),Hb,map_add(list(char),val,L_0,Lb))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,product_Pair(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)),H_b,map_add(list(char),val,L_0,L_b)))),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_51_PairE,axiom,
    ! [A: $tType,B1: $tType,P1: product_prod(A,B1)] :
      ~ ! [X1: A,Y: B1] : P1 != product_Pair(A,B1,X1,Y) ).

tff(fact_52_internal__split__conv,axiom,
    ! [B1: $tType,A: $tType,C2: $tType,B: C2,A2: B1,C: fun(B1,fun(C2,A))] : produc1605651328_split(B1,C2,A,C,product_Pair(B1,C2,A2,B)) = aa(C2,A,aa(B1,fun(C2,A),C,A2),B) ).

tff(fact_53_curry__conv,axiom,
    ! [A: $tType,B1: $tType,C2: $tType,B: C2,A2: B1,F: fun(product_prod(B1,C2),A)] : product_curry(B1,C2,A,F,A2,B) = aa(product_prod(B1,C2),A,F,product_Pair(B1,C2,A2,B)) ).

tff(fact_54_curryI,axiom,
    ! [A: $tType,B1: $tType,B: B1,A2: A,F: fun(product_prod(A,B1),bool)] :
      ( pp(aa(product_prod(A,B1),bool,F,product_Pair(A,B1,A2,B)))
     => pp(product_curry(A,B1,bool,F,A2,B)) ) ).

tff(fact_55_curryD,axiom,
    ! [A: $tType,B1: $tType,B: B1,A2: A,F: fun(product_prod(A,B1),bool)] :
      ( pp(product_curry(A,B1,bool,F,A2,B))
     => pp(aa(product_prod(A,B1),bool,F,product_Pair(A,B1,A2,B))) ) ).

tff(fact_56_curryE,axiom,
    ! [A: $tType,B1: $tType,B: B1,A2: A,F: fun(product_prod(A,B1),bool)] :
      ( pp(product_curry(A,B1,bool,F,A2,B))
     => pp(aa(product_prod(A,B1),bool,F,product_Pair(A,B1,A2,B))) ) ).

tff(fact_57_curry__def,axiom,
    ! [C2: $tType,A: $tType,B1: $tType,X2: fun(product_prod(A,B1),C2),Xa1: A,Xb1: B1] : product_curry(A,B1,C2,X2,Xa1,Xb1) = aa(product_prod(A,B1),C2,X2,product_Pair(A,B1,Xa1,Xb1)) ).

tff(fact_58_FAccReds,axiom,
    ! [Da: list(char),Fa: list(char),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAcc(list(char),Eb,Fa,Da),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAcc(list(char),E_b,Fa,Da),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_59_rtrancl_Ortrancl__refl,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool),A2: A] : member(product_prod(A,A),product_Pair(A,A,A2,A2),transitive_rtrancl(A,R)) ).

tff(fact_60_rtrancl__idemp,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool)] : transitive_rtrancl(A,transitive_rtrancl(A,R)) = transitive_rtrancl(A,R) ).

tff(fact_61_r__into__rtrancl,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool),P: product_prod(A,A)] :
      ( member(product_prod(A,A),P,R)
     => member(product_prod(A,A),P,transitive_rtrancl(A,R)) ) ).

tff(fact_62_converse__rtrancl__into__rtrancl,axiom,
    ! [A: $tType,C: A,R: fun(product_prod(A,A),bool),B: A,A2: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A2,B),R)
     => ( member(product_prod(A,A),product_Pair(A,A,B,C),transitive_rtrancl(A,R))
       => member(product_prod(A,A),product_Pair(A,A,A2,C),transitive_rtrancl(A,R)) ) ) ).

tff(fact_63_rtrancl_Ortrancl__into__rtrancl,axiom,
    ! [A: $tType,C: A,R: fun(product_prod(A,A),bool),B: A,A2: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A2,B),transitive_rtrancl(A,R))
     => ( member(product_prod(A,A),product_Pair(A,A,B,C),R)
       => member(product_prod(A,A),product_Pair(A,A,A2,C),transitive_rtrancl(A,R)) ) ) ).

tff(fact_64_rtrancl__trans,axiom,
    ! [A: $tType,C: A,R: fun(product_prod(A,A),bool),B: A,A2: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A2,B),transitive_rtrancl(A,R))
     => ( member(product_prod(A,A),product_Pair(A,A,B,C),transitive_rtrancl(A,R))
       => member(product_prod(A,A),product_Pair(A,A,A2,C),transitive_rtrancl(A,R)) ) ) ).

tff(fact_65_converse__rtranclE2,axiom,
    ! [B1: $tType,A: $tType,R: fun(product_prod(product_prod(A,B1),product_prod(A,B1)),bool),Zb: B1,Za: A,Xb: B1,Xa: A] :
      ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Xa,Xb),product_Pair(A,B1,Za,Zb)),transitive_rtrancl(product_prod(A,B1),R))
     => ( ( product_Pair(A,B1,Xa,Xb) != product_Pair(A,B1,Za,Zb) )
       => ~ ! [A5: A,B2: B1] :
              ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Xa,Xb),product_Pair(A,B1,A5,B2)),R)
             => ~ member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,A5,B2),product_Pair(A,B1,Za,Zb)),transitive_rtrancl(product_prod(A,B1),R)) ) ) ) ).

tff(fact_66_converse__rtrancl__induct2,axiom,
    ! [A: $tType,B1: $tType,Pa: fun(A,fun(B1,bool)),R: fun(product_prod(product_prod(A,B1),product_prod(A,B1)),bool),By: B1,Bx: A,Ay: B1,Ax: A] :
      ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Ax,Ay),product_Pair(A,B1,Bx,By)),transitive_rtrancl(product_prod(A,B1),R))
     => ( pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Bx),By))
       => ( ! [A5: A,B2: B1,Aa: A,Ba: B1] :
              ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,A5,B2),product_Pair(A,B1,Aa,Ba)),R)
             => ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Aa,Ba),product_Pair(A,B1,Bx,By)),transitive_rtrancl(product_prod(A,B1),R))
               => ( pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Aa),Ba))
                 => pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,A5),B2)) ) ) )
         => pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Ax),Ay)) ) ) ) ).

tff(fact_67_rtrancl__induct2,axiom,
    ! [A: $tType,B1: $tType,Pa: fun(A,fun(B1,bool)),R: fun(product_prod(product_prod(A,B1),product_prod(A,B1)),bool),By: B1,Bx: A,Ay: B1,Ax: A] :
      ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Ax,Ay),product_Pair(A,B1,Bx,By)),transitive_rtrancl(product_prod(A,B1),R))
     => ( pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Ax),Ay))
       => ( ! [A5: A,B2: B1,Aa: A,Ba: B1] :
              ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,Ax,Ay),product_Pair(A,B1,A5,B2)),transitive_rtrancl(product_prod(A,B1),R))
             => ( member(product_prod(product_prod(A,B1),product_prod(A,B1)),product_Pair(product_prod(A,B1),product_prod(A,B1),product_Pair(A,B1,A5,B2),product_Pair(A,B1,Aa,Ba)),R)
               => ( pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,A5),B2))
                 => pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Aa),Ba)) ) ) )
         => pp(aa(B1,bool,aa(A,fun(B1,bool),Pa,Bx),By)) ) ) ) ).

tff(fact_68_rtranclE,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool),B: A,A2: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A2,B),transitive_rtrancl(A,R))
     => ( ( A2 != B )
       => ~ ! [Y: A] :
              ( member(product_prod(A,A),product_Pair(A,A,A2,Y),transitive_rtrancl(A,R))
             => ~ member(product_prod(A,A),product_Pair(A,A,Y,B),R) ) ) ) ).

tff(fact_69_converse__rtranclE,axiom,
    ! [A: $tType,R: fun(product_prod(A,A),bool),Z1: A,X: A] :
      ( member(product_prod(A,A),product_Pair(A,A,X,Z1),transitive_rtrancl(A,R))
     => ( ( X != Z1 )
       => ~ ! [Y: A] :
              ( member(product_prod(A,A),product_Pair(A,A,X,Y),R)
             => ~ member(product_prod(A,A),product_Pair(A,A,Y,Z1),transitive_rtrancl(A,R)) ) ) ) ).

tff(fact_70_converse__rtrancl__induct,axiom,
    ! [A: $tType,Pa: fun(A,bool),R: fun(product_prod(A,A),bool),B: A,A2: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A2,B),transitive_rtrancl(A,R))
     => ( pp(aa(A,bool,Pa,B))
       => ( ! [Y: A,Z: A] :
              ( member(product_prod(A,A),product_Pair(A,A,Y,Z),R)
             => ( member(product_prod(A,A),product_Pair(A,A,Z,B),transitive_rtrancl(A,R))
               => ( pp(aa(A,bool,Pa,Z))
                 => pp(aa(A,bool,Pa,Y)) ) ) )
         => pp(aa(A,bool,Pa,A2)) ) ) ) ).

tff(fact_71_rtrancl__induct,axiom,
    ! [A: $tType,Pa: fun(A,bool),R: fun(product_prod(A,A),bool),B: A,A2: A] :
      ( member(product_prod(A,A),product_Pair(A,A,A2,B),transitive_rtrancl(A,R))
     => ( pp(aa(A,bool,Pa,A2))
       => ( ! [Y: A,Z: A] :
              ( member(product_prod(A,A),product_Pair(A,A,A2,Y),transitive_rtrancl(A,R))
             => ( member(product_prod(A,A),product_Pair(A,A,Y,Z),R)
               => ( pp(aa(A,bool,Pa,Y))
                 => pp(aa(A,bool,Pa,Z)) ) ) )
         => pp(aa(A,bool,Pa,B)) ) ) ) ).

tff(fact_72_FAccRedsThrow,axiom,
    ! [Da: list(char),Fa: list(char),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),A2: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),A2),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAcc(list(char),Eb,Fa,Da),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),A2),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_73_TryReds,axiom,
    ! [E_2: exp(list(char)),V: list(char),C1: list(char),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),tryCatch(list(char),Eb,C1,V,E_2),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),tryCatch(list(char),E_b,C1,V,E_2),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_74_exp_Osimps_I14_J,axiom,
    ! [A: $tType,Exp5: exp(A),Exp4: exp(A)] :
      ( ( throw(A,Exp4) = throw(A,Exp5) )
    <=> ( Exp4 = Exp5 ) ) ).

tff(fact_75_ext,axiom,
    ! [B1: $tType,A: $tType,G: fun(A,B1),F: fun(A,B1)] :
      ( ! [X1: A] : aa(A,B1,F,X1) = aa(A,B1,G,X1)
     => ( F = G ) ) ).

tff(fact_76_mem__def,axiom,
    ! [A: $tType,A4: fun(A,bool),X: A] :
      ( member(A,X,A4)
    <=> pp(aa(A,bool,A4,X)) ) ).

tff(fact_77_exp_Osimps_I15_J,axiom,
    ! [A: $tType,Exp23: exp(A),A3: A,List4: list(char),Exp13: exp(A),Exp22: exp(A),A2: A,List3: list(char),Exp12: exp(A)] :
      ( ( tryCatch(A,Exp12,List3,A2,Exp22) = tryCatch(A,Exp13,List4,A3,Exp23) )
    <=> ( ( Exp12 = Exp13 )
        & ( List3 = List4 )
        & ( A2 = A3 )
        & ( Exp22 = Exp23 ) ) ) ).

tff(fact_78_WTrtThrow,axiom,
    ! [Ta: ty,T_r1: ty,Eb: exp(list(char)),Ea: fun(list(char),option(ty)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))))))))] :
      ( wTrt(Pa,Hb,Ea,Eb,T_r1)
     => ( is_refT(T_r1)
       => wTrt(Pa,Hb,Ea,throw(list(char),Eb),Ta) ) ) ).

tff(fact_79_exp_Osimps_I225_J,axiom,
    ! [A: $tType,Exp: exp(A),Exp2: exp(A),A1: A,List: list(char),Exp1: exp(A)] : tryCatch(A,Exp1,List,A1,Exp2) != throw(A,Exp) ).

tff(fact_80_exp_Osimps_I224_J,axiom,
    ! [A: $tType,Exp2: exp(A),A1: A,List: list(char),Exp1: exp(A),Exp: exp(A)] : throw(A,Exp) != tryCatch(A,Exp1,List,A1,Exp2) ).

tff(fact_81_exp_Osimps_I168_J,axiom,
    ! [A: $tType,Exp2: exp(A),A1: A,List: list(char),Exp1: exp(A),List2: list(char),List1: list(char),Exp: exp(A)] : fAcc(A,Exp,List1,List2) != tryCatch(A,Exp1,List,A1,Exp2) ).

tff(fact_82_exp_Osimps_I169_J,axiom,
    ! [A: $tType,List2: list(char),List1: list(char),Exp: exp(A),Exp2: exp(A),A1: A,List: list(char),Exp1: exp(A)] : tryCatch(A,Exp1,List,A1,Exp2) != fAcc(A,Exp,List1,List2) ).

tff(fact_83_exp_Osimps_I167_J,axiom,
    ! [A: $tType,List2: list(char),List1: list(char),Exp: exp(A),Exp3: exp(A)] : throw(A,Exp3) != fAcc(A,Exp,List1,List2) ).

tff(fact_84_exp_Osimps_I166_J,axiom,
    ! [A: $tType,Exp3: exp(A),List2: list(char),List1: list(char),Exp: exp(A)] : fAcc(A,Exp,List1,List2) != throw(A,Exp3) ).

tff(fact_85_red__reds_OThrowRed,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),red(Pa))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),E_b),S1)),red(Pa)) ) ).

tff(fact_86_red__reds_OThrowThrow,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] : member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),throw(list(char),Eb)),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S)),red(Pa)) ).

tff(fact_87_red__reds_OTryRed,axiom,
    ! [E_2: exp(list(char)),V: list(char),C1: list(char),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),red(Pa))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),tryCatch(list(char),Eb,C1,V,E_2),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),tryCatch(list(char),E_b,C1,V,E_2),S1)),red(Pa)) ) ).

tff(fact_88_ThrowReds,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),E_b,S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),E_b),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_89_ThrowRedsThrow,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),A2: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),A2),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),A2),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_90_red__reds_OFAccThrow,axiom,
    ! [Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Da: list(char),Fa: list(char),Eb: exp(list(char))] : member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),fAcc(list(char),throw(list(char),Eb),Fa,Da),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S)),red(Pa)) ).

tff(fact_91_WTrt__elim__cases_I4_J,axiom,
    ! [Ta: ty,Eb: exp(list(char)),Ea: fun(list(char),option(ty)),Hb: fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char)))))))))))] :
      ( wTrt(Pa,Hb,Ea,throw(list(char),Eb),Ta)
     => ~ ! [T_r: ty] :
            ( wTrt(Pa,Hb,Ea,Eb,T_r)
           => ~ is_refT(T_r) ) ) ).

tff(fact_92_WhileRedsThrow,axiom,
    ! [C: exp(list(char)),Pa: list(product_prod(list(char),product_prod(list(char),product_prod(list(product_prod(list(char),ty)),list(product_prod(list(char),product_prod(list(ty),product_prod(ty,product_prod(list(list(char)),exp(list(char))))))))))),S1: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),Eb: exp(list(char)),S: product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),B: exp(list(char))] :
      ( member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),B,S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa)))
     => member(product_prod(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))))),product_Pair(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),while(list(char),B,C),S),product_Pair(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val))),throw(list(char),Eb),S1)),transitive_rtrancl(product_prod(exp(list(char)),product_prod(fun(nat,option(product_prod(list(char),fun(product_prod(list(char),list(char)),option(val))))),fun(list(char),option(val)))),red(Pa))) ) ).

tff(fact_93_exp_Osimps_I13_J,axiom,
    ! [A: $tType,Exp23: exp(A),Exp13: exp(A),Exp22: exp(A),Exp12: exp(A)] :
      ( ( while(A,Exp12,Exp22) = while(A,Exp13,Exp23) )
    <=> ( ( Exp12 = Exp13 )
        & ( Exp22 = Exp23 ) ) ) ).

tff(fact_94_exp_Osimps_I223_J,axiom,
    ! [A: $tType,Exp21: exp(A),Exp11: exp(A),Exp2: exp(A),A1: A,List: list(char),Exp1: exp(A)] : tryCatch(A,Exp1,List,A1,Exp2) != while(A,Exp11,Exp21) ).

tff(fact_95_exp_Osimps_I222_J,axiom,
    ! [A: $tType,Exp2: exp(A),A1: A,List: list(char),Exp1: exp(A),Exp21: exp(A),Exp11: exp(A)] : while(A,Exp11,Exp21) != tryCatch(A,Exp1,List,A1,Exp2) ).

tff(fact_96_exp_Osimps_I220_J,axiom,
    ! [A: $tType,Exp3: exp(A),Exp21: exp(A),Exp11: exp(A)] : while(A,Exp11,Exp21) != throw(A,Exp3) ).

tff(fact_97_exp_Osimps_I221_J,axiom,
    ! [A: $tType,Exp21: exp(A),Exp11: exp(A),Exp3: exp(A)] : throw(A,Exp3) != while(A,Exp11,Exp21) ).

tff(fact_98_exp_Osimps_I164_J,axiom,
    ! [A: $tType,Exp2: exp(A),Exp1: exp(A),List2: list(char),List1: list(char),Exp: exp(A)] : fAcc(A,Exp,List1,List2) != while(A,Exp1,Exp2) ).

tff(fact_99_exp_Osimps_I165_J,axiom,
    ! [A: $tType,List2: list(char),List1: list(char),Exp: exp(A),Exp2: exp(A),Exp1: exp(A)] : while(A,Exp1,Exp2) != fAcc(A,Exp,List1,List2) ).

%----Helper facts (2)
tff(help_pp_1_1_U,axiom,
    ~ pp(fFalse) ).

tff(help_pp_2_1_U,axiom,
    pp(fTrue) ).

%----Conjectures (1)
tff(conj_0,conjecture,
    ? [T: ty] :
      ( wTrt(p,h_a,e,fAcc(list(char),e_a,f,d),T)
      & widen(product_prod(list(list(char)),exp(list(char))),p,T,t) ) ).

%------------------------------------------------------------------------------
