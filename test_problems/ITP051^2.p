%------------------------------------------------------------------------------
% File     : ITP051^2 : TPTP v8.2.0. Released v7.5.0.
% Domain   : Interactive Theorem Proving
% Problem  : Sledgehammer EdmondsKarp_Termination_Abstract problem prob_318__7590952_1
% Version  : Especial.
% English  :

% Refs     : [BH+15] Blanchette et al. (2015), Mining the Archive of Formal
%          : [Des21] Desharnais (2021), Email to Geoff Sutcliffe
% Source   : [Des21]
% Names    : EdmondsKarp_Termination_Abstract/prob_318__7590952_1 [Des21]

% Status   : Theorem
% Rating   : 0.00 v8.1.0, 0.25 v7.5.0
% Syntax   : Number of formulae    :  321 ( 100 unt;  47 typ;   0 def)
%            Number of atoms       :  687 ( 144 equ;   0 cnn)
%            Maximal formula atoms :    8 (   2 avg)
%            Number of connectives : 3279 (  51   ~;   4   |;  36   &;2868   @)
%                                         (   0 <=>; 320  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   19 (   8 avg)
%            Number of types       :    4 (   3 usr)
%            Number of type conns  :  155 ( 155   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :   47 (  44 usr;   7 con; 0-5 aty)
%            Number of variables   :  661 (  33   ^; 563   !;  31   ?; 661   :)
%                                         (  34  !>;   0  ?*;   0  @-;   0  @+)
% SPC      : TH1_THM_EQU_NAR

% Comments : This file was generated by Sledgehammer 2021-02-23 16:16:42.937
%------------------------------------------------------------------------------
% Could-be-implicit typings (6)
thf(ty_t_Product__Type_Oprod,type,
    product_prod: $tType > $tType > $tType ).

thf(ty_t_List_Olist,type,
    list: $tType > $tType ).

thf(ty_t_Set_Oset,type,
    set: $tType > $tType ).

thf(ty_t_Nat_Onat,type,
    nat: $tType ).

thf(ty_tf_b,type,
    b: $tType ).

thf(ty_tf_a,type,
    a: $tType ).

% Explicit typings (41)
thf(sy_cl_HOL_Otype,type,
    type: 
      !>[A: $tType] : $o ).

thf(sy_cl_Nat_Osize,type,
    size: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Ozero,type,
    zero: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Oorder,type,
    order: 
      !>[A: $tType] : $o ).

thf(sy_cl_Finite__Set_Ofinite,type,
    finite_finite: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Owellorder,type,
    wellorder: 
      !>[A: $tType] : $o ).

thf(sy_cl_Rings_Olinordered__idom,type,
    linordered_idom: 
      !>[A: $tType] : $o ).

thf(sy_cl_Groups_Ocanonically__ordered__monoid__add,type,
    canoni770627133id_add: 
      !>[A: $tType] : $o ).

thf(sy_c_EdmondsKarp__Termination__Abstract__Mirabelle__klniualtan_Oek__analysis,type,
    edmond2129202899alysis: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > $o ) ).

thf(sy_c_EdmondsKarp__Termination__Abstract__Mirabelle__klniualtan_Oek__analysis__defs_OekMeasure,type,
    edmond115586663easure: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > nat > nat > nat ) ).

thf(sy_c_EdmondsKarp__Termination__Abstract__Mirabelle__klniualtan_Oek__analysis__defs_OspEdges,type,
    edmond1803015688pEdges: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > nat > nat > ( set @ ( product_prod @ nat @ nat ) ) ) ).

thf(sy_c_EdmondsKarp__Termination__Abstract__Mirabelle__klniualtan_Oek__analysis__defs_OuE,type,
    edmond259086305sis_uE: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > ( set @ ( product_prod @ nat @ nat ) ) ) ).

thf(sy_c_Finite__Set_Ocard,type,
    finite_card: 
      !>[B: $tType] : ( ( set @ B ) > nat ) ).

thf(sy_c_Finite__Set_Ofinite,type,
    finite_finite2: 
      !>[A: $tType] : ( ( set @ A ) > $o ) ).

thf(sy_c_Graph_OFinite__Graph,type,
    finite_Graph: 
      !>[A: $tType] : ( ( ( product_prod @ nat @ nat ) > A ) > $o ) ).

thf(sy_c_Graph_OGraph_OE,type,
    e: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( set @ ( product_prod @ nat @ nat ) ) ) ).

thf(sy_c_Graph_OGraph_OV,type,
    v: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( set @ nat ) ) ).

thf(sy_c_Graph_OGraph_Oadjacent__nodes,type,
    adjacent_nodes: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( set @ nat ) ) ).

thf(sy_c_Graph_OGraph_Oconnected,type,
    connected: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > $o ) ).

thf(sy_c_Graph_OGraph_Odist,type,
    dist: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > nat > $o ) ).

thf(sy_c_Graph_OGraph_Oincoming_H,type,
    incoming: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( set @ nat ) > ( set @ ( product_prod @ nat @ nat ) ) ) ).

thf(sy_c_Graph_OGraph_OisPath,type,
    isPath: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( list @ ( product_prod @ nat @ nat ) ) > nat > $o ) ).

thf(sy_c_Graph_OGraph_OisShortestPath,type,
    isShortestPath: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( list @ ( product_prod @ nat @ nat ) ) > nat > $o ) ).

thf(sy_c_Graph_OGraph_OisSimplePath,type,
    isSimplePath: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( list @ ( product_prod @ nat @ nat ) ) > nat > $o ) ).

thf(sy_c_Graph_OGraph_Omin__dist,type,
    min_dist: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > nat > nat ) ).

thf(sy_c_Graph_OGraph_Ooutgoing_H,type,
    outgoing: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > ( set @ nat ) > ( set @ ( product_prod @ nat @ nat ) ) ) ).

thf(sy_c_Graph_OGraph_OreachableNodes,type,
    reachableNodes: 
      !>[Capacity: $tType] : ( ( ( product_prod @ nat @ nat ) > Capacity ) > nat > ( set @ nat ) ) ).

thf(sy_c_Groups_Ozero__class_Ozero,type,
    zero_zero: 
      !>[A: $tType] : A ).

thf(sy_c_List_Olist_Oset,type,
    set2: 
      !>[A: $tType] : ( ( list @ A ) > ( set @ A ) ) ).

thf(sy_c_Nat_Osize__class_Osize,type,
    size_size: 
      !>[A: $tType] : ( A > nat ) ).

thf(sy_c_Orderings_Oord__class_Oless,type,
    ord_less: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Orderings_Oord__class_Oless__eq,type,
    ord_less_eq: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Set_OCollect,type,
    collect: 
      !>[A: $tType] : ( ( A > $o ) > ( set @ A ) ) ).

thf(sy_c_member,type,
    member: 
      !>[A: $tType] : ( A > ( set @ A ) > $o ) ).

thf(sy_v_c,type,
    c: ( product_prod @ nat @ nat ) > a ).

thf(sy_v_c_H,type,
    c2: ( product_prod @ nat @ nat ) > b ).

thf(sy_v_edges,type,
    edges: set @ ( product_prod @ nat @ nat ) ).

thf(sy_v_p,type,
    p: list @ ( product_prod @ nat @ nat ) ).

thf(sy_v_p_H____,type,
    p2: list @ ( product_prod @ nat @ nat ) ).

thf(sy_v_s,type,
    s: nat ).

thf(sy_v_t,type,
    t: nat ).

% Relevant facts (254)
thf(fact_0_ek__analysis__axioms,axiom,
    edmond2129202899alysis @ a @ c ).

% ek_analysis_axioms
thf(fact_1_LENP,axiom,
    ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p )
    = ( min_dist @ a @ c @ s @ t ) ) ).

% LENP
thf(fact_2_LENP_H,axiom,
    ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p2 )
    = ( min_dist @ b @ c2 @ s @ t ) ) ).

% LENP'
thf(fact_3_ek__analysis__defs_OekMeasure_Ocong,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ( edmond115586663easure @ A )
        = ( edmond115586663easure @ A ) ) ) ).

% ek_analysis_defs.ekMeasure.cong
thf(fact_4_g_H_Oek__analysis__axioms,axiom,
    edmond2129202899alysis @ b @ c2 ).

% g'.ek_analysis_axioms
thf(fact_5_SHORTER,axiom,
    ord_less @ nat @ ( min_dist @ b @ c2 @ s @ t ) @ ( min_dist @ a @ c @ s @ t ) ).

% SHORTER
thf(fact_6_ek__analysis__defs_OuE_Ocong,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ( edmond259086305sis_uE @ A )
        = ( edmond259086305sis_uE @ A ) ) ) ).

% ek_analysis_defs.uE.cong
thf(fact_7_ek__analysis__defs_OspEdges_Ocong,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ( edmond1803015688pEdges @ A )
        = ( edmond1803015688pEdges @ A ) ) ) ).

% ek_analysis_defs.spEdges.cong
thf(fact_8_g_H_OFinite__Graph__axioms,axiom,
    finite_Graph @ b @ c2 ).

% g'.Finite_Graph_axioms
thf(fact_9_Finite__Graph__axioms,axiom,
    finite_Graph @ a @ c ).

% Finite_Graph_axioms
thf(fact_10__092_060open_062length_Ap_A_060_Alength_Ap_H_092_060close_062,axiom,
    ord_less @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ p2 ) ).

% \<open>length p < length p'\<close>
thf(fact_11_uE__eq,axiom,
    ( ( edmond259086305sis_uE @ b @ c2 )
    = ( edmond259086305sis_uE @ a @ c ) ) ).

% uE_eq
thf(fact_12_SP,axiom,
    isShortestPath @ a @ c @ s @ p @ t ).

% SP
thf(fact_13_CONN2,axiom,
    connected @ b @ c2 @ s @ t ).

% CONN2
thf(fact_14_SV,axiom,
    member @ nat @ s @ ( v @ a @ c ) ).

% SV
thf(fact_15_P_H,axiom,
    isPath @ b @ c2 @ s @ p2 @ t ).

% P'
thf(fact_16_ek__analysis__def,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ( edmond2129202899alysis @ A )
        = ( finite_Graph @ A ) ) ) ).

% ek_analysis_def
thf(fact_17_ek__analysis_Ointro,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A] :
          ( ( finite_Graph @ A @ C )
         => ( edmond2129202899alysis @ A @ C ) ) ) ).

% ek_analysis.intro
thf(fact_18_ek__analysis_Oaxioms,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A] :
          ( ( edmond2129202899alysis @ A @ C )
         => ( finite_Graph @ A @ C ) ) ) ).

% ek_analysis.axioms
thf(fact_19__092_060open_062_092_060not_062_Ag_H_Oconnected_As_At_A_092_060Longrightarrow_062_Ag_H_OekMeasure_A_060_AekMeasure_092_060close_062,axiom,
    ( ~ ( connected @ b @ c2 @ s @ t )
   => ( ord_less @ nat @ ( edmond115586663easure @ b @ c2 @ s @ t ) @ ( edmond115586663easure @ a @ c @ s @ t ) ) ) ).

% \<open>\<not> g'.connected s t \<Longrightarrow> g'.ekMeasure < ekMeasure\<close>
thf(fact_20__092_060open_062g_H_Odist_As_A_Ig_H_Omin__dist_As_At_J_At_092_060close_062,axiom,
    dist @ b @ c2 @ s @ ( min_dist @ b @ c2 @ s @ t ) @ t ).

% \<open>g'.dist s (g'.min_dist s t) t\<close>
thf(fact_21__092_060open_062_092_060And_062thesis_O_A_I_092_060And_062p_H_O_A_092_060lbrakk_062g_H_OisPath_As_Ap_H_At_059_Alength_Ap_H_A_061_Ag_H_Omin__dist_As_At_092_060rbrakk_062_A_092_060Longrightarrow_062_Athesis_J_A_092_060Longrightarrow_062_Athesis_092_060close_062,axiom,
    ~ ! [P: list @ ( product_prod @ nat @ nat )] :
        ( ( isPath @ b @ c2 @ s @ P @ t )
       => ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P )
         != ( min_dist @ b @ c2 @ s @ t ) ) ) ).

% \<open>\<And>thesis. (\<And>p'. \<lbrakk>g'.isPath s p' t; length p' = g'.min_dist s t\<rbrakk> \<Longrightarrow> thesis) \<Longrightarrow> thesis\<close>
thf(fact_22_CONN,axiom,
    connected @ a @ c @ s @ t ).

% CONN
thf(fact_23_min__dist__less,axiom,
    ! [Src: nat,V: nat,D: nat,D2: nat] :
      ( ( connected @ a @ c @ Src @ V )
     => ( ( ( min_dist @ a @ c @ Src @ V )
          = D )
       => ( ( ord_less @ nat @ D2 @ D )
         => ? [V2: nat] :
              ( ( connected @ a @ c @ Src @ V2 )
              & ( ( min_dist @ a @ c @ Src @ V2 )
                = D2 ) ) ) ) ) ).

% min_dist_less
thf(fact_24_g_H_Omin__dist__less,axiom,
    ! [Src: nat,V: nat,D: nat,D2: nat] :
      ( ( connected @ b @ c2 @ Src @ V )
     => ( ( ( min_dist @ b @ c2 @ Src @ V )
          = D )
       => ( ( ord_less @ nat @ D2 @ D )
         => ? [V2: nat] :
              ( ( connected @ b @ c2 @ Src @ V2 )
              & ( ( min_dist @ b @ c2 @ Src @ V2 )
                = D2 ) ) ) ) ) ).

% g'.min_dist_less
thf(fact_25_length__induct,axiom,
    ! [A: $tType,P2: ( list @ A ) > $o,Xs: list @ A] :
      ( ! [Xs2: list @ A] :
          ( ! [Ys: list @ A] :
              ( ( ord_less @ nat @ ( size_size @ ( list @ A ) @ Ys ) @ ( size_size @ ( list @ A ) @ Xs2 ) )
             => ( P2 @ Ys ) )
         => ( P2 @ Xs2 ) )
     => ( P2 @ Xs ) ) ).

% length_induct
thf(fact_26_finite__spEdges,axiom,
    finite_finite2 @ ( product_prod @ nat @ nat ) @ ( edmond1803015688pEdges @ a @ c @ s @ t ) ).

% finite_spEdges
thf(fact_27_g_H_Ofinite__spEdges,axiom,
    finite_finite2 @ ( product_prod @ nat @ nat ) @ ( edmond1803015688pEdges @ b @ c2 @ s @ t ) ).

% g'.finite_spEdges
thf(fact_28_min__dist__z,axiom,
    ! [V: nat] :
      ( ( min_dist @ a @ c @ V @ V )
      = ( zero_zero @ nat ) ) ).

% min_dist_z
thf(fact_29_g_H_Omin__dist__z,axiom,
    ! [V: nat] :
      ( ( min_dist @ b @ c2 @ V @ V )
      = ( zero_zero @ nat ) ) ).

% g'.min_dist_z
thf(fact_30_g_H_Oconnected__def,axiom,
    ! [U: nat,V: nat] :
      ( ( connected @ b @ c2 @ U @ V )
      = ( ? [P3: list @ ( product_prod @ nat @ nat )] : ( isPath @ b @ c2 @ U @ P3 @ V ) ) ) ).

% g'.connected_def
thf(fact_31_connected__inV__iff,axiom,
    ! [U: nat,V: nat] :
      ( ( connected @ a @ c @ U @ V )
     => ( ( member @ nat @ V @ ( v @ a @ c ) )
        = ( member @ nat @ U @ ( v @ a @ c ) ) ) ) ).

% connected_inV_iff
thf(fact_32_g_H_Oconnected__by__dist,axiom,
    ! [V: nat,V3: nat] :
      ( ( connected @ b @ c2 @ V @ V3 )
      = ( ? [D3: nat] : ( dist @ b @ c2 @ V @ D3 @ V3 ) ) ) ).

% g'.connected_by_dist
thf(fact_33_obtain__shortest__path,axiom,
    ! [U: nat,V: nat] :
      ( ( connected @ a @ c @ U @ V )
     => ~ ! [P4: list @ ( product_prod @ nat @ nat )] :
            ~ ( isShortestPath @ a @ c @ U @ P4 @ V ) ) ).

% obtain_shortest_path
thf(fact_34_g_H_OisPath__distD,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isPath @ b @ c2 @ U @ P5 @ V )
     => ( dist @ b @ c2 @ U @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ V ) ) ).

% g'.isPath_distD
thf(fact_35_g_H_Odist__def,axiom,
    ! [V: nat,D: nat,V3: nat] :
      ( ( dist @ b @ c2 @ V @ D @ V3 )
      = ( ? [P3: list @ ( product_prod @ nat @ nat )] :
            ( ( isPath @ b @ c2 @ V @ P3 @ V3 )
            & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P3 )
              = D ) ) ) ) ).

% g'.dist_def
thf(fact_36_g_H_Omin__dist__is__dist,axiom,
    ! [V: nat,V3: nat] :
      ( ( connected @ b @ c2 @ V @ V3 )
     => ( dist @ b @ c2 @ V @ ( min_dist @ b @ c2 @ V @ V3 ) @ V3 ) ) ).

% g'.min_dist_is_dist
thf(fact_37_g_H_Oconnected__refl,axiom,
    ! [V: nat] : ( connected @ b @ c2 @ V @ V ) ).

% g'.connected_refl
thf(fact_38_connected__refl,axiom,
    ! [V: nat] : ( connected @ a @ c @ V @ V ) ).

% connected_refl
thf(fact_39_g_H_Odist__z__iff,axiom,
    ! [V: nat,V3: nat] :
      ( ( dist @ b @ c2 @ V @ ( zero_zero @ nat ) @ V3 )
      = ( V3 = V ) ) ).

% g'.dist_z_iff
thf(fact_40_g_H_Odist__z,axiom,
    ! [V: nat] : ( dist @ b @ c2 @ V @ ( zero_zero @ nat ) @ V ) ).

% g'.dist_z
thf(fact_41_g_H_Oconnected__distI,axiom,
    ! [V: nat,D: nat,V3: nat] :
      ( ( dist @ b @ c2 @ V @ D @ V3 )
     => ( connected @ b @ c2 @ V @ V3 ) ) ).

% g'.connected_distI
thf(fact_42_g_H_Ofinite__uE,axiom,
    finite_finite2 @ ( product_prod @ nat @ nat ) @ ( edmond259086305sis_uE @ b @ c2 ) ).

% g'.finite_uE
thf(fact_43_finite__uE,axiom,
    finite_finite2 @ ( product_prod @ nat @ nat ) @ ( edmond259086305sis_uE @ a @ c ) ).

% finite_uE
thf(fact_44_g_H_Omin__dist__z__iff,axiom,
    ! [V: nat,V3: nat] :
      ( ( connected @ b @ c2 @ V @ V3 )
     => ( ( ( min_dist @ b @ c2 @ V @ V3 )
          = ( zero_zero @ nat ) )
        = ( V3 = V ) ) ) ).

% g'.min_dist_z_iff
thf(fact_45_mem__Collect__eq,axiom,
    ! [A: $tType,A2: A,P2: A > $o] :
      ( ( member @ A @ A2 @ ( collect @ A @ P2 ) )
      = ( P2 @ A2 ) ) ).

% mem_Collect_eq
thf(fact_46_Collect__mem__eq,axiom,
    ! [A: $tType,A3: set @ A] :
      ( ( collect @ A
        @ ^ [X: A] : ( member @ A @ X @ A3 ) )
      = A3 ) ).

% Collect_mem_eq
thf(fact_47_Collect__cong,axiom,
    ! [A: $tType,P2: A > $o,Q: A > $o] :
      ( ! [X2: A] :
          ( ( P2 @ X2 )
          = ( Q @ X2 ) )
     => ( ( collect @ A @ P2 )
        = ( collect @ A @ Q ) ) ) ).

% Collect_cong
thf(fact_48_ext,axiom,
    ! [B: $tType,A: $tType,F: A > B,G: A > B] :
      ( ! [X2: A] :
          ( ( F @ X2 )
          = ( G @ X2 ) )
     => ( F = G ) ) ).

% ext
thf(fact_49_min__dist__z__iff,axiom,
    ! [V: nat,V3: nat] :
      ( ( connected @ a @ c @ V @ V3 )
     => ( ( ( min_dist @ a @ c @ V @ V3 )
          = ( zero_zero @ nat ) )
        = ( V3 = V ) ) ) ).

% min_dist_z_iff
thf(fact_50_ek__analysis_Ofinite__uE,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A] :
          ( ( edmond2129202899alysis @ A @ C )
         => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( edmond259086305sis_uE @ A @ C ) ) ) ) ).

% ek_analysis.finite_uE
thf(fact_51_ek__analysis_Ofinite__spEdges,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat] :
          ( ( edmond2129202899alysis @ A @ C )
         => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( edmond1803015688pEdges @ A @ C @ S @ T ) ) ) ) ).

% ek_analysis.finite_spEdges
thf(fact_52_neq__if__length__neq,axiom,
    ! [A: $tType,Xs: list @ A,Ys2: list @ A] :
      ( ( ( size_size @ ( list @ A ) @ Xs )
       != ( size_size @ ( list @ A ) @ Ys2 ) )
     => ( Xs != Ys2 ) ) ).

% neq_if_length_neq
thf(fact_53_Ex__list__of__length,axiom,
    ! [A: $tType,N: nat] :
    ? [Xs2: list @ A] :
      ( ( size_size @ ( list @ A ) @ Xs2 )
      = N ) ).

% Ex_list_of_length
thf(fact_54_bot__nat__0_Onot__eq__extremum,axiom,
    ! [A2: nat] :
      ( ( A2
       != ( zero_zero @ nat ) )
      = ( ord_less @ nat @ ( zero_zero @ nat ) @ A2 ) ) ).

% bot_nat_0.not_eq_extremum
thf(fact_55_less__nat__zero__code,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ ( zero_zero @ nat ) ) ).

% less_nat_zero_code
thf(fact_56_neq0__conv,axiom,
    ! [N: nat] :
      ( ( N
       != ( zero_zero @ nat ) )
      = ( ord_less @ nat @ ( zero_zero @ nat ) @ N ) ) ).

% neq0_conv
thf(fact_57_not__gr__zero,axiom,
    ! [A: $tType] :
      ( ( canoni770627133id_add @ A )
     => ! [N: A] :
          ( ( ~ ( ord_less @ A @ ( zero_zero @ A ) @ N ) )
          = ( N
            = ( zero_zero @ A ) ) ) ) ).

% not_gr_zero
thf(fact_58_Graph_OisShortestPath__min__dist__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isShortestPath @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,U2: nat,P3: list @ ( product_prod @ nat @ nat ),V4: nat] :
              ( ( isPath @ Capacity @ C2 @ U2 @ P3 @ V4 )
              & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P3 )
                = ( min_dist @ Capacity @ C2 @ U2 @ V4 ) ) ) ) ) ) ).

% Graph.isShortestPath_min_dist_def
thf(fact_59_g_H_OisShortestPath__min__dist__def,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ b @ c2 @ U @ P5 @ V )
      = ( ( isPath @ b @ c2 @ U @ P5 @ V )
        & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 )
          = ( min_dist @ b @ c2 @ U @ V ) ) ) ) ).

% g'.isShortestPath_min_dist_def
thf(fact_60_g_H_Omin__distI2,axiom,
    ! [V: nat,V3: nat,Q: nat > $o] :
      ( ( connected @ b @ c2 @ V @ V3 )
     => ( ! [D4: nat] :
            ( ( dist @ b @ c2 @ V @ D4 @ V3 )
           => ( ! [D5: nat] :
                  ( ( dist @ b @ c2 @ V @ D5 @ V3 )
                 => ( ord_less_eq @ nat @ D4 @ D5 ) )
             => ( Q @ D4 ) ) )
       => ( Q @ ( min_dist @ b @ c2 @ V @ V3 ) ) ) ) ).

% g'.min_distI2
thf(fact_61_isShortestPath__length__less__V,axiom,
    ! [S: nat,P5: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( member @ nat @ S @ ( v @ a @ c ) )
     => ( ( isShortestPath @ a @ c @ S @ P5 @ T )
       => ( ord_less @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ ( finite_card @ nat @ ( v @ a @ c ) ) ) ) ) ).

% isShortestPath_length_less_V
thf(fact_62_min__dist__less__V,axiom,
    ! [S: nat,T: nat] :
      ( ( member @ nat @ S @ ( v @ a @ c ) )
     => ( ( connected @ a @ c @ S @ T )
       => ( ord_less @ nat @ ( min_dist @ a @ c @ S @ T ) @ ( finite_card @ nat @ ( v @ a @ c ) ) ) ) ) ).

% min_dist_less_V
thf(fact_63_connected__def,axiom,
    ! [U: nat,V: nat] :
      ( ( connected @ a @ c @ U @ V )
      = ( ? [P3: list @ ( product_prod @ nat @ nat )] : ( isPath @ a @ c @ U @ P3 @ V ) ) ) ).

% connected_def
thf(fact_64_shortestPath__is__path,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ a @ c @ U @ P5 @ V )
     => ( isPath @ a @ c @ U @ P5 @ V ) ) ).

% shortestPath_is_path
thf(fact_65_g_H_OshortestPath__is__path,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ b @ c2 @ U @ P5 @ V )
     => ( isPath @ b @ c2 @ U @ P5 @ V ) ) ).

% g'.shortestPath_is_path
thf(fact_66_g_H_Oobtain__shortest__path,axiom,
    ! [U: nat,V: nat] :
      ( ( connected @ b @ c2 @ U @ V )
     => ~ ! [P4: list @ ( product_prod @ nat @ nat )] :
            ~ ( isShortestPath @ b @ c2 @ U @ P4 @ V ) ) ).

% g'.obtain_shortest_path
thf(fact_67_g_H_Omin__dist__le,axiom,
    ! [Src: nat,V: nat,D2: nat] :
      ( ( connected @ b @ c2 @ Src @ V )
     => ( ( ord_less_eq @ nat @ D2 @ ( min_dist @ b @ c2 @ Src @ V ) )
       => ? [V2: nat] :
            ( ( connected @ b @ c2 @ Src @ V2 )
            & ( ( min_dist @ b @ c2 @ Src @ V2 )
              = D2 ) ) ) ) ).

% g'.min_dist_le
thf(fact_68_g_H_Omin__distI__eq,axiom,
    ! [V: nat,D: nat,V3: nat] :
      ( ( dist @ b @ c2 @ V @ D @ V3 )
     => ( ! [D6: nat] :
            ( ( dist @ b @ c2 @ V @ D6 @ V3 )
           => ( ord_less_eq @ nat @ D @ D6 ) )
       => ( ( min_dist @ b @ c2 @ V @ V3 )
          = D ) ) ) ).

% g'.min_distI_eq
thf(fact_69_g_H_Omin__dist__minD,axiom,
    ! [V: nat,D: nat,V3: nat] :
      ( ( dist @ b @ c2 @ V @ D @ V3 )
     => ( ord_less_eq @ nat @ ( min_dist @ b @ c2 @ V @ V3 ) @ D ) ) ).

% g'.min_dist_minD
thf(fact_70_min__dist__le,axiom,
    ! [Src: nat,V: nat,D2: nat] :
      ( ( connected @ a @ c @ Src @ V )
     => ( ( ord_less_eq @ nat @ D2 @ ( min_dist @ a @ c @ Src @ V ) )
       => ? [V2: nat] :
            ( ( connected @ a @ c @ Src @ V2 )
            & ( ( min_dist @ a @ c @ Src @ V2 )
              = D2 ) ) ) ) ).

% min_dist_le
thf(fact_71_isShortestPath__def,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ a @ c @ U @ P5 @ V )
      = ( ( isPath @ a @ c @ U @ P5 @ V )
        & ! [P6: list @ ( product_prod @ nat @ nat )] :
            ( ( isPath @ a @ c @ U @ P6 @ V )
           => ( ord_less_eq @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P6 ) ) ) ) ) ).

% isShortestPath_def
thf(fact_72_isShortestPath__min__dist__def,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ a @ c @ U @ P5 @ V )
      = ( ( isPath @ a @ c @ U @ P5 @ V )
        & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 )
          = ( min_dist @ a @ c @ U @ V ) ) ) ) ).

% isShortestPath_min_dist_def
thf(fact_73_g_H_OisShortestPath__def,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ b @ c2 @ U @ P5 @ V )
      = ( ( isPath @ b @ c2 @ U @ P5 @ V )
        & ! [P6: list @ ( product_prod @ nat @ nat )] :
            ( ( isPath @ b @ c2 @ U @ P6 @ V )
           => ( ord_less_eq @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P6 ) ) ) ) ) ).

% g'.isShortestPath_def
thf(fact_74_le__zero__eq,axiom,
    ! [A: $tType] :
      ( ( canoni770627133id_add @ A )
     => ! [N: A] :
          ( ( ord_less_eq @ A @ N @ ( zero_zero @ A ) )
          = ( N
            = ( zero_zero @ A ) ) ) ) ).

% le_zero_eq
thf(fact_75_le0,axiom,
    ! [N: nat] : ( ord_less_eq @ nat @ ( zero_zero @ nat ) @ N ) ).

% le0
thf(fact_76_bot__nat__0_Oextremum,axiom,
    ! [A2: nat] : ( ord_less_eq @ nat @ ( zero_zero @ nat ) @ A2 ) ).

% bot_nat_0.extremum
thf(fact_77_zero__le,axiom,
    ! [A: $tType] :
      ( ( canoni770627133id_add @ A )
     => ! [X3: A] : ( ord_less_eq @ A @ ( zero_zero @ A ) @ X3 ) ) ).

% zero_le
thf(fact_78_le__refl,axiom,
    ! [N: nat] : ( ord_less_eq @ nat @ N @ N ) ).

% le_refl
thf(fact_79_le__trans,axiom,
    ! [I: nat,J: nat,K: nat] :
      ( ( ord_less_eq @ nat @ I @ J )
     => ( ( ord_less_eq @ nat @ J @ K )
       => ( ord_less_eq @ nat @ I @ K ) ) ) ).

% le_trans
thf(fact_80_eq__imp__le,axiom,
    ! [M: nat,N: nat] :
      ( ( M = N )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% eq_imp_le
thf(fact_81_le__antisym,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ( ord_less_eq @ nat @ N @ M )
       => ( M = N ) ) ) ).

% le_antisym
thf(fact_82_nat__le__linear,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
      | ( ord_less_eq @ nat @ N @ M ) ) ).

% nat_le_linear
thf(fact_83_Nat_Oex__has__greatest__nat,axiom,
    ! [P2: nat > $o,K: nat,B2: nat] :
      ( ( P2 @ K )
     => ( ! [Y: nat] :
            ( ( P2 @ Y )
           => ( ord_less_eq @ nat @ Y @ B2 ) )
       => ? [X2: nat] :
            ( ( P2 @ X2 )
            & ! [Y2: nat] :
                ( ( P2 @ Y2 )
               => ( ord_less_eq @ nat @ Y2 @ X2 ) ) ) ) ) ).

% Nat.ex_has_greatest_nat
thf(fact_84_less__eq__nat_Osimps_I1_J,axiom,
    ! [N: nat] : ( ord_less_eq @ nat @ ( zero_zero @ nat ) @ N ) ).

% less_eq_nat.simps(1)
thf(fact_85_le__0__eq,axiom,
    ! [N: nat] :
      ( ( ord_less_eq @ nat @ N @ ( zero_zero @ nat ) )
      = ( N
        = ( zero_zero @ nat ) ) ) ).

% le_0_eq
thf(fact_86_bot__nat__0_Oextremum__unique,axiom,
    ! [A2: nat] :
      ( ( ord_less_eq @ nat @ A2 @ ( zero_zero @ nat ) )
      = ( A2
        = ( zero_zero @ nat ) ) ) ).

% bot_nat_0.extremum_unique
thf(fact_87_bot__nat__0_Oextremum__uniqueI,axiom,
    ! [A2: nat] :
      ( ( ord_less_eq @ nat @ A2 @ ( zero_zero @ nat ) )
     => ( A2
        = ( zero_zero @ nat ) ) ) ).

% bot_nat_0.extremum_uniqueI
thf(fact_88_nat__less__le,axiom,
    ( ( ord_less @ nat )
    = ( ^ [M2: nat,N2: nat] :
          ( ( ord_less_eq @ nat @ M2 @ N2 )
          & ( M2 != N2 ) ) ) ) ).

% nat_less_le
thf(fact_89_less__imp__le__nat,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% less_imp_le_nat
thf(fact_90_le__eq__less__or__eq,axiom,
    ( ( ord_less_eq @ nat )
    = ( ^ [M2: nat,N2: nat] :
          ( ( ord_less @ nat @ M2 @ N2 )
          | ( M2 = N2 ) ) ) ) ).

% le_eq_less_or_eq
thf(fact_91_less__or__eq__imp__le,axiom,
    ! [M: nat,N: nat] :
      ( ( ( ord_less @ nat @ M @ N )
        | ( M = N ) )
     => ( ord_less_eq @ nat @ M @ N ) ) ).

% less_or_eq_imp_le
thf(fact_92_le__neq__implies__less,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less_eq @ nat @ M @ N )
     => ( ( M != N )
       => ( ord_less @ nat @ M @ N ) ) ) ).

% le_neq_implies_less
thf(fact_93_less__mono__imp__le__mono,axiom,
    ! [F: nat > nat,I: nat,J: nat] :
      ( ! [I2: nat,J2: nat] :
          ( ( ord_less @ nat @ I2 @ J2 )
         => ( ord_less @ nat @ ( F @ I2 ) @ ( F @ J2 ) ) )
     => ( ( ord_less_eq @ nat @ I @ J )
       => ( ord_less_eq @ nat @ ( F @ I ) @ ( F @ J ) ) ) ) ).

% less_mono_imp_le_mono
thf(fact_94_ex__least__nat__le,axiom,
    ! [P2: nat > $o,N: nat] :
      ( ( P2 @ N )
     => ( ~ ( P2 @ ( zero_zero @ nat ) )
       => ? [K2: nat] :
            ( ( ord_less_eq @ nat @ K2 @ N )
            & ! [I3: nat] :
                ( ( ord_less @ nat @ I3 @ K2 )
               => ~ ( P2 @ I3 ) )
            & ( P2 @ K2 ) ) ) ) ).

% ex_least_nat_le
thf(fact_95_Graph_Omin__dist__le,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,Src: nat,V: nat,D2: nat] :
          ( ( connected @ Capacity @ C @ Src @ V )
         => ( ( ord_less_eq @ nat @ D2 @ ( min_dist @ Capacity @ C @ Src @ V ) )
           => ? [V2: nat] :
                ( ( connected @ Capacity @ C @ Src @ V2 )
                & ( ( min_dist @ Capacity @ C @ Src @ V2 )
                  = D2 ) ) ) ) ) ).

% Graph.min_dist_le
thf(fact_96_Graph_Omin__dist__minD,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,D: nat,V3: nat] :
          ( ( dist @ Capacity @ C @ V @ D @ V3 )
         => ( ord_less_eq @ nat @ ( min_dist @ Capacity @ C @ V @ V3 ) @ D ) ) ) ).

% Graph.min_dist_minD
thf(fact_97_Graph_Omin__distI__eq,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,D: nat,V3: nat] :
          ( ( dist @ Capacity @ C @ V @ D @ V3 )
         => ( ! [D6: nat] :
                ( ( dist @ Capacity @ C @ V @ D6 @ V3 )
               => ( ord_less_eq @ nat @ D @ D6 ) )
           => ( ( min_dist @ Capacity @ C @ V @ V3 )
              = D ) ) ) ) ).

% Graph.min_distI_eq
thf(fact_98_Graph_Omin__distI2,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,V3: nat,Q: nat > $o] :
          ( ( connected @ Capacity @ C @ V @ V3 )
         => ( ! [D4: nat] :
                ( ( dist @ Capacity @ C @ V @ D4 @ V3 )
               => ( ! [D5: nat] :
                      ( ( dist @ Capacity @ C @ V @ D5 @ V3 )
                     => ( ord_less_eq @ nat @ D4 @ D5 ) )
                 => ( Q @ D4 ) ) )
           => ( Q @ ( min_dist @ Capacity @ C @ V @ V3 ) ) ) ) ) ).

% Graph.min_distI2
thf(fact_99_Graph_OisShortestPath__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isShortestPath @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,U2: nat,P3: list @ ( product_prod @ nat @ nat ),V4: nat] :
              ( ( isPath @ Capacity @ C2 @ U2 @ P3 @ V4 )
              & ! [P6: list @ ( product_prod @ nat @ nat )] :
                  ( ( isPath @ Capacity @ C2 @ U2 @ P6 @ V4 )
                 => ( ord_less_eq @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P3 ) @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P6 ) ) ) ) ) ) ) ).

% Graph.isShortestPath_def
thf(fact_100_zero__reorient,axiom,
    ! [A: $tType] :
      ( ( zero @ A )
     => ! [X3: A] :
          ( ( ( zero_zero @ A )
            = X3 )
          = ( X3
            = ( zero_zero @ A ) ) ) ) ).

% zero_reorient
thf(fact_101_measure__induct,axiom,
    ! [B: $tType,A: $tType] :
      ( ( wellorder @ B )
     => ! [F: A > B,P2: A > $o,A2: A] :
          ( ! [X2: A] :
              ( ! [Y2: A] :
                  ( ( ord_less @ B @ ( F @ Y2 ) @ ( F @ X2 ) )
                 => ( P2 @ Y2 ) )
             => ( P2 @ X2 ) )
         => ( P2 @ A2 ) ) ) ).

% measure_induct
thf(fact_102_measure__induct__rule,axiom,
    ! [B: $tType,A: $tType] :
      ( ( wellorder @ B )
     => ! [F: A > B,P2: A > $o,A2: A] :
          ( ! [X2: A] :
              ( ! [Y2: A] :
                  ( ( ord_less @ B @ ( F @ Y2 ) @ ( F @ X2 ) )
                 => ( P2 @ Y2 ) )
             => ( P2 @ X2 ) )
         => ( P2 @ A2 ) ) ) ).

% measure_induct_rule
thf(fact_103_nat__neq__iff,axiom,
    ! [M: nat,N: nat] :
      ( ( M != N )
      = ( ( ord_less @ nat @ M @ N )
        | ( ord_less @ nat @ N @ M ) ) ) ).

% nat_neq_iff
thf(fact_104_less__not__refl,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ N ) ).

% less_not_refl
thf(fact_105_less__not__refl2,axiom,
    ! [N: nat,M: nat] :
      ( ( ord_less @ nat @ N @ M )
     => ( M != N ) ) ).

% less_not_refl2
thf(fact_106_less__not__refl3,axiom,
    ! [S: nat,T: nat] :
      ( ( ord_less @ nat @ S @ T )
     => ( S != T ) ) ).

% less_not_refl3
thf(fact_107_less__irrefl__nat,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ N ) ).

% less_irrefl_nat
thf(fact_108_nat__less__induct,axiom,
    ! [P2: nat > $o,N: nat] :
      ( ! [N3: nat] :
          ( ! [M3: nat] :
              ( ( ord_less @ nat @ M3 @ N3 )
             => ( P2 @ M3 ) )
         => ( P2 @ N3 ) )
     => ( P2 @ N ) ) ).

% nat_less_induct
thf(fact_109_infinite__descent,axiom,
    ! [P2: nat > $o,N: nat] :
      ( ! [N3: nat] :
          ( ~ ( P2 @ N3 )
         => ? [M3: nat] :
              ( ( ord_less @ nat @ M3 @ N3 )
              & ~ ( P2 @ M3 ) ) )
     => ( P2 @ N ) ) ).

% infinite_descent
thf(fact_110_linorder__neqE__nat,axiom,
    ! [X3: nat,Y3: nat] :
      ( ( X3 != Y3 )
     => ( ~ ( ord_less @ nat @ X3 @ Y3 )
       => ( ord_less @ nat @ Y3 @ X3 ) ) ) ).

% linorder_neqE_nat
thf(fact_111_infinite__descent__measure,axiom,
    ! [A: $tType,P2: A > $o,V5: A > nat,X3: A] :
      ( ! [X2: A] :
          ( ~ ( P2 @ X2 )
         => ? [Y2: A] :
              ( ( ord_less @ nat @ ( V5 @ Y2 ) @ ( V5 @ X2 ) )
              & ~ ( P2 @ Y2 ) ) )
     => ( P2 @ X3 ) ) ).

% infinite_descent_measure
thf(fact_112_size__neq__size__imp__neq,axiom,
    ! [A: $tType] :
      ( ( size @ A )
     => ! [X3: A,Y3: A] :
          ( ( ( size_size @ A @ X3 )
           != ( size_size @ A @ Y3 ) )
         => ( X3 != Y3 ) ) ) ).

% size_neq_size_imp_neq
thf(fact_113_Graph_OisPath_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isPath @ Capacity )
        = ( isPath @ Capacity ) ) ) ).

% Graph.isPath.cong
thf(fact_114_Graph_OV_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( v @ Capacity )
        = ( v @ Capacity ) ) ) ).

% Graph.V.cong
thf(fact_115_Graph_Omin__dist_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( min_dist @ Capacity )
        = ( min_dist @ Capacity ) ) ) ).

% Graph.min_dist.cong
thf(fact_116_Graph_Oconnected_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( connected @ Capacity )
        = ( connected @ Capacity ) ) ) ).

% Graph.connected.cong
thf(fact_117_Graph_Oconnected__refl,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat] : ( connected @ Capacity @ C @ V @ V ) ) ).

% Graph.connected_refl
thf(fact_118_Graph_Odist_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( dist @ Capacity )
        = ( dist @ Capacity ) ) ) ).

% Graph.dist.cong
thf(fact_119_Graph_OisShortestPath_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isShortestPath @ Capacity )
        = ( isShortestPath @ Capacity ) ) ) ).

% Graph.isShortestPath.cong
thf(fact_120_Finite__Graph_Omin__dist__less__V,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat] :
          ( ( finite_Graph @ A @ C )
         => ( ( member @ nat @ S @ ( v @ A @ C ) )
           => ( ( connected @ A @ C @ S @ T )
             => ( ord_less @ nat @ ( min_dist @ A @ C @ S @ T ) @ ( finite_card @ nat @ ( v @ A @ C ) ) ) ) ) ) ) ).

% Finite_Graph.min_dist_less_V
thf(fact_121_Finite__Graph_OisShortestPath__length__less__V,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,P5: list @ ( product_prod @ nat @ nat ),T: nat] :
          ( ( finite_Graph @ A @ C )
         => ( ( member @ nat @ S @ ( v @ A @ C ) )
           => ( ( isShortestPath @ A @ C @ S @ P5 @ T )
             => ( ord_less @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ ( finite_card @ nat @ ( v @ A @ C ) ) ) ) ) ) ) ).

% Finite_Graph.isShortestPath_length_less_V
thf(fact_122_gr__zeroI,axiom,
    ! [A: $tType] :
      ( ( canoni770627133id_add @ A )
     => ! [N: A] :
          ( ( N
           != ( zero_zero @ A ) )
         => ( ord_less @ A @ ( zero_zero @ A ) @ N ) ) ) ).

% gr_zeroI
thf(fact_123_not__less__zero,axiom,
    ! [A: $tType] :
      ( ( canoni770627133id_add @ A )
     => ! [N: A] :
          ~ ( ord_less @ A @ N @ ( zero_zero @ A ) ) ) ).

% not_less_zero
thf(fact_124_gr__implies__not__zero,axiom,
    ! [A: $tType] :
      ( ( canoni770627133id_add @ A )
     => ! [M: A,N: A] :
          ( ( ord_less @ A @ M @ N )
         => ( N
           != ( zero_zero @ A ) ) ) ) ).

% gr_implies_not_zero
thf(fact_125_zero__less__iff__neq__zero,axiom,
    ! [A: $tType] :
      ( ( canoni770627133id_add @ A )
     => ! [N: A] :
          ( ( ord_less @ A @ ( zero_zero @ A ) @ N )
          = ( N
           != ( zero_zero @ A ) ) ) ) ).

% zero_less_iff_neq_zero
thf(fact_126_gr0I,axiom,
    ! [N: nat] :
      ( ( N
       != ( zero_zero @ nat ) )
     => ( ord_less @ nat @ ( zero_zero @ nat ) @ N ) ) ).

% gr0I
thf(fact_127_not__gr0,axiom,
    ! [N: nat] :
      ( ( ~ ( ord_less @ nat @ ( zero_zero @ nat ) @ N ) )
      = ( N
        = ( zero_zero @ nat ) ) ) ).

% not_gr0
thf(fact_128_not__less0,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ ( zero_zero @ nat ) ) ).

% not_less0
thf(fact_129_less__zeroE,axiom,
    ! [N: nat] :
      ~ ( ord_less @ nat @ N @ ( zero_zero @ nat ) ) ).

% less_zeroE
thf(fact_130_gr__implies__not0,axiom,
    ! [M: nat,N: nat] :
      ( ( ord_less @ nat @ M @ N )
     => ( N
       != ( zero_zero @ nat ) ) ) ).

% gr_implies_not0
thf(fact_131_infinite__descent0,axiom,
    ! [P2: nat > $o,N: nat] :
      ( ( P2 @ ( zero_zero @ nat ) )
     => ( ! [N3: nat] :
            ( ( ord_less @ nat @ ( zero_zero @ nat ) @ N3 )
           => ( ~ ( P2 @ N3 )
             => ? [M3: nat] :
                  ( ( ord_less @ nat @ M3 @ N3 )
                  & ~ ( P2 @ M3 ) ) ) )
       => ( P2 @ N ) ) ) ).

% infinite_descent0
thf(fact_132_bot__nat__0_Oextremum__strict,axiom,
    ! [A2: nat] :
      ~ ( ord_less @ nat @ A2 @ ( zero_zero @ nat ) ) ).

% bot_nat_0.extremum_strict
thf(fact_133_infinite__descent0__measure,axiom,
    ! [A: $tType,V5: A > nat,P2: A > $o,X3: A] :
      ( ! [X2: A] :
          ( ( ( V5 @ X2 )
            = ( zero_zero @ nat ) )
         => ( P2 @ X2 ) )
     => ( ! [X2: A] :
            ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( V5 @ X2 ) )
           => ( ~ ( P2 @ X2 )
             => ? [Y2: A] :
                  ( ( ord_less @ nat @ ( V5 @ Y2 ) @ ( V5 @ X2 ) )
                  & ~ ( P2 @ Y2 ) ) ) )
       => ( P2 @ X3 ) ) ) ).

% infinite_descent0_measure
thf(fact_134_Graph_Omin__dist__z,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat] :
          ( ( min_dist @ Capacity @ C @ V @ V )
          = ( zero_zero @ nat ) ) ) ).

% Graph.min_dist_z
thf(fact_135_Graph_Odist__z,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat] : ( dist @ Capacity @ C @ V @ ( zero_zero @ nat ) @ V ) ) ).

% Graph.dist_z
thf(fact_136_Graph_Odist__z__iff,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,V3: nat] :
          ( ( dist @ Capacity @ C @ V @ ( zero_zero @ nat ) @ V3 )
          = ( V3 = V ) ) ) ).

% Graph.dist_z_iff
thf(fact_137_Graph_Oconnected__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( connected @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,U2: nat,V4: nat] :
            ? [P3: list @ ( product_prod @ nat @ nat )] : ( isPath @ Capacity @ C2 @ U2 @ P3 @ V4 ) ) ) ) ).

% Graph.connected_def
thf(fact_138_Graph_Oconnected__inV__iff,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,V: nat] :
          ( ( connected @ Capacity @ C @ U @ V )
         => ( ( member @ nat @ V @ ( v @ Capacity @ C ) )
            = ( member @ nat @ U @ ( v @ Capacity @ C ) ) ) ) ) ).

% Graph.connected_inV_iff
thf(fact_139_Graph_OshortestPath__is__path,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
          ( ( isShortestPath @ Capacity @ C @ U @ P5 @ V )
         => ( isPath @ Capacity @ C @ U @ P5 @ V ) ) ) ).

% Graph.shortestPath_is_path
thf(fact_140_Graph_Oconnected__distI,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,D: nat,V3: nat] :
          ( ( dist @ Capacity @ C @ V @ D @ V3 )
         => ( connected @ Capacity @ C @ V @ V3 ) ) ) ).

% Graph.connected_distI
thf(fact_141_Graph_Oconnected__by__dist,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( connected @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,V4: nat,V6: nat] :
            ? [D3: nat] : ( dist @ Capacity @ C2 @ V4 @ D3 @ V6 ) ) ) ) ).

% Graph.connected_by_dist
thf(fact_142_Graph_Oobtain__shortest__path,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,V: nat] :
          ( ( connected @ Capacity @ C @ U @ V )
         => ~ ! [P4: list @ ( product_prod @ nat @ nat )] :
                ~ ( isShortestPath @ Capacity @ C @ U @ P4 @ V ) ) ) ).

% Graph.obtain_shortest_path
thf(fact_143_Graph_Omin__dist__z__iff,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,V3: nat] :
          ( ( connected @ Capacity @ C @ V @ V3 )
         => ( ( ( min_dist @ Capacity @ C @ V @ V3 )
              = ( zero_zero @ nat ) )
            = ( V3 = V ) ) ) ) ).

% Graph.min_dist_z_iff
thf(fact_144_Graph_Omin__dist__less,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,Src: nat,V: nat,D: nat,D2: nat] :
          ( ( connected @ Capacity @ C @ Src @ V )
         => ( ( ( min_dist @ Capacity @ C @ Src @ V )
              = D )
           => ( ( ord_less @ nat @ D2 @ D )
             => ? [V2: nat] :
                  ( ( connected @ Capacity @ C @ Src @ V2 )
                  & ( ( min_dist @ Capacity @ C @ Src @ V2 )
                    = D2 ) ) ) ) ) ) ).

% Graph.min_dist_less
thf(fact_145_Graph_Omin__dist__is__dist,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,V: nat,V3: nat] :
          ( ( connected @ Capacity @ C @ V @ V3 )
         => ( dist @ Capacity @ C @ V @ ( min_dist @ Capacity @ C @ V @ V3 ) @ V3 ) ) ) ).

% Graph.min_dist_is_dist
thf(fact_146_Graph_OisPath__distD,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
          ( ( isPath @ Capacity @ C @ U @ P5 @ V )
         => ( dist @ Capacity @ C @ U @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ V ) ) ) ).

% Graph.isPath_distD
thf(fact_147_Graph_Odist__def,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( dist @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,V4: nat,D3: nat,V6: nat] :
            ? [P3: list @ ( product_prod @ nat @ nat )] :
              ( ( isPath @ Capacity @ C2 @ V4 @ P3 @ V6 )
              & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P3 )
                = D3 ) ) ) ) ) ).

% Graph.dist_def
thf(fact_148_card_Oinfinite,axiom,
    ! [A: $tType,A3: set @ A] :
      ( ~ ( finite_finite2 @ A @ A3 )
     => ( ( finite_card @ A @ A3 )
        = ( zero_zero @ nat ) ) ) ).

% card.infinite
thf(fact_149_card__spEdges__le,axiom,
    ord_less_eq @ nat @ ( finite_card @ ( product_prod @ nat @ nat ) @ ( edmond1803015688pEdges @ a @ c @ s @ t ) ) @ ( finite_card @ ( product_prod @ nat @ nat ) @ ( edmond259086305sis_uE @ a @ c ) ) ).

% card_spEdges_le
thf(fact_150_g_H_Ocard__spEdges__le,axiom,
    ord_less_eq @ nat @ ( finite_card @ ( product_prod @ nat @ nat ) @ ( edmond1803015688pEdges @ b @ c2 @ s @ t ) ) @ ( finite_card @ ( product_prod @ nat @ nat ) @ ( edmond259086305sis_uE @ b @ c2 ) ) ).

% g'.card_spEdges_le
thf(fact_151_simplePath__length__less__V,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( member @ nat @ U @ ( v @ a @ c ) )
     => ( ( isSimplePath @ a @ c @ U @ P5 @ V )
       => ( ord_less @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ ( finite_card @ nat @ ( v @ a @ c ) ) ) ) ) ).

% simplePath_length_less_V
thf(fact_152_card__ge__0__finite,axiom,
    ! [A: $tType,A3: set @ A] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( finite_card @ A @ A3 ) )
     => ( finite_finite2 @ A @ A3 ) ) ).

% card_ge_0_finite
thf(fact_153_min__distI2,axiom,
    ! [V: nat,V3: nat,Q: nat > $o] :
      ( ( connected @ a @ c @ V @ V3 )
     => ( ! [D4: nat] :
            ( ( dist @ a @ c @ V @ D4 @ V3 )
           => ( ! [D5: nat] :
                  ( ( dist @ a @ c @ V @ D5 @ V3 )
                 => ( ord_less_eq @ nat @ D4 @ D5 ) )
             => ( Q @ D4 ) ) )
       => ( Q @ ( min_dist @ a @ c @ V @ V3 ) ) ) ) ).

% min_distI2
thf(fact_154_g_H_OisShortestPath__alt,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ b @ c2 @ U @ P5 @ V )
      = ( ( isSimplePath @ b @ c2 @ U @ P5 @ V )
        & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 )
          = ( min_dist @ b @ c2 @ U @ V ) ) ) ) ).

% g'.isShortestPath_alt
thf(fact_155_g_H_Oconnected__inV__iff,axiom,
    ! [U: nat,V: nat] :
      ( ( connected @ b @ c2 @ U @ V )
     => ( ( member @ nat @ V @ ( v @ b @ c2 ) )
        = ( member @ nat @ U @ ( v @ b @ c2 ) ) ) ) ).

% g'.connected_inV_iff
thf(fact_156_g_H_OisSPath__pathLE,axiom,
    ! [S: nat,P5: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( isPath @ b @ c2 @ S @ P5 @ T )
     => ? [P: list @ ( product_prod @ nat @ nat )] : ( isSimplePath @ b @ c2 @ S @ P @ T ) ) ).

% g'.isSPath_pathLE
thf(fact_157_isSPath__pathLE,axiom,
    ! [S: nat,P5: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( isPath @ a @ c @ S @ P5 @ T )
     => ? [P: list @ ( product_prod @ nat @ nat )] : ( isSimplePath @ a @ c @ S @ P @ T ) ) ).

% isSPath_pathLE
thf(fact_158_connected__by__dist,axiom,
    ! [V: nat,V3: nat] :
      ( ( connected @ a @ c @ V @ V3 )
      = ( ? [D3: nat] : ( dist @ a @ c @ V @ D3 @ V3 ) ) ) ).

% connected_by_dist
thf(fact_159_shortestPath__is__simple,axiom,
    ! [S: nat,P5: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( isShortestPath @ a @ c @ S @ P5 @ T )
     => ( isSimplePath @ a @ c @ S @ P5 @ T ) ) ).

% shortestPath_is_simple
thf(fact_160_g_H_OshortestPath__is__simple,axiom,
    ! [S: nat,P5: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( isShortestPath @ b @ c2 @ S @ P5 @ T )
     => ( isSimplePath @ b @ c2 @ S @ P5 @ T ) ) ).

% g'.shortestPath_is_simple
thf(fact_161_finite__code,axiom,
    ! [A: $tType] :
      ( ( finite_finite @ A )
     => ( ( finite_finite2 @ A )
        = ( ^ [A4: set @ A] : $true ) ) ) ).

% finite_code
thf(fact_162_min__dist__minD,axiom,
    ! [V: nat,D: nat,V3: nat] :
      ( ( dist @ a @ c @ V @ D @ V3 )
     => ( ord_less_eq @ nat @ ( min_dist @ a @ c @ V @ V3 ) @ D ) ) ).

% min_dist_minD
thf(fact_163_min__distI__eq,axiom,
    ! [V: nat,D: nat,V3: nat] :
      ( ( dist @ a @ c @ V @ D @ V3 )
     => ( ! [D6: nat] :
            ( ( dist @ a @ c @ V @ D6 @ V3 )
           => ( ord_less_eq @ nat @ D @ D6 ) )
       => ( ( min_dist @ a @ c @ V @ V3 )
          = D ) ) ) ).

% min_distI_eq
thf(fact_164_isPath__distD,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isPath @ a @ c @ U @ P5 @ V )
     => ( dist @ a @ c @ U @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ V ) ) ).

% isPath_distD
thf(fact_165_dist__def,axiom,
    ! [V: nat,D: nat,V3: nat] :
      ( ( dist @ a @ c @ V @ D @ V3 )
      = ( ? [P3: list @ ( product_prod @ nat @ nat )] :
            ( ( isPath @ a @ c @ V @ P3 @ V3 )
            & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P3 )
              = D ) ) ) ) ).

% dist_def
thf(fact_166_min__dist__is__dist,axiom,
    ! [V: nat,V3: nat] :
      ( ( connected @ a @ c @ V @ V3 )
     => ( dist @ a @ c @ V @ ( min_dist @ a @ c @ V @ V3 ) @ V3 ) ) ).

% min_dist_is_dist
thf(fact_167_g_H_OsimplePath__length__less__V,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( member @ nat @ U @ ( v @ b @ c2 ) )
     => ( ( isSimplePath @ b @ c2 @ U @ P5 @ V )
       => ( ord_less @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ ( finite_card @ nat @ ( v @ b @ c2 ) ) ) ) ) ).

% g'.simplePath_length_less_V
thf(fact_168_g_H_Omin__dist__less__V,axiom,
    ! [S: nat,T: nat] :
      ( ( member @ nat @ S @ ( v @ b @ c2 ) )
     => ( ( connected @ b @ c2 @ S @ T )
       => ( ord_less @ nat @ ( min_dist @ b @ c2 @ S @ T ) @ ( finite_card @ nat @ ( v @ b @ c2 ) ) ) ) ) ).

% g'.min_dist_less_V
thf(fact_169_g_H_OisShortestPath__length__less__V,axiom,
    ! [S: nat,P5: list @ ( product_prod @ nat @ nat ),T: nat] :
      ( ( member @ nat @ S @ ( v @ b @ c2 ) )
     => ( ( isShortestPath @ b @ c2 @ S @ P5 @ T )
       => ( ord_less @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ ( finite_card @ nat @ ( v @ b @ c2 ) ) ) ) ) ).

% g'.isShortestPath_length_less_V
thf(fact_170_isShortestPath__alt,axiom,
    ! [U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
      ( ( isShortestPath @ a @ c @ U @ P5 @ V )
      = ( ( isSimplePath @ a @ c @ U @ P5 @ V )
        & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 )
          = ( min_dist @ a @ c @ U @ V ) ) ) ) ).

% isShortestPath_alt
thf(fact_171_g_H_Ofinite__V,axiom,
    finite_finite2 @ nat @ ( v @ b @ c2 ) ).

% g'.finite_V
thf(fact_172_finite__V,axiom,
    finite_finite2 @ nat @ ( v @ a @ c ) ).

% finite_V
thf(fact_173_dist__z__iff,axiom,
    ! [V: nat,V3: nat] :
      ( ( dist @ a @ c @ V @ ( zero_zero @ nat ) @ V3 )
      = ( V3 = V ) ) ).

% dist_z_iff
thf(fact_174_dist__z,axiom,
    ! [V: nat] : ( dist @ a @ c @ V @ ( zero_zero @ nat ) @ V ) ).

% dist_z
thf(fact_175_connected__distI,axiom,
    ! [V: nat,D: nat,V3: nat] :
      ( ( dist @ a @ c @ V @ D @ V3 )
     => ( connected @ a @ c @ V @ V3 ) ) ).

% connected_distI
thf(fact_176_Veq,axiom,
    ( ( v @ b @ c2 )
    = ( v @ a @ c ) ) ).

% Veq
thf(fact_177_g_H_Oadjacent__nodes__ss__V,axiom,
    ! [U: nat] : ( ord_less_eq @ ( set @ nat ) @ ( adjacent_nodes @ b @ c2 @ U ) @ ( v @ b @ c2 ) ) ).

% g'.adjacent_nodes_ss_V
thf(fact_178_adjacent__nodes__ss__V,axiom,
    ! [U: nat] : ( ord_less_eq @ ( set @ nat ) @ ( adjacent_nodes @ a @ c @ U ) @ ( v @ a @ c ) ) ).

% adjacent_nodes_ss_V
thf(fact_179_Graph_OisSimplePath_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isSimplePath @ Capacity )
        = ( isSimplePath @ Capacity ) ) ) ).

% Graph.isSimplePath.cong
thf(fact_180_finite__subset,axiom,
    ! [A: $tType,A3: set @ A,B3: set @ A] :
      ( ( ord_less_eq @ ( set @ A ) @ A3 @ B3 )
     => ( ( finite_finite2 @ A @ B3 )
       => ( finite_finite2 @ A @ A3 ) ) ) ).

% finite_subset
thf(fact_181_infinite__super,axiom,
    ! [A: $tType,S2: set @ A,T2: set @ A] :
      ( ( ord_less_eq @ ( set @ A ) @ S2 @ T2 )
     => ( ~ ( finite_finite2 @ A @ S2 )
       => ~ ( finite_finite2 @ A @ T2 ) ) ) ).

% infinite_super
thf(fact_182_rev__finite__subset,axiom,
    ! [A: $tType,B3: set @ A,A3: set @ A] :
      ( ( finite_finite2 @ A @ B3 )
     => ( ( ord_less_eq @ ( set @ A ) @ A3 @ B3 )
       => ( finite_finite2 @ A @ A3 ) ) ) ).

% rev_finite_subset
thf(fact_183_card__subset__eq,axiom,
    ! [A: $tType,B3: set @ A,A3: set @ A] :
      ( ( finite_finite2 @ A @ B3 )
     => ( ( ord_less_eq @ ( set @ A ) @ A3 @ B3 )
       => ( ( ( finite_card @ A @ A3 )
            = ( finite_card @ A @ B3 ) )
         => ( A3 = B3 ) ) ) ) ).

% card_subset_eq
thf(fact_184_infinite__arbitrarily__large,axiom,
    ! [A: $tType,A3: set @ A,N: nat] :
      ( ~ ( finite_finite2 @ A @ A3 )
     => ? [B4: set @ A] :
          ( ( finite_finite2 @ A @ B4 )
          & ( ( finite_card @ A @ B4 )
            = N )
          & ( ord_less_eq @ ( set @ A ) @ B4 @ A3 ) ) ) ).

% infinite_arbitrarily_large
thf(fact_185_Graph_OisSPath__pathLE,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P5: list @ ( product_prod @ nat @ nat ),T: nat] :
          ( ( isPath @ Capacity @ C @ S @ P5 @ T )
         => ? [P: list @ ( product_prod @ nat @ nat )] : ( isSimplePath @ Capacity @ C @ S @ P @ T ) ) ) ).

% Graph.isSPath_pathLE
thf(fact_186_Graph_OshortestPath__is__simple,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,S: nat,P5: list @ ( product_prod @ nat @ nat ),T: nat] :
          ( ( isShortestPath @ Capacity @ C @ S @ P5 @ T )
         => ( isSimplePath @ Capacity @ C @ S @ P5 @ T ) ) ) ).

% Graph.shortestPath_is_simple
thf(fact_187_finite__maxlen,axiom,
    ! [A: $tType,M4: set @ ( list @ A )] :
      ( ( finite_finite2 @ ( list @ A ) @ M4 )
     => ? [N3: nat] :
        ! [X4: list @ A] :
          ( ( member @ ( list @ A ) @ X4 @ M4 )
         => ( ord_less @ nat @ ( size_size @ ( list @ A ) @ X4 ) @ N3 ) ) ) ).

% finite_maxlen
thf(fact_188_card__psubset,axiom,
    ! [A: $tType,B3: set @ A,A3: set @ A] :
      ( ( finite_finite2 @ A @ B3 )
     => ( ( ord_less_eq @ ( set @ A ) @ A3 @ B3 )
       => ( ( ord_less @ nat @ ( finite_card @ A @ A3 ) @ ( finite_card @ A @ B3 ) )
         => ( ord_less @ ( set @ A ) @ A3 @ B3 ) ) ) ) ).

% card_psubset
thf(fact_189_card__mono,axiom,
    ! [A: $tType,B3: set @ A,A3: set @ A] :
      ( ( finite_finite2 @ A @ B3 )
     => ( ( ord_less_eq @ ( set @ A ) @ A3 @ B3 )
       => ( ord_less_eq @ nat @ ( finite_card @ A @ A3 ) @ ( finite_card @ A @ B3 ) ) ) ) ).

% card_mono
thf(fact_190_card__seteq,axiom,
    ! [A: $tType,B3: set @ A,A3: set @ A] :
      ( ( finite_finite2 @ A @ B3 )
     => ( ( ord_less_eq @ ( set @ A ) @ A3 @ B3 )
       => ( ( ord_less_eq @ nat @ ( finite_card @ A @ B3 ) @ ( finite_card @ A @ A3 ) )
         => ( A3 = B3 ) ) ) ) ).

% card_seteq
thf(fact_191_finite__if__finite__subsets__card__bdd,axiom,
    ! [A: $tType,F2: set @ A,C3: nat] :
      ( ! [G2: set @ A] :
          ( ( ord_less_eq @ ( set @ A ) @ G2 @ F2 )
         => ( ( finite_finite2 @ A @ G2 )
           => ( ord_less_eq @ nat @ ( finite_card @ A @ G2 ) @ C3 ) ) )
     => ( ( finite_finite2 @ A @ F2 )
        & ( ord_less_eq @ nat @ ( finite_card @ A @ F2 ) @ C3 ) ) ) ).

% finite_if_finite_subsets_card_bdd
thf(fact_192_Finite__Graph__def,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( ( finite_Graph @ A )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > A] : ( finite_finite2 @ nat @ ( v @ A @ C2 ) ) ) ) ) ).

% Finite_Graph_def
thf(fact_193_Finite__Graph_Ointro,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A] :
          ( ( finite_finite2 @ nat @ ( v @ A @ C ) )
         => ( finite_Graph @ A @ C ) ) ) ).

% Finite_Graph.intro
thf(fact_194_Finite__Graph_Ofinite__V,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A] :
          ( ( finite_Graph @ A @ C )
         => ( finite_finite2 @ nat @ ( v @ A @ C ) ) ) ) ).

% Finite_Graph.finite_V
thf(fact_195_finite,axiom,
    ! [A: $tType] :
      ( ( finite_finite @ A )
     => ! [A3: set @ A] : ( finite_finite2 @ A @ A3 ) ) ).

% finite
thf(fact_196_finite__set__choice,axiom,
    ! [B: $tType,A: $tType,A3: set @ A,P2: A > B > $o] :
      ( ( finite_finite2 @ A @ A3 )
     => ( ! [X2: A] :
            ( ( member @ A @ X2 @ A3 )
           => ? [X_1: B] : ( P2 @ X2 @ X_1 ) )
       => ? [F3: A > B] :
          ! [X4: A] :
            ( ( member @ A @ X4 @ A3 )
           => ( P2 @ X4 @ ( F3 @ X4 ) ) ) ) ) ).

% finite_set_choice
thf(fact_197_finite__psubset__induct,axiom,
    ! [A: $tType,A3: set @ A,P2: ( set @ A ) > $o] :
      ( ( finite_finite2 @ A @ A3 )
     => ( ! [A5: set @ A] :
            ( ( finite_finite2 @ A @ A5 )
           => ( ! [B5: set @ A] :
                  ( ( ord_less @ ( set @ A ) @ B5 @ A5 )
                 => ( P2 @ B5 ) )
             => ( P2 @ A5 ) ) )
       => ( P2 @ A3 ) ) ) ).

% finite_psubset_induct
thf(fact_198_Graph_OisShortestPath__alt,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( isShortestPath @ Capacity )
        = ( ^ [C2: ( product_prod @ nat @ nat ) > Capacity,U2: nat,P3: list @ ( product_prod @ nat @ nat ),V4: nat] :
              ( ( isSimplePath @ Capacity @ C2 @ U2 @ P3 @ V4 )
              & ( ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P3 )
                = ( min_dist @ Capacity @ C2 @ U2 @ V4 ) ) ) ) ) ) ).

% Graph.isShortestPath_alt
thf(fact_199_ek__analysis_Ocard__spEdges__le,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat] :
          ( ( edmond2129202899alysis @ A @ C )
         => ( ord_less_eq @ nat @ ( finite_card @ ( product_prod @ nat @ nat ) @ ( edmond1803015688pEdges @ A @ C @ S @ T ) ) @ ( finite_card @ ( product_prod @ nat @ nat ) @ ( edmond259086305sis_uE @ A @ C ) ) ) ) ) ).

% ek_analysis.card_spEdges_le
thf(fact_200_finite__has__minimal2,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A3: set @ A,A2: A] :
          ( ( finite_finite2 @ A @ A3 )
         => ( ( member @ A @ A2 @ A3 )
           => ? [X2: A] :
                ( ( member @ A @ X2 @ A3 )
                & ( ord_less_eq @ A @ X2 @ A2 )
                & ! [Xa: A] :
                    ( ( member @ A @ Xa @ A3 )
                   => ( ( ord_less_eq @ A @ Xa @ X2 )
                     => ( X2 = Xa ) ) ) ) ) ) ) ).

% finite_has_minimal2
thf(fact_201_finite__has__maximal2,axiom,
    ! [A: $tType] :
      ( ( order @ A )
     => ! [A3: set @ A,A2: A] :
          ( ( finite_finite2 @ A @ A3 )
         => ( ( member @ A @ A2 @ A3 )
           => ? [X2: A] :
                ( ( member @ A @ X2 @ A3 )
                & ( ord_less_eq @ A @ A2 @ X2 )
                & ! [Xa: A] :
                    ( ( member @ A @ Xa @ A3 )
                   => ( ( ord_less_eq @ A @ X2 @ Xa )
                     => ( X2 = Xa ) ) ) ) ) ) ) ).

% finite_has_maximal2
thf(fact_202_Finite__Graph_OsimplePath__length__less__V,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,U: nat,P5: list @ ( product_prod @ nat @ nat ),V: nat] :
          ( ( finite_Graph @ A @ C )
         => ( ( member @ nat @ U @ ( v @ A @ C ) )
           => ( ( isSimplePath @ A @ C @ U @ P5 @ V )
             => ( ord_less @ nat @ ( size_size @ ( list @ ( product_prod @ nat @ nat ) ) @ P5 ) @ ( finite_card @ nat @ ( v @ A @ C ) ) ) ) ) ) ) ).

% Finite_Graph.simplePath_length_less_V
thf(fact_203_psubset__card__mono,axiom,
    ! [A: $tType,B3: set @ A,A3: set @ A] :
      ( ( finite_finite2 @ A @ B3 )
     => ( ( ord_less @ ( set @ A ) @ A3 @ B3 )
       => ( ord_less @ nat @ ( finite_card @ A @ A3 ) @ ( finite_card @ A @ B3 ) ) ) ) ).

% psubset_card_mono
thf(fact_204_reachable__ss__V,axiom,
    ! [S: nat] :
      ( ( member @ nat @ S @ ( v @ a @ c ) )
     => ( ord_less_eq @ ( set @ nat ) @ ( reachableNodes @ a @ c @ S ) @ ( v @ a @ c ) ) ) ).

% reachable_ss_V
thf(fact_205_g_H_Oreachable__ss__V,axiom,
    ! [S: nat] :
      ( ( member @ nat @ S @ ( v @ b @ c2 ) )
     => ( ord_less_eq @ ( set @ nat ) @ ( reachableNodes @ b @ c2 @ S ) @ ( v @ b @ c2 ) ) ) ).

% g'.reachable_ss_V
thf(fact_206_spEdges__ss__E,axiom,
    ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( edmond1803015688pEdges @ a @ c @ s @ t ) @ ( e @ a @ c ) ).

% spEdges_ss_E
thf(fact_207_E__ss__uE,axiom,
    ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( e @ a @ c ) @ ( edmond259086305sis_uE @ a @ c ) ).

% E_ss_uE
thf(fact_208_Finite__Graph__EI,axiom,
    ( ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ a @ c ) )
   => ( finite_Graph @ a @ c ) ) ).

% Finite_Graph_EI
thf(fact_209_Efin__imp__Vfin,axiom,
    ( ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ a @ c ) )
   => ( finite_finite2 @ nat @ ( v @ a @ c ) ) ) ).

% Efin_imp_Vfin
thf(fact_210_finite__E,axiom,
    finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ a @ c ) ).

% finite_E
thf(fact_211_g_H_Oadjacent__nodes__finite,axiom,
    ! [U: nat] : ( finite_finite2 @ nat @ ( adjacent_nodes @ b @ c2 @ U ) ) ).

% g'.adjacent_nodes_finite
thf(fact_212_adjacent__nodes__finite,axiom,
    ! [U: nat] : ( finite_finite2 @ nat @ ( adjacent_nodes @ a @ c @ U ) ) ).

% adjacent_nodes_finite
thf(fact_213_Vfin__imp__Efin,axiom,
    ( ( finite_finite2 @ nat @ ( v @ a @ c ) )
   => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ a @ c ) ) ) ).

% Vfin_imp_Efin
thf(fact_214_Graph_OreachableNodes_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( reachableNodes @ Capacity )
        = ( reachableNodes @ Capacity ) ) ) ).

% Graph.reachableNodes.cong
thf(fact_215_Graph_Oadjacent__nodes_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( adjacent_nodes @ Capacity )
        = ( adjacent_nodes @ Capacity ) ) ) ).

% Graph.adjacent_nodes.cong
thf(fact_216_Graph_OE_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( e @ Capacity )
        = ( e @ Capacity ) ) ) ).

% Graph.E.cong
thf(fact_217_Graph_Oreachable__ss__V,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [S: nat,C: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( member @ nat @ S @ ( v @ Capacity @ C ) )
         => ( ord_less_eq @ ( set @ nat ) @ ( reachableNodes @ Capacity @ C @ S ) @ ( v @ Capacity @ C ) ) ) ) ).

% Graph.reachable_ss_V
thf(fact_218_Graph_OEfin__imp__Vfin,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ Capacity @ C ) )
         => ( finite_finite2 @ nat @ ( v @ Capacity @ C ) ) ) ) ).

% Graph.Efin_imp_Vfin
thf(fact_219_Graph_OVfin__imp__Efin,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( finite_finite2 @ nat @ ( v @ Capacity @ C ) )
         => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ Capacity @ C ) ) ) ) ).

% Graph.Vfin_imp_Efin
thf(fact_220_Graph_OFinite__Graph__EI,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity] :
          ( ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ Capacity @ C ) )
         => ( finite_Graph @ Capacity @ C ) ) ) ).

% Graph.Finite_Graph_EI
thf(fact_221_Finite__Graph_Ofinite__E,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A] :
          ( ( finite_Graph @ A @ C )
         => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ A @ C ) ) ) ) ).

% Finite_Graph.finite_E
thf(fact_222_ek__analysis_OE__ss__uE,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A] :
          ( ( edmond2129202899alysis @ A @ C )
         => ( ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( e @ A @ C ) @ ( edmond259086305sis_uE @ A @ C ) ) ) ) ).

% ek_analysis.E_ss_uE
thf(fact_223_ek__analysis_OspEdges__ss__E,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,S: nat,T: nat] :
          ( ( edmond2129202899alysis @ A @ C )
         => ( ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( edmond1803015688pEdges @ A @ C @ S @ T ) @ ( e @ A @ C ) ) ) ) ).

% ek_analysis.spEdges_ss_E
thf(fact_224_Graph_Oadjacent__nodes__ss__V,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U: nat] : ( ord_less_eq @ ( set @ nat ) @ ( adjacent_nodes @ Capacity @ C @ U ) @ ( v @ Capacity @ C ) ) ) ).

% Graph.adjacent_nodes_ss_V
thf(fact_225_Finite__Graph_Oadjacent__nodes__finite,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ! [C: ( product_prod @ nat @ nat ) > A,U: nat] :
          ( ( finite_Graph @ A @ C )
         => ( finite_finite2 @ nat @ ( adjacent_nodes @ A @ C @ U ) ) ) ) ).

% Finite_Graph.adjacent_nodes_finite
thf(fact_226_incoming_H__edges,axiom,
    ! [U3: set @ nat] : ( ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( incoming @ a @ c @ U3 ) @ ( e @ a @ c ) ) ).

% incoming'_edges
thf(fact_227_outgoing_H__edges,axiom,
    ! [U3: set @ nat] : ( ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( outgoing @ a @ c @ U3 ) @ ( e @ a @ c ) ) ).

% outgoing'_edges
thf(fact_228_g_H_OE__ss__uE,axiom,
    ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( e @ b @ c2 ) @ ( edmond259086305sis_uE @ b @ c2 ) ).

% g'.E_ss_uE
thf(fact_229_g_H_OFinite__Graph__EI,axiom,
    ( ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ b @ c2 ) )
   => ( finite_Graph @ b @ c2 ) ) ).

% g'.Finite_Graph_EI
thf(fact_230_g_H_OEfin__imp__Vfin,axiom,
    ( ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ b @ c2 ) )
   => ( finite_finite2 @ nat @ ( v @ b @ c2 ) ) ) ).

% g'.Efin_imp_Vfin
thf(fact_231_g_H_OspEdges__ss__E,axiom,
    ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( edmond1803015688pEdges @ b @ c2 @ s @ t ) @ ( e @ b @ c2 ) ).

% g'.spEdges_ss_E
thf(fact_232_g_H_Ofinite__E,axiom,
    finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ b @ c2 ) ).

% g'.finite_E
thf(fact_233_g_H_OVfin__imp__Efin,axiom,
    ( ( finite_finite2 @ nat @ ( v @ b @ c2 ) )
   => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( e @ b @ c2 ) ) ) ).

% g'.Vfin_imp_Efin
thf(fact_234_finite__outgoing_H,axiom,
    ! [U3: set @ nat] :
      ( ( finite_finite2 @ nat @ ( v @ a @ c ) )
     => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( outgoing @ a @ c @ U3 ) ) ) ).

% finite_outgoing'
thf(fact_235_finite__incoming_H,axiom,
    ! [U3: set @ nat] :
      ( ( finite_finite2 @ nat @ ( v @ a @ c ) )
     => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( incoming @ a @ c @ U3 ) ) ) ).

% finite_incoming'
thf(fact_236_Graph_Oincoming_H_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( incoming @ Capacity )
        = ( incoming @ Capacity ) ) ) ).

% Graph.incoming'.cong
thf(fact_237_Graph_Ooutgoing_H_Ocong,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ( ( outgoing @ Capacity )
        = ( outgoing @ Capacity ) ) ) ).

% Graph.outgoing'.cong
thf(fact_238_Graph_Ooutgoing_H__edges,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U3: set @ nat] : ( ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( outgoing @ Capacity @ C @ U3 ) @ ( e @ Capacity @ C ) ) ) ).

% Graph.outgoing'_edges
thf(fact_239_Graph_Oincoming_H__edges,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U3: set @ nat] : ( ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( incoming @ Capacity @ C @ U3 ) @ ( e @ Capacity @ C ) ) ) ).

% Graph.incoming'_edges
thf(fact_240_Graph_Ofinite__outgoing_H,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U3: set @ nat] :
          ( ( finite_finite2 @ nat @ ( v @ Capacity @ C ) )
         => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( outgoing @ Capacity @ C @ U3 ) ) ) ) ).

% Graph.finite_outgoing'
thf(fact_241_Graph_Ofinite__incoming_H,axiom,
    ! [Capacity: $tType] :
      ( ( linordered_idom @ Capacity )
     => ! [C: ( product_prod @ nat @ nat ) > Capacity,U3: set @ nat] :
          ( ( finite_finite2 @ nat @ ( v @ Capacity @ C ) )
         => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( incoming @ Capacity @ C @ U3 ) ) ) ) ).

% Graph.finite_incoming'
thf(fact_242_g_H_Oincoming_H__edges,axiom,
    ! [U3: set @ nat] : ( ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( incoming @ b @ c2 @ U3 ) @ ( e @ b @ c2 ) ) ).

% g'.incoming'_edges
thf(fact_243_g_H_Ooutgoing_H__edges,axiom,
    ! [U3: set @ nat] : ( ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ ( outgoing @ b @ c2 @ U3 ) @ ( e @ b @ c2 ) ) ).

% g'.outgoing'_edges
thf(fact_244_g_H_Ofinite__outgoing_H,axiom,
    ! [U3: set @ nat] :
      ( ( finite_finite2 @ nat @ ( v @ b @ c2 ) )
     => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( outgoing @ b @ c2 @ U3 ) ) ) ).

% g'.finite_outgoing'
thf(fact_245_g_H_Ofinite__incoming_H,axiom,
    ! [U3: set @ nat] :
      ( ( finite_finite2 @ nat @ ( v @ b @ c2 ) )
     => ( finite_finite2 @ ( product_prod @ nat @ nat ) @ ( incoming @ b @ c2 @ U3 ) ) ) ).

% g'.finite_incoming'
thf(fact_246__092_060open_062edges_A_092_060subseteq_062_AE_092_060close_062,axiom,
    ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ edges @ ( e @ a @ c ) ).

% \<open>edges \<subseteq> E\<close>
thf(fact_247_psubsetI,axiom,
    ! [A: $tType,A3: set @ A,B3: set @ A] :
      ( ( ord_less_eq @ ( set @ A ) @ A3 @ B3 )
     => ( ( A3 != B3 )
       => ( ord_less @ ( set @ A ) @ A3 @ B3 ) ) ) ).

% psubsetI
thf(fact_248_subset__antisym,axiom,
    ! [A: $tType,A3: set @ A,B3: set @ A] :
      ( ( ord_less_eq @ ( set @ A ) @ A3 @ B3 )
     => ( ( ord_less_eq @ ( set @ A ) @ B3 @ A3 )
       => ( A3 = B3 ) ) ) ).

% subset_antisym
thf(fact_249_subsetI,axiom,
    ! [A: $tType,A3: set @ A,B3: set @ A] :
      ( ! [X2: A] :
          ( ( member @ A @ X2 @ A3 )
         => ( member @ A @ X2 @ B3 ) )
     => ( ord_less_eq @ ( set @ A ) @ A3 @ B3 ) ) ).

% subsetI
thf(fact_250_SP__EDGES,axiom,
    ord_less_eq @ ( set @ ( product_prod @ nat @ nat ) ) @ edges @ ( set2 @ ( product_prod @ nat @ nat ) @ p ) ).

% SP_EDGES
thf(fact_251_Collect__mono__iff,axiom,
    ! [A: $tType,P2: A > $o,Q: A > $o] :
      ( ( ord_less_eq @ ( set @ A ) @ ( collect @ A @ P2 ) @ ( collect @ A @ Q ) )
      = ( ! [X: A] :
            ( ( P2 @ X )
           => ( Q @ X ) ) ) ) ).

% Collect_mono_iff
thf(fact_252_set__eq__subset,axiom,
    ! [A: $tType] :
      ( ( ^ [Y4: set @ A,Z: set @ A] : Y4 = Z )
      = ( ^ [A4: set @ A,B6: set @ A] :
            ( ( ord_less_eq @ ( set @ A ) @ A4 @ B6 )
            & ( ord_less_eq @ ( set @ A ) @ B6 @ A4 ) ) ) ) ).

% set_eq_subset
thf(fact_253_subset__trans,axiom,
    ! [A: $tType,A3: set @ A,B3: set @ A,C3: set @ A] :
      ( ( ord_less_eq @ ( set @ A ) @ A3 @ B3 )
     => ( ( ord_less_eq @ ( set @ A ) @ B3 @ C3 )
       => ( ord_less_eq @ ( set @ A ) @ A3 @ C3 ) ) ) ).

% subset_trans

% Subclasses (3)
thf(subcl_Rings_Olinordered__idom___HOL_Otype,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( type @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Groups_Ozero,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( zero @ A ) ) ).

thf(subcl_Rings_Olinordered__idom___Orderings_Oorder,axiom,
    ! [A: $tType] :
      ( ( linordered_idom @ A )
     => ( order @ A ) ) ).

% Type constructors (14)
thf(tcon_fun___Finite__Set_Ofinite,axiom,
    ! [A6: $tType,A7: $tType] :
      ( ( ( finite_finite @ A6 )
        & ( finite_finite @ A7 ) )
     => ( finite_finite @ ( A6 > A7 ) ) ) ).

thf(tcon_fun___Orderings_Oorder,axiom,
    ! [A6: $tType,A7: $tType] :
      ( ( order @ A7 )
     => ( order @ ( A6 > A7 ) ) ) ).

thf(tcon_Nat_Onat___Groups_Ocanonically__ordered__monoid__add,axiom,
    canoni770627133id_add @ nat ).

thf(tcon_Nat_Onat___Orderings_Owellorder,axiom,
    wellorder @ nat ).

thf(tcon_Nat_Onat___Orderings_Oorder_1,axiom,
    order @ nat ).

thf(tcon_Nat_Onat___Groups_Ozero,axiom,
    zero @ nat ).

thf(tcon_Nat_Onat___Nat_Osize,axiom,
    size @ nat ).

thf(tcon_Set_Oset___Finite__Set_Ofinite_2,axiom,
    ! [A6: $tType] :
      ( ( finite_finite @ A6 )
     => ( finite_finite @ ( set @ A6 ) ) ) ).

thf(tcon_Set_Oset___Orderings_Oorder_3,axiom,
    ! [A6: $tType] : ( order @ ( set @ A6 ) ) ).

thf(tcon_HOL_Obool___Finite__Set_Ofinite_4,axiom,
    finite_finite @ $o ).

thf(tcon_HOL_Obool___Orderings_Oorder_5,axiom,
    order @ $o ).

thf(tcon_List_Olist___Nat_Osize_6,axiom,
    ! [A6: $tType] : ( size @ ( list @ A6 ) ) ).

thf(tcon_Product__Type_Oprod___Finite__Set_Ofinite_7,axiom,
    ! [A6: $tType,A7: $tType] :
      ( ( ( finite_finite @ A6 )
        & ( finite_finite @ A7 ) )
     => ( finite_finite @ ( product_prod @ A6 @ A7 ) ) ) ).

thf(tcon_Product__Type_Oprod___Nat_Osize_8,axiom,
    ! [A6: $tType,A7: $tType] : ( size @ ( product_prod @ A6 @ A7 ) ) ).

% Free types (2)
thf(tfree_0,hypothesis,
    linordered_idom @ a ).

thf(tfree_1,hypothesis,
    linordered_idom @ b ).

% Conjectures (1)
thf(conj_0,conjecture,
    $false ).

%------------------------------------------------------------------------------
