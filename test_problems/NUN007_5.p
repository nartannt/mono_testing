%------------------------------------------------------------------------------
% File     : NUN007_5 : TPTP v8.2.0. Released v6.0.0.
% Domain   : Number Theory
% Problem  : Sum of two squares line 180
% Version  : Especial.
% English  : 

% Refs     : [BN10]  Boehme & Nipkow (2010), Sledgehammer: Judgement Day
%          : [Bla13] Blanchette (2011), Email to Geoff Sutcliffe
% Source   : [Bla13]
% Names    : s2s_180 [Bla13]

% Status   : Unknown
% Rating   : 1.00 v6.4.0
% Syntax   : Number of formulae    :  146 (  67 unt;  32 typ;   0 def)
%            Number of atoms       :  171 ( 102 equ)
%            Maximal formula atoms :    4 (   1 avg)
%            Number of connectives :   64 (   7   ~;   0   |;   6   &)
%                                         (   9 <=>;  42  =>;   0  <=;   0 <~>)
%            Maximal formula depth :    8 (   3 avg)
%            Maximal term depth    :   10 (   2 avg)
%            Number of types       :    4 (   3 usr)
%            Number of type conns  :   15 (  10   >;   5   *;   0   +;   0  <<)
%            Number of predicates  :   11 (  10 usr;   0 prp; 1-3 aty)
%            Number of functors    :   19 (  19 usr;  10 con; 0-3 aty)
%            Number of variables   :  207 ( 191   !;   0   ?; 207   :)
%                                         (  16  !>;   0  ?*;   0  @-;   0  @+)
% SPC      : TF1_UNK_EQU_NAR

% Comments : This file was generated by Isabelle (most likely Sledgehammer)
%            2011-12-13 16:26:12
%------------------------------------------------------------------------------
%----Should-be-implicit typings (3)
tff(ty_tc_HOL_Obool,type,
    bool: $tType ).

tff(ty_tc_Int_Oint,type,
    int: $tType ).

tff(ty_tc_Nat_Onat,type,
    nat: $tType ).

%----Explicit typings (29)
tff(sy_cl_Int_Onumber,type,
    number: 
      !>[A1: $tType] : $o ).

tff(sy_cl_Rings_Oring,type,
    ring: 
      !>[A1: $tType] : $o ).

tff(sy_cl_Rings_Osemiring,type,
    semiring: 
      !>[A1: $tType] : $o ).

tff(sy_cl_Int_Onumber__ring,type,
    number_ring: 
      !>[A1: $tType] : $o ).

tff(sy_cl_Int_Oring__char__0,type,
    ring_char_0: 
      !>[A1: $tType] : $o ).

tff(sy_cl_Rings_Osemiring__1,type,
    semiring_1: 
      !>[A1: $tType] : $o ).

tff(sy_cl_Groups_Omonoid__mult,type,
    monoid_mult: 
      !>[A1: $tType] : $o ).

tff(sy_cl_Int_Onumber__semiring,type,
    number_semiring: 
      !>[A1: $tType] : $o ).

tff(sy_c_Groups_Ominus__class_Ominus,type,
    minus_minus: 
      !>[A1: $tType] : ( ( A1 * A1 ) > A1 ) ).

tff(sy_c_Groups_Oone__class_Oone,type,
    one_one: 
      !>[A1: $tType] : A1 ).

tff(sy_c_Groups_Oplus__class_Oplus,type,
    plus_plus: 
      !>[A1: $tType] : ( ( A1 * A1 ) > A1 ) ).

tff(sy_c_Groups_Otimes__class_Otimes,type,
    times_times: 
      !>[A1: $tType] : ( ( A1 * A1 ) > A1 ) ).

tff(sy_c_Int_OBit0,type,
    bit0: int > int ).

tff(sy_c_Int_OBit1,type,
    bit1: int > int ).

tff(sy_c_Int_OPls,type,
    pls: int ).

tff(sy_c_Int_Onumber__class_Onumber__of,type,
    number_number_of: 
      !>[A1: $tType] : ( int > A1 ) ).

tff(sy_c_Nat_Osemiring__1__class_Oof__nat,type,
    semiring_1_of_nat: 
      !>[A1: $tType] : ( nat > A1 ) ).

tff(sy_c_Power_Opower__class_Opower,type,
    power_power: 
      !>[A1: $tType] : ( ( A1 * nat ) > A1 ) ).

tff(sy_c_Rings_Odvd__class_Odvd,type,
    dvd_dvd: 
      !>[A1: $tType] : ( ( A1 * A1 ) > $o ) ).

tff(sy_c_fFalse,type,
    fFalse: bool ).

tff(sy_c_fTrue,type,
    fTrue: bool ).

tff(sy_c_pp,type,
    pp: bool > $o ).

tff(sy_v_m,type,
    m: int ).

tff(sy_v_m1____,type,
    m1: int ).

tff(sy_v_n____,type,
    n: nat ).

tff(sy_v_r____,type,
    r: int ).

tff(sy_v_sa____,type,
    sa: int ).

tff(sy_v_v____,type,
    v: int ).

tff(sy_v_w____,type,
    w: int ).

%----Relevant facts (98)
tff(fact_0_m1,axiom,
    plus_plus(int,power_power(int,v,number_number_of(nat,bit0(bit1(pls)))),power_power(int,w,number_number_of(nat,bit0(bit1(pls))))) = times_times(int,plus_plus(int,one_one(int),semiring_1_of_nat(int,n)),m1) ).

tff(fact_1__096_B_Bthesis_O_A_I_B_Bm1_O_Av_A_094_A2_A_L_Aw_A_094_A2_A_061_A_I1_A_L_Aint_An_J_A_K_Am1_A_061_061_062_Athesis_J_A_061_061_062_Athesis_096,axiom,
    ~ ! [M1: int] : plus_plus(int,power_power(int,v,number_number_of(nat,bit0(bit1(pls)))),power_power(int,w,number_number_of(nat,bit0(bit1(pls))))) != times_times(int,plus_plus(int,one_one(int),semiring_1_of_nat(int,n)),M1) ).

tff(fact_2_power2__eq__square__number__of,axiom,
    ! [B1: $tType] :
      ( ( monoid_mult(B1)
        & number(B1) )
     => ! [W: int] : power_power(B1,number_number_of(B1,W),number_number_of(nat,bit0(bit1(pls)))) = times_times(B1,number_number_of(B1,W),number_number_of(B1,W)) ) ).

tff(fact_3_one__power2,axiom,
    ! [A1: $tType] :
      ( semiring_1(A1)
     => ( power_power(A1,one_one(A1),number_number_of(nat,bit0(bit1(pls)))) = one_one(A1) ) ) ).

tff(fact_4_add__special_I2_J,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [W: int] : plus_plus(A1,one_one(A1),number_number_of(A1,W)) = number_number_of(A1,plus_plus(int,bit1(pls),W)) ) ).

tff(fact_5_add__special_I3_J,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [V: int] : plus_plus(A1,number_number_of(A1,V),one_one(A1)) = number_number_of(A1,plus_plus(int,V,bit1(pls))) ) ).

tff(fact_6_one__add__one__is__two,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ( plus_plus(A1,one_one(A1),one_one(A1)) = number_number_of(A1,bit0(bit1(pls))) ) ) ).

tff(fact_7_mult__Bit1,axiom,
    ! [L: int,K: int] : times_times(int,bit1(K),L) = plus_plus(int,bit0(times_times(int,K,L)),L) ).

tff(fact_8_numeral__1__eq__1,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ( number_number_of(A1,bit1(pls)) = one_one(A1) ) ) ).

tff(fact_9__0961_A_L_Aint_An_Advd_Av_A_094_A2_A_L_Aw_A_094_A2_096,axiom,
    dvd_dvd(int,plus_plus(int,one_one(int),semiring_1_of_nat(int,n)),plus_plus(int,power_power(int,v,number_number_of(nat,bit0(bit1(pls)))),power_power(int,w,number_number_of(nat,bit0(bit1(pls)))))) ).

tff(fact_10_power2__diff,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [Y: A1,X: A1] : power_power(A1,minus_minus(A1,X,Y),number_number_of(nat,bit0(bit1(pls)))) = minus_minus(A1,plus_plus(A1,power_power(A1,X,number_number_of(nat,bit0(bit1(pls)))),power_power(A1,Y,number_number_of(nat,bit0(bit1(pls))))),times_times(A1,times_times(A1,number_number_of(A1,bit0(bit1(pls))),X),Y)) ) ).

tff(fact_11_zspecial__product,axiom,
    ! [B: int,A: int] : times_times(int,plus_plus(int,A,B),minus_minus(int,A,B)) = minus_minus(int,power_power(int,A,number_number_of(nat,bit0(bit1(pls)))),power_power(int,B,number_number_of(nat,bit0(bit1(pls))))) ).

tff(fact_12_power2__sum,axiom,
    ! [A1: $tType] :
      ( number_semiring(A1)
     => ! [Y: A1,X: A1] : power_power(A1,plus_plus(A1,X,Y),number_number_of(nat,bit0(bit1(pls)))) = plus_plus(A1,plus_plus(A1,power_power(A1,X,number_number_of(nat,bit0(bit1(pls)))),power_power(A1,Y,number_number_of(nat,bit0(bit1(pls))))),times_times(A1,times_times(A1,number_number_of(A1,bit0(bit1(pls))),X),Y)) ) ).

tff(fact_13_diff__bin__simps_I3_J,axiom,
    ! [L: int] : minus_minus(int,pls,bit0(L)) = bit0(minus_minus(int,pls,L)) ).

tff(fact_14_eq__number__of,axiom,
    ! [A1: $tType] :
      ( ( number_ring(A1)
        & ring_char_0(A1) )
     => ! [Ya: int,Xa: int] :
          ( ( number_number_of(A1,Xa) = number_number_of(A1,Ya) )
        <=> ( Xa = Ya ) ) ) ).

tff(fact_15_rel__simps_I51_J,axiom,
    ! [L1: int,K1: int] :
      ( ( bit1(K1) = bit1(L1) )
    <=> ( K1 = L1 ) ) ).

tff(fact_16_rel__simps_I48_J,axiom,
    ! [L1: int,K1: int] :
      ( ( bit0(K1) = bit0(L1) )
    <=> ( K1 = L1 ) ) ).

tff(fact_17_rel__simps_I46_J,axiom,
    ! [K: int] : bit1(K) != pls ).

tff(fact_18_rel__simps_I39_J,axiom,
    ! [L: int] : pls != bit1(L) ).

tff(fact_19_rel__simps_I50_J,axiom,
    ! [L: int,K: int] : bit1(K) != bit0(L) ).

tff(fact_20_rel__simps_I49_J,axiom,
    ! [L: int,K: int] : bit0(K) != bit1(L) ).

tff(fact_21_rel__simps_I44_J,axiom,
    ! [K1: int] :
      ( ( bit0(K1) = pls )
    <=> ( K1 = pls ) ) ).

tff(fact_22_rel__simps_I38_J,axiom,
    ! [L1: int] :
      ( ( pls = bit0(L1) )
    <=> ( pls = L1 ) ) ).

tff(fact_23_Bit0__Pls,axiom,
    bit0(pls) = pls ).

tff(fact_24_mult__Pls,axiom,
    ! [W: int] : times_times(int,pls,W) = pls ).

tff(fact_25_mult__Bit0,axiom,
    ! [L: int,K: int] : times_times(int,bit0(K),L) = bit0(times_times(int,K,L)) ).

tff(fact_26_add__Bit0__Bit0,axiom,
    ! [L: int,K: int] : plus_plus(int,bit0(K),bit0(L)) = bit0(plus_plus(int,K,L)) ).

tff(fact_27_diff__bin__simps_I7_J,axiom,
    ! [L: int,K: int] : minus_minus(int,bit0(K),bit0(L)) = bit0(minus_minus(int,K,L)) ).

tff(fact_28_left__distrib__number__of,axiom,
    ! [B1: $tType] :
      ( ( number(B1)
        & semiring(B1) )
     => ! [V: int,B: B1,A: B1] : times_times(B1,plus_plus(B1,A,B),number_number_of(B1,V)) = plus_plus(B1,times_times(B1,A,number_number_of(B1,V)),times_times(B1,B,number_number_of(B1,V))) ) ).

tff(fact_29_right__distrib__number__of,axiom,
    ! [B1: $tType] :
      ( ( number(B1)
        & semiring(B1) )
     => ! [C: B1,B: B1,V: int] : times_times(B1,number_number_of(B1,V),plus_plus(B1,B,C)) = plus_plus(B1,times_times(B1,number_number_of(B1,V),B),times_times(B1,number_number_of(B1,V),C)) ) ).

tff(fact_30_left__diff__distrib__number__of,axiom,
    ! [B1: $tType] :
      ( ( number(B1)
        & ring(B1) )
     => ! [V: int,B: B1,A: B1] : times_times(B1,minus_minus(B1,A,B),number_number_of(B1,V)) = minus_minus(B1,times_times(B1,A,number_number_of(B1,V)),times_times(B1,B,number_number_of(B1,V))) ) ).

tff(fact_31_right__diff__distrib__number__of,axiom,
    ! [B1: $tType] :
      ( ( number(B1)
        & ring(B1) )
     => ! [C: B1,B: B1,V: int] : times_times(B1,number_number_of(B1,V),minus_minus(B1,B,C)) = minus_minus(B1,times_times(B1,number_number_of(B1,V),B),times_times(B1,number_number_of(B1,V),C)) ) ).

tff(fact_32_mult__number__of__left,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [Z: A1,W: int,V: int] : times_times(A1,number_number_of(A1,V),times_times(A1,number_number_of(A1,W),Z)) = times_times(A1,number_number_of(A1,times_times(int,V,W)),Z) ) ).

tff(fact_33_arith__simps_I32_J,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [W: int,V: int] : times_times(A1,number_number_of(A1,V),number_number_of(A1,W)) = number_number_of(A1,times_times(int,V,W)) ) ).

tff(fact_34_add__number__of__left,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [Z: A1,W: int,V: int] : plus_plus(A1,number_number_of(A1,V),plus_plus(A1,number_number_of(A1,W),Z)) = plus_plus(A1,number_number_of(A1,plus_plus(int,V,W)),Z) ) ).

tff(fact_35_add__number__of__eq,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [W: int,V: int] : plus_plus(A1,number_number_of(A1,V),number_number_of(A1,W)) = number_number_of(A1,plus_plus(int,V,W)) ) ).

tff(fact_36_nat__numeral__1__eq__1,axiom,
    number_number_of(nat,bit1(pls)) = one_one(nat) ).

tff(fact_37_add__Bit1__Bit0,axiom,
    ! [L: int,K: int] : plus_plus(int,bit1(K),bit0(L)) = bit1(plus_plus(int,K,L)) ).

tff(fact_38_add__Bit0__Bit1,axiom,
    ! [L: int,K: int] : plus_plus(int,bit0(K),bit1(L)) = bit1(plus_plus(int,K,L)) ).

tff(fact_39_diff__bin__simps_I10_J,axiom,
    ! [L: int,K: int] : minus_minus(int,bit1(K),bit1(L)) = bit0(minus_minus(int,K,L)) ).

tff(fact_40_diff__bin__simps_I9_J,axiom,
    ! [L: int,K: int] : minus_minus(int,bit1(K),bit0(L)) = bit1(minus_minus(int,K,L)) ).

tff(fact_41_nat__1__add__1,axiom,
    plus_plus(nat,one_one(nat),one_one(nat)) = number_number_of(nat,bit0(bit1(pls))) ).

tff(fact_42_times__numeral__code_I5_J,axiom,
    ! [W: int,V: int] : times_times(int,number_number_of(int,V),number_number_of(int,W)) = number_number_of(int,times_times(int,V,W)) ).

tff(fact_43_zdvd__zdiffD,axiom,
    ! [N: int,M: int,K: int] :
      ( dvd_dvd(int,K,minus_minus(int,M,N))
     => ( dvd_dvd(int,K,N)
       => dvd_dvd(int,K,M) ) ) ).

tff(fact_44_plus__numeral__code_I9_J,axiom,
    ! [W: int,V: int] : plus_plus(int,number_number_of(int,V),number_number_of(int,W)) = number_number_of(int,plus_plus(int,V,W)) ).

tff(fact_45_zpower__zpower,axiom,
    ! [Z: nat,Y: nat,X: int] : power_power(int,power_power(int,X,Y),Z) = power_power(int,X,times_times(nat,Y,Z)) ).

tff(fact_46_zdvd__period,axiom,
    ! [C1: int,Ta: int,Xa: int,D: int,A2: int] :
      ( dvd_dvd(int,A2,D)
     => ( dvd_dvd(int,A2,plus_plus(int,Xa,Ta))
      <=> dvd_dvd(int,A2,plus_plus(int,plus_plus(int,Xa,times_times(int,C1,D)),Ta)) ) ) ).

tff(fact_47_zdvd__reduce,axiom,
    ! [Ma: int,Na: int,K1: int] :
      ( dvd_dvd(int,K1,plus_plus(int,Na,times_times(int,K1,Ma)))
    <=> dvd_dvd(int,K1,Na) ) ).

tff(fact_48_zpower__int,axiom,
    ! [N: nat,M: nat] : power_power(int,semiring_1_of_nat(int,M),N) = semiring_1_of_nat(int,power_power(nat,M,N)) ).

tff(fact_49_int__power,axiom,
    ! [N: nat,M: nat] : semiring_1_of_nat(int,power_power(nat,M,N)) = power_power(int,semiring_1_of_nat(int,M),N) ).

tff(fact_50_zadd__int__left,axiom,
    ! [Z: int,N: nat,M: nat] : plus_plus(int,semiring_1_of_nat(int,M),plus_plus(int,semiring_1_of_nat(int,N),Z)) = plus_plus(int,semiring_1_of_nat(int,plus_plus(nat,M,N)),Z) ).

tff(fact_51_zadd__int,axiom,
    ! [N: nat,M: nat] : plus_plus(int,semiring_1_of_nat(int,M),semiring_1_of_nat(int,N)) = semiring_1_of_nat(int,plus_plus(nat,M,N)) ).

tff(fact_52_zmult__int,axiom,
    ! [N: nat,M: nat] : times_times(int,semiring_1_of_nat(int,M),semiring_1_of_nat(int,N)) = semiring_1_of_nat(int,times_times(nat,M,N)) ).

tff(fact_53_int__mult,axiom,
    ! [N: nat,M: nat] : semiring_1_of_nat(int,times_times(nat,M,N)) = times_times(int,semiring_1_of_nat(int,M),semiring_1_of_nat(int,N)) ).

tff(fact_54_int__1,axiom,
    semiring_1_of_nat(int,one_one(nat)) = one_one(int) ).

tff(fact_55_nat__mult__2,axiom,
    ! [Z: nat] : times_times(nat,number_number_of(nat,bit0(bit1(pls))),Z) = plus_plus(nat,Z,Z) ).

tff(fact_56_nat__mult__2__right,axiom,
    ! [Z: nat] : times_times(nat,Z,number_number_of(nat,bit0(bit1(pls)))) = plus_plus(nat,Z,Z) ).

tff(fact_57_one__is__num__one,axiom,
    one_one(int) = number_number_of(int,bit1(pls)) ).

tff(fact_58_Numeral1__eq1__nat,axiom,
    one_one(nat) = number_number_of(nat,bit1(pls)) ).

tff(fact_59_number__of__reorient,axiom,
    ! [A1: $tType] :
      ( number(A1)
     => ! [Xa: A1,Wa: int] :
          ( ( number_number_of(A1,Wa) = Xa )
        <=> ( Xa = number_number_of(A1,Wa) ) ) ) ).

tff(fact_60_int__int__eq,axiom,
    ! [Na: nat,Ma: nat] :
      ( ( semiring_1_of_nat(int,Ma) = semiring_1_of_nat(int,Na) )
    <=> ( Ma = Na ) ) ).

tff(fact_61_power__even__eq,axiom,
    ! [A1: $tType] :
      ( monoid_mult(A1)
     => ! [N: nat,A: A1] : power_power(A1,A,times_times(nat,number_number_of(nat,bit0(bit1(pls))),N)) = power_power(A1,power_power(A1,A,N),number_number_of(nat,bit0(bit1(pls)))) ) ).

tff(fact_62_zadd__power3,axiom,
    ! [B: int,A: int] : power_power(int,plus_plus(int,A,B),number_number_of(nat,bit1(bit1(pls)))) = plus_plus(int,plus_plus(int,plus_plus(int,power_power(int,A,number_number_of(nat,bit1(bit1(pls)))),times_times(int,times_times(int,number_number_of(int,bit1(bit1(pls))),power_power(int,A,number_number_of(nat,bit0(bit1(pls))))),B)),times_times(int,times_times(int,number_number_of(int,bit1(bit1(pls))),A),power_power(int,B,number_number_of(nat,bit0(bit1(pls)))))),power_power(int,B,number_number_of(nat,bit1(bit1(pls))))) ).

tff(fact_63_zadd__power2,axiom,
    ! [B: int,A: int] : power_power(int,plus_plus(int,A,B),number_number_of(nat,bit0(bit1(pls)))) = plus_plus(int,plus_plus(int,power_power(int,A,number_number_of(nat,bit0(bit1(pls)))),times_times(int,times_times(int,number_number_of(int,bit0(bit1(pls))),A),B)),power_power(int,B,number_number_of(nat,bit0(bit1(pls))))) ).

tff(fact_64_zdiff__power3,axiom,
    ! [B: int,A: int] : power_power(int,minus_minus(int,A,B),number_number_of(nat,bit1(bit1(pls)))) = minus_minus(int,plus_plus(int,minus_minus(int,power_power(int,A,number_number_of(nat,bit1(bit1(pls)))),times_times(int,times_times(int,number_number_of(int,bit1(bit1(pls))),power_power(int,A,number_number_of(nat,bit0(bit1(pls))))),B)),times_times(int,times_times(int,number_number_of(int,bit1(bit1(pls))),A),power_power(int,B,number_number_of(nat,bit0(bit1(pls)))))),power_power(int,B,number_number_of(nat,bit1(bit1(pls))))) ).

tff(fact_65_zdiff__power2,axiom,
    ! [B: int,A: int] : power_power(int,minus_minus(int,A,B),number_number_of(nat,bit0(bit1(pls)))) = plus_plus(int,minus_minus(int,power_power(int,A,number_number_of(nat,bit0(bit1(pls)))),times_times(int,times_times(int,number_number_of(int,bit0(bit1(pls))),A),B)),power_power(int,B,number_number_of(nat,bit0(bit1(pls))))) ).

tff(fact_66_add__Pls__right,axiom,
    ! [K: int] : plus_plus(int,K,pls) = K ).

tff(fact_67_add__Pls,axiom,
    ! [K: int] : plus_plus(int,pls,K) = K ).

tff(fact_68_Bit0__def,axiom,
    ! [K: int] : bit0(K) = plus_plus(int,K,K) ).

tff(fact_69_int__distrib_I1_J,axiom,
    ! [W: int,Z2: int,Z1: int] : times_times(int,plus_plus(int,Z1,Z2),W) = plus_plus(int,times_times(int,Z1,W),times_times(int,Z2,W)) ).

tff(fact_70_int__distrib_I2_J,axiom,
    ! [Z2: int,Z1: int,W: int] : times_times(int,W,plus_plus(int,Z1,Z2)) = plus_plus(int,times_times(int,W,Z1),times_times(int,W,Z2)) ).

tff(fact_71_diff__bin__simps_I1_J,axiom,
    ! [K: int] : minus_minus(int,K,pls) = K ).

tff(fact_72_int__distrib_I3_J,axiom,
    ! [W: int,Z2: int,Z1: int] : times_times(int,minus_minus(int,Z1,Z2),W) = minus_minus(int,times_times(int,Z1,W),times_times(int,Z2,W)) ).

tff(fact_73_int__distrib_I4_J,axiom,
    ! [Z2: int,Z1: int,W: int] : times_times(int,W,minus_minus(int,Z1,Z2)) = minus_minus(int,times_times(int,W,Z1),times_times(int,W,Z2)) ).

tff(fact_74_add__numeral__0,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [A: A1] : plus_plus(A1,number_number_of(A1,pls),A) = A ) ).

tff(fact_75_add__numeral__0__right,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [A: A1] : plus_plus(A1,A,number_number_of(A1,pls)) = A ) ).

tff(fact_76_number__of__mult,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [W: int,V: int] : number_number_of(A1,times_times(int,V,W)) = times_times(A1,number_number_of(A1,V),number_number_of(A1,W)) ) ).

tff(fact_77_number__of__add,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [W: int,V: int] : number_number_of(A1,plus_plus(int,V,W)) = plus_plus(A1,number_number_of(A1,V),number_number_of(A1,W)) ) ).

tff(fact_78_number__of__diff,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [W: int,V: int] : number_number_of(A1,minus_minus(int,V,W)) = minus_minus(A1,number_number_of(A1,V),number_number_of(A1,W)) ) ).

tff(fact_79_Bit1__def,axiom,
    ! [K: int] : bit1(K) = plus_plus(int,plus_plus(int,one_one(int),K),K) ).

tff(fact_80_number__of__int,axiom,
    ! [A1: $tType] :
      ( number_semiring(A1)
     => ! [N: nat] : number_number_of(A1,semiring_1_of_nat(int,N)) = semiring_1_of_nat(A1,N) ) ).

tff(fact_81_number__of__Bit1,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [W: int] : number_number_of(A1,bit1(W)) = plus_plus(A1,plus_plus(A1,one_one(A1),number_number_of(A1,W)),number_number_of(A1,W)) ) ).

tff(fact_82_mult__numeral__1,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [A: A1] : times_times(A1,number_number_of(A1,bit1(pls)),A) = A ) ).

tff(fact_83_mult__numeral__1__right,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [A: A1] : times_times(A1,A,number_number_of(A1,bit1(pls))) = A ) ).

tff(fact_84_semiring__numeral__1__eq__1,axiom,
    ! [A1: $tType] :
      ( number_semiring(A1)
     => ( number_number_of(A1,bit1(pls)) = one_one(A1) ) ) ).

tff(fact_85_semiring__norm_I110_J,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ( one_one(A1) = number_number_of(A1,bit1(pls)) ) ) ).

tff(fact_86_add__number__of__diff1,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [C: A1,W: int,V: int] : plus_plus(A1,number_number_of(A1,V),minus_minus(A1,number_number_of(A1,W),C)) = minus_minus(A1,number_number_of(A1,plus_plus(int,V,W)),C) ) ).

tff(fact_87_double__number__of__Bit0,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [W: int] : times_times(A1,plus_plus(A1,one_one(A1),one_one(A1)),number_number_of(A1,W)) = number_number_of(A1,bit0(W)) ) ).

tff(fact_88_power3__eq__cube,axiom,
    ! [A1: $tType] :
      ( monoid_mult(A1)
     => ! [A: A1] : power_power(A1,A,number_number_of(nat,bit1(bit1(pls)))) = times_times(A1,times_times(A1,A,A),A) ) ).

tff(fact_89_quartic__square__square,axiom,
    ! [X: int] : power_power(int,power_power(int,X,number_number_of(nat,bit0(bit1(pls)))),number_number_of(nat,bit0(bit1(pls)))) = power_power(int,X,number_number_of(nat,bit0(bit0(bit1(pls))))) ).

tff(fact_90_semiring__mult__2,axiom,
    ! [A1: $tType] :
      ( number_semiring(A1)
     => ! [Z: A1] : times_times(A1,number_number_of(A1,bit0(bit1(pls))),Z) = plus_plus(A1,Z,Z) ) ).

tff(fact_91_mult__2,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [Z: A1] : times_times(A1,number_number_of(A1,bit0(bit1(pls))),Z) = plus_plus(A1,Z,Z) ) ).

tff(fact_92_semiring__mult__2__right,axiom,
    ! [A1: $tType] :
      ( number_semiring(A1)
     => ! [Z: A1] : times_times(A1,Z,number_number_of(A1,bit0(bit1(pls)))) = plus_plus(A1,Z,Z) ) ).

tff(fact_93_mult__2__right,axiom,
    ! [A1: $tType] :
      ( number_ring(A1)
     => ! [Z: A1] : times_times(A1,Z,number_number_of(A1,bit0(bit1(pls)))) = plus_plus(A1,Z,Z) ) ).

tff(fact_94_semiring__one__add__one__is__two,axiom,
    ! [A1: $tType] :
      ( number_semiring(A1)
     => ( plus_plus(A1,one_one(A1),one_one(A1)) = number_number_of(A1,bit0(bit1(pls))) ) ) ).

tff(fact_95_power2__eq__square,axiom,
    ! [A1: $tType] :
      ( monoid_mult(A1)
     => ! [A: A1] : power_power(A1,A,number_number_of(nat,bit0(bit1(pls)))) = times_times(A1,A,A) ) ).

tff(fact_96_cube__square,axiom,
    ! [A: int] : times_times(int,A,power_power(int,A,number_number_of(nat,bit0(bit1(pls))))) = power_power(int,A,number_number_of(nat,bit1(bit1(pls)))) ).

tff(fact_97_calculation,axiom,
    times_times(int,times_times(int,plus_plus(int,times_times(int,number_number_of(int,bit0(bit0(bit1(pls)))),m),one_one(int)),plus_plus(int,one_one(int),semiring_1_of_nat(int,n))),plus_plus(int,power_power(int,v,number_number_of(nat,bit0(bit1(pls)))),power_power(int,w,number_number_of(nat,bit0(bit1(pls)))))) = plus_plus(int,power_power(int,plus_plus(int,times_times(int,plus_plus(int,times_times(int,r,plus_plus(int,one_one(int),semiring_1_of_nat(int,n))),v),v),times_times(int,plus_plus(int,times_times(int,sa,plus_plus(int,one_one(int),semiring_1_of_nat(int,n))),w),w)),number_number_of(nat,bit0(bit1(pls)))),power_power(int,minus_minus(int,times_times(int,plus_plus(int,times_times(int,r,plus_plus(int,one_one(int),semiring_1_of_nat(int,n))),v),w),times_times(int,plus_plus(int,times_times(int,sa,plus_plus(int,one_one(int),semiring_1_of_nat(int,n))),w),v)),number_number_of(nat,bit0(bit1(pls))))) ).

%----Arities (13)
tff(arity_Int_Oint___Int_Onumber__semiring,axiom,
    number_semiring(int) ).

tff(arity_Int_Oint___Groups_Omonoid__mult,axiom,
    monoid_mult(int) ).

tff(arity_Int_Oint___Rings_Osemiring__1,axiom,
    semiring_1(int) ).

tff(arity_Int_Oint___Int_Oring__char__0,axiom,
    ring_char_0(int) ).

tff(arity_Int_Oint___Int_Onumber__ring,axiom,
    number_ring(int) ).

tff(arity_Int_Oint___Rings_Osemiring,axiom,
    semiring(int) ).

tff(arity_Int_Oint___Rings_Oring,axiom,
    ring(int) ).

tff(arity_Int_Oint___Int_Onumber,axiom,
    number(int) ).

tff(arity_Nat_Onat___Int_Onumber__semiring,axiom,
    number_semiring(nat) ).

tff(arity_Nat_Onat___Groups_Omonoid__mult,axiom,
    monoid_mult(nat) ).

tff(arity_Nat_Onat___Rings_Osemiring__1,axiom,
    semiring_1(nat) ).

tff(arity_Nat_Onat___Rings_Osemiring,axiom,
    semiring(nat) ).

tff(arity_Nat_Onat___Int_Onumber,axiom,
    number(nat) ).

%----Helper facts (2)
tff(help_pp_1_1_U,axiom,
    ~ pp(fFalse) ).

tff(help_pp_2_1_U,axiom,
    pp(fTrue) ).

%----Conjectures (1)
tff(conj_0,conjecture,
    plus_plus(int,power_power(int,plus_plus(int,times_times(int,plus_plus(int,times_times(int,r,plus_plus(int,one_one(int),semiring_1_of_nat(int,n))),v),v),times_times(int,plus_plus(int,times_times(int,sa,plus_plus(int,one_one(int),semiring_1_of_nat(int,n))),w),w)),number_number_of(nat,bit0(bit1(pls)))),power_power(int,minus_minus(int,times_times(int,plus_plus(int,times_times(int,r,plus_plus(int,one_one(int),semiring_1_of_nat(int,n))),v),w),times_times(int,plus_plus(int,times_times(int,sa,plus_plus(int,one_one(int),semiring_1_of_nat(int,n))),w),v)),number_number_of(nat,bit0(bit1(pls))))) = plus_plus(int,power_power(int,plus_plus(int,plus_plus(int,times_times(int,plus_plus(int,one_one(int),semiring_1_of_nat(int,n)),times_times(int,r,v)),times_times(int,plus_plus(int,one_one(int),semiring_1_of_nat(int,n)),times_times(int,sa,w))),plus_plus(int,power_power(int,v,number_number_of(nat,bit0(bit1(pls)))),power_power(int,w,number_number_of(nat,bit0(bit1(pls)))))),number_number_of(nat,bit0(bit1(pls)))),power_power(int,minus_minus(int,times_times(int,plus_plus(int,one_one(int),semiring_1_of_nat(int,n)),times_times(int,r,w)),times_times(int,plus_plus(int,one_one(int),semiring_1_of_nat(int,n)),times_times(int,sa,v))),number_number_of(nat,bit0(bit1(pls))))) ).

%------------------------------------------------------------------------------
