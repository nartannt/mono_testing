%------------------------------------------------------------------------------
% File     : ITP158^2 : TPTP v8.2.0. Released v7.5.0.
% Domain   : Interactive Theorem Proving
% Problem  : Sledgehammer Prover problem prob_480__3258466_1
% Version  : Especial.
% English  :

% Refs     : [BH+15] Blanchette et al. (2015), Mining the Archive of Formal
%          : [Des21] Desharnais (2021), Email to Geoff Sutcliffe
% Source   : [Des21]
% Names    : Prover/prob_480__3258466_1 [Des21]

% Status   : Theorem
% Rating   : 0.67 v8.1.0, 0.75 v7.5.0
% Syntax   : Number of formulae    :  329 ( 136 unt;  62 typ;   0 def)
%            Number of atoms       :  659 ( 401 equ;   0 cnn)
%            Maximal formula atoms :    7 (   2 avg)
%            Number of connectives : 6098 ( 145   ~;  26   |;  82   &;5557   @)
%                                         (   0 <=>; 288  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   28 (   9 avg)
%            Number of types       :    4 (   3 usr)
%            Number of type conns  :  259 ( 259   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :   62 (  59 usr;   6 con; 0-5 aty)
%            Number of variables   : 1312 (  14   ^;1171   !;  77   ?;1312   :)
%                                         (  50  !>;   0  ?*;   0  @-;   0  @+)
% SPC      : TH1_THM_EQU_NAR

% Comments : This file was generated by Sledgehammer 2021-02-23 16:20:06.928
%------------------------------------------------------------------------------
% Could-be-implicit typings (6)
thf(ty_t_Prover__Mirabelle__xkffrtyxot_Oform,type,
    prover2006609834e_form: $tType ).

thf(ty_t_Prover__Mirabelle__xkffrtyxot_OU,type,
    prover_Mirabelle_U: $tType ).

thf(ty_t_Product__Type_Oprod,type,
    product_prod: $tType > $tType > $tType ).

thf(ty_t_List_Olist,type,
    list: $tType > $tType ).

thf(ty_t_Set_Oset,type,
    set: $tType > $tType ).

thf(ty_t_Nat_Onat,type,
    nat: $tType ).

% Explicit typings (56)
thf(sy_cl_HOL_Otype,type,
    type: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Oord,type,
    ord: 
      !>[A: $tType] : $o ).

thf(sy_cl_Orderings_Olinorder,type,
    linorder: 
      !>[A: $tType] : $o ).

thf(sy_c_Groups_Ozero__class_Ozero,type,
    zero_zero: 
      !>[A: $tType] : A ).

thf(sy_c_If,type,
    if: 
      !>[A: $tType] : ( $o > A > A > A ) ).

thf(sy_c_List_Oappend,type,
    append: 
      !>[A: $tType] : ( ( list @ A ) > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Obind,type,
    bind: 
      !>[A: $tType,B: $tType] : ( ( list @ A ) > ( A > ( list @ B ) ) > ( list @ B ) ) ).

thf(sy_c_List_Obutlast,type,
    butlast: 
      !>[A: $tType] : ( ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Ocan__select,type,
    can_select: 
      !>[A: $tType] : ( ( A > $o ) > ( set @ A ) > $o ) ).

thf(sy_c_List_Oconcat,type,
    concat: 
      !>[A: $tType] : ( ( list @ ( list @ A ) ) > ( list @ A ) ) ).

thf(sy_c_List_Ocount__list,type,
    count_list: 
      !>[A: $tType] : ( ( list @ A ) > A > nat ) ).

thf(sy_c_List_Ogen__length,type,
    gen_length: 
      !>[A: $tType] : ( nat > ( list @ A ) > nat ) ).

thf(sy_c_List_Oinsert,type,
    insert: 
      !>[A: $tType] : ( A > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Olast,type,
    last: 
      !>[A: $tType] : ( ( list @ A ) > A ) ).

thf(sy_c_List_Olenlex,type,
    lenlex: 
      !>[A: $tType] : ( ( set @ ( product_prod @ A @ A ) ) > ( set @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) ) ) ).

thf(sy_c_List_Olex,type,
    lex: 
      !>[A: $tType] : ( ( set @ ( product_prod @ A @ A ) ) > ( set @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) ) ) ).

thf(sy_c_List_Olexord,type,
    lexord: 
      !>[A: $tType] : ( ( set @ ( product_prod @ A @ A ) ) > ( set @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) ) ) ).

thf(sy_c_List_Olist_OCons,type,
    cons: 
      !>[A: $tType] : ( A > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Olist_ONil,type,
    nil: 
      !>[A: $tType] : ( list @ A ) ).

thf(sy_c_List_Olist_Oset,type,
    set2: 
      !>[A: $tType] : ( ( list @ A ) > ( set @ A ) ) ).

thf(sy_c_List_Olist__ex1,type,
    list_ex1: 
      !>[A: $tType] : ( ( A > $o ) > ( list @ A ) > $o ) ).

thf(sy_c_List_Olist__update,type,
    list_update: 
      !>[A: $tType] : ( ( list @ A ) > nat > A > ( list @ A ) ) ).

thf(sy_c_List_Olistrel,type,
    listrel: 
      !>[A: $tType,B: $tType] : ( ( set @ ( product_prod @ A @ B ) ) > ( set @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) ) ) ).

thf(sy_c_List_Olistrel1,type,
    listrel1: 
      !>[A: $tType] : ( ( set @ ( product_prod @ A @ A ) ) > ( set @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) ) ) ).

thf(sy_c_List_Omaps,type,
    maps: 
      !>[A: $tType,B: $tType] : ( ( A > ( list @ B ) ) > ( list @ A ) > ( list @ B ) ) ).

thf(sy_c_List_Omeasures,type,
    measures: 
      !>[A: $tType] : ( ( list @ ( A > nat ) ) > ( set @ ( product_prod @ A @ A ) ) ) ).

thf(sy_c_List_On__lists,type,
    n_lists: 
      !>[A: $tType] : ( nat > ( list @ A ) > ( list @ ( list @ A ) ) ) ).

thf(sy_c_List_Onth,type,
    nth: 
      !>[A: $tType] : ( ( list @ A ) > nat > A ) ).

thf(sy_c_List_Oproduct__lists,type,
    product_lists: 
      !>[A: $tType] : ( ( list @ ( list @ A ) ) > ( list @ ( list @ A ) ) ) ).

thf(sy_c_List_Orotate1,type,
    rotate1: 
      !>[A: $tType] : ( ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_List_Osubseqs,type,
    subseqs: 
      !>[A: $tType] : ( ( list @ A ) > ( list @ ( list @ A ) ) ) ).

thf(sy_c_List_Otake,type,
    take: 
      !>[A: $tType] : ( nat > ( list @ A ) > ( list @ A ) ) ).

thf(sy_c_Nat_Osize__class_Osize,type,
    size_size: 
      !>[A: $tType] : ( A > nat ) ).

thf(sy_c_Orderings_Oord__class_Oless,type,
    ord_less: 
      !>[A: $tType] : ( A > A > $o ) ).

thf(sy_c_Product__Type_OPair,type,
    product_Pair: 
      !>[A: $tType,B: $tType] : ( A > B > ( product_prod @ A @ B ) ) ).

thf(sy_c_Product__Type_Ointernal__case__prod,type,
    produc2004651681e_prod: 
      !>[A: $tType,B: $tType,C: $tType] : ( ( A > B > C ) > ( product_prod @ A @ B ) > C ) ).

thf(sy_c_Product__Type_Oold_Oprod_Orec__prod,type,
    product_rec_prod: 
      !>[A: $tType,B: $tType,T: $tType] : ( ( A > B > T ) > ( product_prod @ A @ B ) > T ) ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_OSEval,type,
    prover1899965912_SEval: ( product_prod @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o ) ) > ( nat > prover_Mirabelle_U ) > ( list @ prover2006609834e_form ) > $o ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_OSvalid,type,
    prover1090191840Svalid: ( list @ prover2006609834e_form ) > $o ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_Ofinst,type,
    prover48307765_finst: prover2006609834e_form > nat > prover2006609834e_form ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_Oflatten,type,
    prover12291693latten: 
      !>[A: $tType] : ( ( list @ ( list @ A ) ) > ( list @ A ) ) ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_Oform_OFAll,type,
    prover946642470e_FAll: prover2006609834e_form > prover2006609834e_form ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_Ofv,type,
    prover_Mirabelle_fv: prover2006609834e_form > ( list @ nat ) ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_Ois__env,type,
    prover1043414700is_env: ( product_prod @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o ) ) > ( nat > prover_Mirabelle_U ) > $o ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_Omaxvar,type,
    prover572158330maxvar: ( list @ nat ) > nat ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_OpreSuc,type,
    prover1646808149preSuc: ( list @ nat ) > ( list @ nat ) ).

thf(sy_c_Prover__Mirabelle__xkffrtyxot_Osfv,type,
    prover_Mirabelle_sfv: ( list @ prover2006609834e_form ) > ( list @ nat ) ).

thf(sy_c_Relation_Oirrefl,type,
    irrefl: 
      !>[A: $tType] : ( ( set @ ( product_prod @ A @ A ) ) > $o ) ).

thf(sy_c_Set_OCollect,type,
    collect: 
      !>[A: $tType] : ( ( A > $o ) > ( set @ A ) ) ).

thf(sy_c_Set_Othe__elem,type,
    the_elem: 
      !>[A: $tType] : ( ( set @ A ) > A ) ).

thf(sy_c_member,type,
    member: 
      !>[A: $tType] : ( A > ( set @ A ) > $o ) ).

thf(sy_v_a,type,
    a: set @ prover_Mirabelle_U ).

thf(sy_v_b,type,
    b: nat > ( list @ prover_Mirabelle_U ) > $o ).

thf(sy_v_f,type,
    f: prover2006609834e_form ).

thf(sy_v_s,type,
    s: list @ prover2006609834e_form ).

thf(sy_v_u,type,
    u: nat ).

% Relevant facts (255)
thf(fact_0_form_Oinject_I5_J,axiom,
    ! [X5: prover2006609834e_form,Y5: prover2006609834e_form] :
      ( ( ( prover946642470e_FAll @ X5 )
        = ( prover946642470e_FAll @ Y5 ) )
      = ( X5 = Y5 ) ) ).

% form.inject(5)
thf(fact_1_SEval_Osimps_I1_J,axiom,
    ! [M: product_prod @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o ),E: nat > prover_Mirabelle_U] :
      ~ ( prover1899965912_SEval @ M @ E @ ( nil @ prover2006609834e_form ) ) ).

% SEval.simps(1)
thf(fact_2_SEval__cong,axiom,
    ! [S: list @ prover2006609834e_form,E1: nat > prover_Mirabelle_U,E2: nat > prover_Mirabelle_U,M: product_prod @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o )] :
      ( ! [X: nat] :
          ( ( member @ nat @ X @ ( set2 @ nat @ ( prover_Mirabelle_sfv @ S ) ) )
         => ( ( E1 @ X )
            = ( E2 @ X ) ) )
     => ( ( prover1899965912_SEval @ M @ E1 @ S )
        = ( prover1899965912_SEval @ M @ E2 @ S ) ) ) ).

% SEval_cong
thf(fact_3_SEval__append,axiom,
    ! [M: product_prod @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o ),E: nat > prover_Mirabelle_U,Xs: list @ prover2006609834e_form,Ys: list @ prover2006609834e_form] :
      ( ( prover1899965912_SEval @ M @ E @ ( append @ prover2006609834e_form @ Xs @ Ys ) )
      = ( ( prover1899965912_SEval @ M @ E @ Xs )
        | ( prover1899965912_SEval @ M @ E @ Ys ) ) ) ).

% SEval_append
thf(fact_4_sound__FAll,axiom,
    ! [U: nat,F: prover2006609834e_form,S: list @ prover2006609834e_form] :
      ( ~ ( member @ nat @ U @ ( set2 @ nat @ ( prover_Mirabelle_sfv @ ( cons @ prover2006609834e_form @ ( prover946642470e_FAll @ F ) @ S ) ) ) )
     => ( ( prover1090191840Svalid @ ( append @ prover2006609834e_form @ S @ ( cons @ prover2006609834e_form @ ( prover48307765_finst @ F @ U ) @ ( nil @ prover2006609834e_form ) ) ) )
       => ( prover1090191840Svalid @ ( cons @ prover2006609834e_form @ ( prover946642470e_FAll @ F ) @ S ) ) ) ) ).

% sound_FAll
thf(fact_5_append1__eq__conv,axiom,
    ! [A: $tType,Xs: list @ A,X2: A,Ys: list @ A,Y: A] :
      ( ( ( append @ A @ Xs @ ( cons @ A @ X2 @ ( nil @ A ) ) )
        = ( append @ A @ Ys @ ( cons @ A @ Y @ ( nil @ A ) ) ) )
      = ( ( Xs = Ys )
        & ( X2 = Y ) ) ) ).

% append1_eq_conv
thf(fact_6_append__Nil2,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( append @ A @ Xs @ ( nil @ A ) )
      = Xs ) ).

% append_Nil2
thf(fact_7_append__self__conv,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( ( append @ A @ Xs @ Ys )
        = Xs )
      = ( Ys
        = ( nil @ A ) ) ) ).

% append_self_conv
thf(fact_8_self__append__conv,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( Xs
        = ( append @ A @ Xs @ Ys ) )
      = ( Ys
        = ( nil @ A ) ) ) ).

% self_append_conv
thf(fact_9_append__self__conv2,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( ( append @ A @ Xs @ Ys )
        = Ys )
      = ( Xs
        = ( nil @ A ) ) ) ).

% append_self_conv2
thf(fact_10_self__append__conv2,axiom,
    ! [A: $tType,Ys: list @ A,Xs: list @ A] :
      ( ( Ys
        = ( append @ A @ Xs @ Ys ) )
      = ( Xs
        = ( nil @ A ) ) ) ).

% self_append_conv2
thf(fact_11_Nil__is__append__conv,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( ( nil @ A )
        = ( append @ A @ Xs @ Ys ) )
      = ( ( Xs
          = ( nil @ A ) )
        & ( Ys
          = ( nil @ A ) ) ) ) ).

% Nil_is_append_conv
thf(fact_12_append__is__Nil__conv,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( ( append @ A @ Xs @ Ys )
        = ( nil @ A ) )
      = ( ( Xs
          = ( nil @ A ) )
        & ( Ys
          = ( nil @ A ) ) ) ) ).

% append_is_Nil_conv
thf(fact_13_append_Oright__neutral,axiom,
    ! [A: $tType,A2: list @ A] :
      ( ( append @ A @ A2 @ ( nil @ A ) )
      = A2 ) ).

% append.right_neutral
thf(fact_14_Svalid__def,axiom,
    ( prover1090191840Svalid
    = ( ^ [S2: list @ prover2006609834e_form] :
        ! [MI: product_prod @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o ),E3: nat > prover_Mirabelle_U] :
          ( ( prover1043414700is_env @ MI @ E3 )
         => ( prover1899965912_SEval @ MI @ E3 @ S2 ) ) ) ) ).

% Svalid_def
thf(fact_15_split__list,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ? [Ys2: list @ A,Zs: list @ A] :
          ( Xs
          = ( append @ A @ Ys2 @ ( cons @ A @ X2 @ Zs ) ) ) ) ).

% split_list
thf(fact_16_list_Oinject,axiom,
    ! [A: $tType,X21: A,X22: list @ A,Y21: A,Y22: list @ A] :
      ( ( ( cons @ A @ X21 @ X22 )
        = ( cons @ A @ Y21 @ Y22 ) )
      = ( ( X21 = Y21 )
        & ( X22 = Y22 ) ) ) ).

% list.inject
thf(fact_17_same__append__eq,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Zs2: list @ A] :
      ( ( ( append @ A @ Xs @ Ys )
        = ( append @ A @ Xs @ Zs2 ) )
      = ( Ys = Zs2 ) ) ).

% same_append_eq
thf(fact_18_append__same__eq,axiom,
    ! [A: $tType,Ys: list @ A,Xs: list @ A,Zs2: list @ A] :
      ( ( ( append @ A @ Ys @ Xs )
        = ( append @ A @ Zs2 @ Xs ) )
      = ( Ys = Zs2 ) ) ).

% append_same_eq
thf(fact_19_append__assoc,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Zs2: list @ A] :
      ( ( append @ A @ ( append @ A @ Xs @ Ys ) @ Zs2 )
      = ( append @ A @ Xs @ ( append @ A @ Ys @ Zs2 ) ) ) ).

% append_assoc
thf(fact_20_append_Oassoc,axiom,
    ! [A: $tType,A2: list @ A,B2: list @ A,C2: list @ A] :
      ( ( append @ A @ ( append @ A @ A2 @ B2 ) @ C2 )
      = ( append @ A @ A2 @ ( append @ A @ B2 @ C2 ) ) ) ).

% append.assoc
thf(fact_21_not__Cons__self2,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( cons @ A @ X2 @ Xs )
     != Xs ) ).

% not_Cons_self2
thf(fact_22_sfv__nil,axiom,
    ( ( prover_Mirabelle_sfv @ ( nil @ prover2006609834e_form ) )
    = ( nil @ nat ) ) ).

% sfv_nil
thf(fact_23_append__eq__append__conv2,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Zs2: list @ A,Ts: list @ A] :
      ( ( ( append @ A @ Xs @ Ys )
        = ( append @ A @ Zs2 @ Ts ) )
      = ( ? [Us: list @ A] :
            ( ( ( Xs
                = ( append @ A @ Zs2 @ Us ) )
              & ( ( append @ A @ Us @ Ys )
                = Ts ) )
            | ( ( ( append @ A @ Xs @ Us )
                = Zs2 )
              & ( Ys
                = ( append @ A @ Us @ Ts ) ) ) ) ) ) ).

% append_eq_append_conv2
thf(fact_24_append__eq__appendI,axiom,
    ! [A: $tType,Xs: list @ A,Xs1: list @ A,Zs2: list @ A,Ys: list @ A,Us2: list @ A] :
      ( ( ( append @ A @ Xs @ Xs1 )
        = Zs2 )
     => ( ( Ys
          = ( append @ A @ Xs1 @ Us2 ) )
       => ( ( append @ A @ Xs @ Ys )
          = ( append @ A @ Zs2 @ Us2 ) ) ) ) ).

% append_eq_appendI
thf(fact_25_strict__sorted_Oinduct,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [P: ( list @ A ) > $o,A0: list @ A] :
          ( ( P @ ( nil @ A ) )
         => ( ! [X: A,Ys2: list @ A] :
                ( ( P @ Ys2 )
               => ( P @ ( cons @ A @ X @ Ys2 ) ) )
           => ( P @ A0 ) ) ) ) ).

% strict_sorted.induct
thf(fact_26_strict__sorted_Ocases,axiom,
    ! [A: $tType] :
      ( ( linorder @ A )
     => ! [X2: list @ A] :
          ( ( X2
           != ( nil @ A ) )
         => ~ ! [X: A,Ys2: list @ A] :
                ( X2
               != ( cons @ A @ X @ Ys2 ) ) ) ) ).

% strict_sorted.cases
thf(fact_27_map__tailrec__rev_Oinduct,axiom,
    ! [A: $tType,B: $tType,P: ( A > B ) > ( list @ A ) > ( list @ B ) > $o,A0: A > B,A1: list @ A,A22: list @ B] :
      ( ! [F2: A > B,X_1: list @ B] : ( P @ F2 @ ( nil @ A ) @ X_1 )
     => ( ! [F2: A > B,A3: A,As: list @ A,Bs: list @ B] :
            ( ( P @ F2 @ As @ ( cons @ B @ ( F2 @ A3 ) @ Bs ) )
           => ( P @ F2 @ ( cons @ A @ A3 @ As ) @ Bs ) )
       => ( P @ A0 @ A1 @ A22 ) ) ) ).

% map_tailrec_rev.induct
thf(fact_28_list__nonempty__induct,axiom,
    ! [A: $tType,Xs: list @ A,P: ( list @ A ) > $o] :
      ( ( Xs
       != ( nil @ A ) )
     => ( ! [X: A] : ( P @ ( cons @ A @ X @ ( nil @ A ) ) )
       => ( ! [X: A,Xs2: list @ A] :
              ( ( Xs2
               != ( nil @ A ) )
             => ( ( P @ Xs2 )
               => ( P @ ( cons @ A @ X @ Xs2 ) ) ) )
         => ( P @ Xs ) ) ) ) ).

% list_nonempty_induct
thf(fact_29_successively_Oinduct,axiom,
    ! [A: $tType,P: ( A > A > $o ) > ( list @ A ) > $o,A0: A > A > $o,A1: list @ A] :
      ( ! [P2: A > A > $o] : ( P @ P2 @ ( nil @ A ) )
     => ( ! [P2: A > A > $o,X: A] : ( P @ P2 @ ( cons @ A @ X @ ( nil @ A ) ) )
       => ( ! [P2: A > A > $o,X: A,Y2: A,Xs2: list @ A] :
              ( ( P @ P2 @ ( cons @ A @ Y2 @ Xs2 ) )
             => ( P @ P2 @ ( cons @ A @ X @ ( cons @ A @ Y2 @ Xs2 ) ) ) )
         => ( P @ A0 @ A1 ) ) ) ) ).

% successively.induct
thf(fact_30_arg__min__list_Oinduct,axiom,
    ! [B: $tType,A: $tType] :
      ( ( linorder @ B )
     => ! [P: ( A > B ) > ( list @ A ) > $o,A0: A > B,A1: list @ A] :
          ( ! [F2: A > B,X: A] : ( P @ F2 @ ( cons @ A @ X @ ( nil @ A ) ) )
         => ( ! [F2: A > B,X: A,Y2: A,Zs: list @ A] :
                ( ( P @ F2 @ ( cons @ A @ Y2 @ Zs ) )
               => ( P @ F2 @ ( cons @ A @ X @ ( cons @ A @ Y2 @ Zs ) ) ) )
           => ( ! [A3: A > B] : ( P @ A3 @ ( nil @ A ) )
             => ( P @ A0 @ A1 ) ) ) ) ) ).

% arg_min_list.induct
thf(fact_31_remdups__adj_Oinduct,axiom,
    ! [A: $tType,P: ( list @ A ) > $o,A0: list @ A] :
      ( ( P @ ( nil @ A ) )
     => ( ! [X: A] : ( P @ ( cons @ A @ X @ ( nil @ A ) ) )
       => ( ! [X: A,Y2: A,Xs2: list @ A] :
              ( ( ( X = Y2 )
               => ( P @ ( cons @ A @ X @ Xs2 ) ) )
             => ( ( ( X != Y2 )
                 => ( P @ ( cons @ A @ Y2 @ Xs2 ) ) )
               => ( P @ ( cons @ A @ X @ ( cons @ A @ Y2 @ Xs2 ) ) ) ) )
         => ( P @ A0 ) ) ) ) ).

% remdups_adj.induct
thf(fact_32_sorted__wrt_Oinduct,axiom,
    ! [A: $tType,P: ( A > A > $o ) > ( list @ A ) > $o,A0: A > A > $o,A1: list @ A] :
      ( ! [P2: A > A > $o] : ( P @ P2 @ ( nil @ A ) )
     => ( ! [P2: A > A > $o,X: A,Ys2: list @ A] :
            ( ( P @ P2 @ Ys2 )
           => ( P @ P2 @ ( cons @ A @ X @ Ys2 ) ) )
       => ( P @ A0 @ A1 ) ) ) ).

% sorted_wrt.induct
thf(fact_33_remdups__adj_Ocases,axiom,
    ! [A: $tType,X2: list @ A] :
      ( ( X2
       != ( nil @ A ) )
     => ( ! [X: A] :
            ( X2
           != ( cons @ A @ X @ ( nil @ A ) ) )
       => ~ ! [X: A,Y2: A,Xs2: list @ A] :
              ( X2
             != ( cons @ A @ X @ ( cons @ A @ Y2 @ Xs2 ) ) ) ) ) ).

% remdups_adj.cases
thf(fact_34_transpose_Ocases,axiom,
    ! [A: $tType,X2: list @ ( list @ A )] :
      ( ( X2
       != ( nil @ ( list @ A ) ) )
     => ( ! [Xss: list @ ( list @ A )] :
            ( X2
           != ( cons @ ( list @ A ) @ ( nil @ A ) @ Xss ) )
       => ~ ! [X: A,Xs2: list @ A,Xss: list @ ( list @ A )] :
              ( X2
             != ( cons @ ( list @ A ) @ ( cons @ A @ X @ Xs2 ) @ Xss ) ) ) ) ).

% transpose.cases
thf(fact_35_shuffles_Oinduct,axiom,
    ! [A: $tType,P: ( list @ A ) > ( list @ A ) > $o,A0: list @ A,A1: list @ A] :
      ( ! [X_1: list @ A] : ( P @ ( nil @ A ) @ X_1 )
     => ( ! [Xs2: list @ A] : ( P @ Xs2 @ ( nil @ A ) )
       => ( ! [X: A,Xs2: list @ A,Y2: A,Ys2: list @ A] :
              ( ( P @ Xs2 @ ( cons @ A @ Y2 @ Ys2 ) )
             => ( ( P @ ( cons @ A @ X @ Xs2 ) @ Ys2 )
               => ( P @ ( cons @ A @ X @ Xs2 ) @ ( cons @ A @ Y2 @ Ys2 ) ) ) )
         => ( P @ A0 @ A1 ) ) ) ) ).

% shuffles.induct
thf(fact_36_min__list_Oinduct,axiom,
    ! [A: $tType] :
      ( ( ord @ A )
     => ! [P: ( list @ A ) > $o,A0: list @ A] :
          ( ! [X: A,Xs2: list @ A] :
              ( ! [X212: A,X222: list @ A] :
                  ( ( Xs2
                    = ( cons @ A @ X212 @ X222 ) )
                 => ( P @ Xs2 ) )
             => ( P @ ( cons @ A @ X @ Xs2 ) ) )
         => ( ( P @ ( nil @ A ) )
           => ( P @ A0 ) ) ) ) ).

% min_list.induct
thf(fact_37_min__list_Ocases,axiom,
    ! [A: $tType] :
      ( ( ord @ A )
     => ! [X2: list @ A] :
          ( ! [X: A,Xs2: list @ A] :
              ( X2
             != ( cons @ A @ X @ Xs2 ) )
         => ( X2
            = ( nil @ A ) ) ) ) ).

% min_list.cases
thf(fact_38_induct__list012,axiom,
    ! [A: $tType,P: ( list @ A ) > $o,Xs: list @ A] :
      ( ( P @ ( nil @ A ) )
     => ( ! [X: A] : ( P @ ( cons @ A @ X @ ( nil @ A ) ) )
       => ( ! [X: A,Y2: A,Zs: list @ A] :
              ( ( P @ Zs )
             => ( ( P @ ( cons @ A @ Y2 @ Zs ) )
               => ( P @ ( cons @ A @ X @ ( cons @ A @ Y2 @ Zs ) ) ) ) )
         => ( P @ Xs ) ) ) ) ).

% induct_list012
thf(fact_39_splice_Oinduct,axiom,
    ! [A: $tType,P: ( list @ A ) > ( list @ A ) > $o,A0: list @ A,A1: list @ A] :
      ( ! [X_1: list @ A] : ( P @ ( nil @ A ) @ X_1 )
     => ( ! [X: A,Xs2: list @ A,Ys2: list @ A] :
            ( ( P @ Ys2 @ Xs2 )
           => ( P @ ( cons @ A @ X @ Xs2 ) @ Ys2 ) )
       => ( P @ A0 @ A1 ) ) ) ).

% splice.induct
thf(fact_40_list__induct2_H,axiom,
    ! [A: $tType,B: $tType,P: ( list @ A ) > ( list @ B ) > $o,Xs: list @ A,Ys: list @ B] :
      ( ( P @ ( nil @ A ) @ ( nil @ B ) )
     => ( ! [X: A,Xs2: list @ A] : ( P @ ( cons @ A @ X @ Xs2 ) @ ( nil @ B ) )
       => ( ! [Y2: B,Ys2: list @ B] : ( P @ ( nil @ A ) @ ( cons @ B @ Y2 @ Ys2 ) )
         => ( ! [X: A,Xs2: list @ A,Y2: B,Ys2: list @ B] :
                ( ( P @ Xs2 @ Ys2 )
               => ( P @ ( cons @ A @ X @ Xs2 ) @ ( cons @ B @ Y2 @ Ys2 ) ) )
           => ( P @ Xs @ Ys ) ) ) ) ) ).

% list_induct2'
thf(fact_41_neq__Nil__conv,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( Xs
       != ( nil @ A ) )
      = ( ? [Y3: A,Ys3: list @ A] :
            ( Xs
            = ( cons @ A @ Y3 @ Ys3 ) ) ) ) ).

% neq_Nil_conv
thf(fact_42_list_Oinducts,axiom,
    ! [A: $tType,P: ( list @ A ) > $o,List: list @ A] :
      ( ( P @ ( nil @ A ) )
     => ( ! [X1: A,X23: list @ A] :
            ( ( P @ X23 )
           => ( P @ ( cons @ A @ X1 @ X23 ) ) )
       => ( P @ List ) ) ) ).

% list.inducts
thf(fact_43_list_Oexhaust,axiom,
    ! [A: $tType,Y: list @ A] :
      ( ( Y
       != ( nil @ A ) )
     => ~ ! [X213: A,X223: list @ A] :
            ( Y
           != ( cons @ A @ X213 @ X223 ) ) ) ).

% list.exhaust
thf(fact_44_mem__Collect__eq,axiom,
    ! [A: $tType,A2: A,P: A > $o] :
      ( ( member @ A @ A2 @ ( collect @ A @ P ) )
      = ( P @ A2 ) ) ).

% mem_Collect_eq
thf(fact_45_Collect__mem__eq,axiom,
    ! [A: $tType,A4: set @ A] :
      ( ( collect @ A
        @ ^ [X3: A] : ( member @ A @ X3 @ A4 ) )
      = A4 ) ).

% Collect_mem_eq
thf(fact_46_Collect__cong,axiom,
    ! [A: $tType,P: A > $o,Q: A > $o] :
      ( ! [X: A] :
          ( ( P @ X )
          = ( Q @ X ) )
     => ( ( collect @ A @ P )
        = ( collect @ A @ Q ) ) ) ).

% Collect_cong
thf(fact_47_ext,axiom,
    ! [B: $tType,A: $tType,F: A > B,G: A > B] :
      ( ! [X: A] :
          ( ( F @ X )
          = ( G @ X ) )
     => ( F = G ) ) ).

% ext
thf(fact_48_list_OdiscI,axiom,
    ! [A: $tType,List: list @ A,X21: A,X22: list @ A] :
      ( ( List
        = ( cons @ A @ X21 @ X22 ) )
     => ( List
       != ( nil @ A ) ) ) ).

% list.discI
thf(fact_49_list_Odistinct_I1_J,axiom,
    ! [A: $tType,X21: A,X22: list @ A] :
      ( ( nil @ A )
     != ( cons @ A @ X21 @ X22 ) ) ).

% list.distinct(1)
thf(fact_50_list_Oset__cases,axiom,
    ! [A: $tType,E: A,A2: list @ A] :
      ( ( member @ A @ E @ ( set2 @ A @ A2 ) )
     => ( ! [Z2: list @ A] :
            ( A2
           != ( cons @ A @ E @ Z2 ) )
       => ~ ! [Z1: A,Z2: list @ A] :
              ( ( A2
                = ( cons @ A @ Z1 @ Z2 ) )
             => ~ ( member @ A @ E @ ( set2 @ A @ Z2 ) ) ) ) ) ).

% list.set_cases
thf(fact_51_set__ConsD,axiom,
    ! [A: $tType,Y: A,X2: A,Xs: list @ A] :
      ( ( member @ A @ Y @ ( set2 @ A @ ( cons @ A @ X2 @ Xs ) ) )
     => ( ( Y = X2 )
        | ( member @ A @ Y @ ( set2 @ A @ Xs ) ) ) ) ).

% set_ConsD
thf(fact_52_list_Oset__intros_I1_J,axiom,
    ! [A: $tType,X21: A,X22: list @ A] : ( member @ A @ X21 @ ( set2 @ A @ ( cons @ A @ X21 @ X22 ) ) ) ).

% list.set_intros(1)
thf(fact_53_list_Oset__intros_I2_J,axiom,
    ! [A: $tType,Y: A,X22: list @ A,X21: A] :
      ( ( member @ A @ Y @ ( set2 @ A @ X22 ) )
     => ( member @ A @ Y @ ( set2 @ A @ ( cons @ A @ X21 @ X22 ) ) ) ) ).

% list.set_intros(2)
thf(fact_54_append__Cons,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Ys: list @ A] :
      ( ( append @ A @ ( cons @ A @ X2 @ Xs ) @ Ys )
      = ( cons @ A @ X2 @ ( append @ A @ Xs @ Ys ) ) ) ).

% append_Cons
thf(fact_55_Cons__eq__appendI,axiom,
    ! [A: $tType,X2: A,Xs1: list @ A,Ys: list @ A,Xs: list @ A,Zs2: list @ A] :
      ( ( ( cons @ A @ X2 @ Xs1 )
        = Ys )
     => ( ( Xs
          = ( append @ A @ Xs1 @ Zs2 ) )
       => ( ( cons @ A @ X2 @ Xs )
          = ( append @ A @ Ys @ Zs2 ) ) ) ) ).

% Cons_eq_appendI
thf(fact_56_append_Oleft__neutral,axiom,
    ! [A: $tType,A2: list @ A] :
      ( ( append @ A @ ( nil @ A ) @ A2 )
      = A2 ) ).

% append.left_neutral
thf(fact_57_append__Nil,axiom,
    ! [A: $tType,Ys: list @ A] :
      ( ( append @ A @ ( nil @ A ) @ Ys )
      = Ys ) ).

% append_Nil
thf(fact_58_eq__Nil__appendI,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( Xs = Ys )
     => ( Xs
        = ( append @ A @ ( nil @ A ) @ Ys ) ) ) ).

% eq_Nil_appendI
thf(fact_59_rev__nonempty__induct,axiom,
    ! [A: $tType,Xs: list @ A,P: ( list @ A ) > $o] :
      ( ( Xs
       != ( nil @ A ) )
     => ( ! [X: A] : ( P @ ( cons @ A @ X @ ( nil @ A ) ) )
       => ( ! [X: A,Xs2: list @ A] :
              ( ( Xs2
               != ( nil @ A ) )
             => ( ( P @ Xs2 )
               => ( P @ ( append @ A @ Xs2 @ ( cons @ A @ X @ ( nil @ A ) ) ) ) ) )
         => ( P @ Xs ) ) ) ) ).

% rev_nonempty_induct
thf(fact_60_append__eq__Cons__conv,axiom,
    ! [A: $tType,Ys: list @ A,Zs2: list @ A,X2: A,Xs: list @ A] :
      ( ( ( append @ A @ Ys @ Zs2 )
        = ( cons @ A @ X2 @ Xs ) )
      = ( ( ( Ys
            = ( nil @ A ) )
          & ( Zs2
            = ( cons @ A @ X2 @ Xs ) ) )
        | ? [Ys4: list @ A] :
            ( ( Ys
              = ( cons @ A @ X2 @ Ys4 ) )
            & ( ( append @ A @ Ys4 @ Zs2 )
              = Xs ) ) ) ) ).

% append_eq_Cons_conv
thf(fact_61_Cons__eq__append__conv,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Ys: list @ A,Zs2: list @ A] :
      ( ( ( cons @ A @ X2 @ Xs )
        = ( append @ A @ Ys @ Zs2 ) )
      = ( ( ( Ys
            = ( nil @ A ) )
          & ( ( cons @ A @ X2 @ Xs )
            = Zs2 ) )
        | ? [Ys4: list @ A] :
            ( ( ( cons @ A @ X2 @ Ys4 )
              = Ys )
            & ( Xs
              = ( append @ A @ Ys4 @ Zs2 ) ) ) ) ) ).

% Cons_eq_append_conv
thf(fact_62_rev__exhaust,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( Xs
       != ( nil @ A ) )
     => ~ ! [Ys2: list @ A,Y2: A] :
            ( Xs
           != ( append @ A @ Ys2 @ ( cons @ A @ Y2 @ ( nil @ A ) ) ) ) ) ).

% rev_exhaust
thf(fact_63_rev__induct,axiom,
    ! [A: $tType,P: ( list @ A ) > $o,Xs: list @ A] :
      ( ( P @ ( nil @ A ) )
     => ( ! [X: A,Xs2: list @ A] :
            ( ( P @ Xs2 )
           => ( P @ ( append @ A @ Xs2 @ ( cons @ A @ X @ ( nil @ A ) ) ) ) )
       => ( P @ Xs ) ) ) ).

% rev_induct
thf(fact_64_split__list__first__prop__iff,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ( ? [X3: A] :
            ( ( member @ A @ X3 @ ( set2 @ A @ Xs ) )
            & ( P @ X3 ) ) )
      = ( ? [Ys3: list @ A,X3: A] :
            ( ? [Zs3: list @ A] :
                ( Xs
                = ( append @ A @ Ys3 @ ( cons @ A @ X3 @ Zs3 ) ) )
            & ( P @ X3 )
            & ! [Y3: A] :
                ( ( member @ A @ Y3 @ ( set2 @ A @ Ys3 ) )
               => ~ ( P @ Y3 ) ) ) ) ) ).

% split_list_first_prop_iff
thf(fact_65_split__list__last__prop__iff,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ( ? [X3: A] :
            ( ( member @ A @ X3 @ ( set2 @ A @ Xs ) )
            & ( P @ X3 ) ) )
      = ( ? [Ys3: list @ A,X3: A,Zs3: list @ A] :
            ( ( Xs
              = ( append @ A @ Ys3 @ ( cons @ A @ X3 @ Zs3 ) ) )
            & ( P @ X3 )
            & ! [Y3: A] :
                ( ( member @ A @ Y3 @ ( set2 @ A @ Zs3 ) )
               => ~ ( P @ Y3 ) ) ) ) ) ).

% split_list_last_prop_iff
thf(fact_66_in__set__conv__decomp__first,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
      = ( ? [Ys3: list @ A,Zs3: list @ A] :
            ( ( Xs
              = ( append @ A @ Ys3 @ ( cons @ A @ X2 @ Zs3 ) ) )
            & ~ ( member @ A @ X2 @ ( set2 @ A @ Ys3 ) ) ) ) ) ).

% in_set_conv_decomp_first
thf(fact_67_in__set__conv__decomp__last,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
      = ( ? [Ys3: list @ A,Zs3: list @ A] :
            ( ( Xs
              = ( append @ A @ Ys3 @ ( cons @ A @ X2 @ Zs3 ) ) )
            & ~ ( member @ A @ X2 @ ( set2 @ A @ Zs3 ) ) ) ) ) ).

% in_set_conv_decomp_last
thf(fact_68_split__list__first__propE,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X4: A] :
          ( ( member @ A @ X4 @ ( set2 @ A @ Xs ) )
          & ( P @ X4 ) )
     => ~ ! [Ys2: list @ A,X: A] :
            ( ? [Zs: list @ A] :
                ( Xs
                = ( append @ A @ Ys2 @ ( cons @ A @ X @ Zs ) ) )
           => ( ( P @ X )
             => ~ ! [Xa: A] :
                    ( ( member @ A @ Xa @ ( set2 @ A @ Ys2 ) )
                   => ~ ( P @ Xa ) ) ) ) ) ).

% split_list_first_propE
thf(fact_69_split__list__last__propE,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X4: A] :
          ( ( member @ A @ X4 @ ( set2 @ A @ Xs ) )
          & ( P @ X4 ) )
     => ~ ! [Ys2: list @ A,X: A,Zs: list @ A] :
            ( ( Xs
              = ( append @ A @ Ys2 @ ( cons @ A @ X @ Zs ) ) )
           => ( ( P @ X )
             => ~ ! [Xa: A] :
                    ( ( member @ A @ Xa @ ( set2 @ A @ Zs ) )
                   => ~ ( P @ Xa ) ) ) ) ) ).

% split_list_last_propE
thf(fact_70_split__list__first__prop,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X4: A] :
          ( ( member @ A @ X4 @ ( set2 @ A @ Xs ) )
          & ( P @ X4 ) )
     => ? [Ys2: list @ A,X: A] :
          ( ? [Zs: list @ A] :
              ( Xs
              = ( append @ A @ Ys2 @ ( cons @ A @ X @ Zs ) ) )
          & ( P @ X )
          & ! [Xa: A] :
              ( ( member @ A @ Xa @ ( set2 @ A @ Ys2 ) )
             => ~ ( P @ Xa ) ) ) ) ).

% split_list_first_prop
thf(fact_71_split__list__last__prop,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X4: A] :
          ( ( member @ A @ X4 @ ( set2 @ A @ Xs ) )
          & ( P @ X4 ) )
     => ? [Ys2: list @ A,X: A,Zs: list @ A] :
          ( ( Xs
            = ( append @ A @ Ys2 @ ( cons @ A @ X @ Zs ) ) )
          & ( P @ X )
          & ! [Xa: A] :
              ( ( member @ A @ Xa @ ( set2 @ A @ Zs ) )
             => ~ ( P @ Xa ) ) ) ) ).

% split_list_last_prop
thf(fact_72_in__set__conv__decomp,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
      = ( ? [Ys3: list @ A,Zs3: list @ A] :
            ( Xs
            = ( append @ A @ Ys3 @ ( cons @ A @ X2 @ Zs3 ) ) ) ) ) ).

% in_set_conv_decomp
thf(fact_73_append__Cons__eq__iff,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Ys: list @ A,Xs3: list @ A,Ys5: list @ A] :
      ( ~ ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ( ~ ( member @ A @ X2 @ ( set2 @ A @ Ys ) )
       => ( ( ( append @ A @ Xs @ ( cons @ A @ X2 @ Ys ) )
            = ( append @ A @ Xs3 @ ( cons @ A @ X2 @ Ys5 ) ) )
          = ( ( Xs = Xs3 )
            & ( Ys = Ys5 ) ) ) ) ) ).

% append_Cons_eq_iff
thf(fact_74_split__list__propE,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X4: A] :
          ( ( member @ A @ X4 @ ( set2 @ A @ Xs ) )
          & ( P @ X4 ) )
     => ~ ! [Ys2: list @ A,X: A] :
            ( ? [Zs: list @ A] :
                ( Xs
                = ( append @ A @ Ys2 @ ( cons @ A @ X @ Zs ) ) )
           => ~ ( P @ X ) ) ) ).

% split_list_propE
thf(fact_75_split__list__first,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ? [Ys2: list @ A,Zs: list @ A] :
          ( ( Xs
            = ( append @ A @ Ys2 @ ( cons @ A @ X2 @ Zs ) ) )
          & ~ ( member @ A @ X2 @ ( set2 @ A @ Ys2 ) ) ) ) ).

% split_list_first
thf(fact_76_split__list__prop,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ? [X4: A] :
          ( ( member @ A @ X4 @ ( set2 @ A @ Xs ) )
          & ( P @ X4 ) )
     => ? [Ys2: list @ A,X: A] :
          ( ? [Zs: list @ A] :
              ( Xs
              = ( append @ A @ Ys2 @ ( cons @ A @ X @ Zs ) ) )
          & ( P @ X ) ) ) ).

% split_list_prop
thf(fact_77_split__list__last,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ? [Ys2: list @ A,Zs: list @ A] :
          ( ( Xs
            = ( append @ A @ Ys2 @ ( cons @ A @ X2 @ Zs ) ) )
          & ~ ( member @ A @ X2 @ ( set2 @ A @ Zs ) ) ) ) ).

% split_list_last
thf(fact_78_old_Oprod_Oinject,axiom,
    ! [A: $tType,B: $tType,A2: A,B2: B,A5: A,B3: B] :
      ( ( ( product_Pair @ A @ B @ A2 @ B2 )
        = ( product_Pair @ A @ B @ A5 @ B3 ) )
      = ( ( A2 = A5 )
        & ( B2 = B3 ) ) ) ).

% old.prod.inject
thf(fact_79_prod_Oinject,axiom,
    ! [A: $tType,B: $tType,X12: A,X24: B,Y1: A,Y23: B] :
      ( ( ( product_Pair @ A @ B @ X12 @ X24 )
        = ( product_Pair @ A @ B @ Y1 @ Y23 ) )
      = ( ( X12 = Y1 )
        & ( X24 = Y23 ) ) ) ).

% prod.inject
thf(fact_80_the__elem__set,axiom,
    ! [A: $tType,X2: A] :
      ( ( the_elem @ A @ ( set2 @ A @ ( cons @ A @ X2 @ ( nil @ A ) ) ) )
      = X2 ) ).

% the_elem_set
thf(fact_81_bind__simps_I2_J,axiom,
    ! [A: $tType,B: $tType,X2: B,Xs: list @ B,F: B > ( list @ A )] :
      ( ( bind @ B @ A @ ( cons @ B @ X2 @ Xs ) @ F )
      = ( append @ A @ ( F @ X2 ) @ ( bind @ B @ A @ Xs @ F ) ) ) ).

% bind_simps(2)
thf(fact_82_maps__simps_I1_J,axiom,
    ! [A: $tType,B: $tType,F: B > ( list @ A ),X2: B,Xs: list @ B] :
      ( ( maps @ B @ A @ F @ ( cons @ B @ X2 @ Xs ) )
      = ( append @ A @ ( F @ X2 ) @ ( maps @ B @ A @ F @ Xs ) ) ) ).

% maps_simps(1)
thf(fact_83_not__in__set__insert,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ~ ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ( ( insert @ A @ X2 @ Xs )
        = ( cons @ A @ X2 @ Xs ) ) ) ).

% not_in_set_insert
thf(fact_84_insert__Nil,axiom,
    ! [A: $tType,X2: A] :
      ( ( insert @ A @ X2 @ ( nil @ A ) )
      = ( cons @ A @ X2 @ ( nil @ A ) ) ) ).

% insert_Nil
thf(fact_85_sfv__cons,axiom,
    ! [A2: prover2006609834e_form,List: list @ prover2006609834e_form] :
      ( ( prover_Mirabelle_sfv @ ( cons @ prover2006609834e_form @ A2 @ List ) )
      = ( append @ nat @ ( prover_Mirabelle_fv @ A2 ) @ ( prover_Mirabelle_sfv @ List ) ) ) ).

% sfv_cons
thf(fact_86_rotate1_Osimps_I2_J,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( rotate1 @ A @ ( cons @ A @ X2 @ Xs ) )
      = ( append @ A @ Xs @ ( cons @ A @ X2 @ ( nil @ A ) ) ) ) ).

% rotate1.simps(2)
thf(fact_87_butlast__snoc,axiom,
    ! [A: $tType,Xs: list @ A,X2: A] :
      ( ( butlast @ A @ ( append @ A @ Xs @ ( cons @ A @ X2 @ ( nil @ A ) ) ) )
      = Xs ) ).

% butlast_snoc
thf(fact_88_rotate1__is__Nil__conv,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( ( rotate1 @ A @ Xs )
        = ( nil @ A ) )
      = ( Xs
        = ( nil @ A ) ) ) ).

% rotate1_is_Nil_conv
thf(fact_89_set__rotate1,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( set2 @ A @ ( rotate1 @ A @ Xs ) )
      = ( set2 @ A @ Xs ) ) ).

% set_rotate1
thf(fact_90_in__set__insert,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ( ( insert @ A @ X2 @ Xs )
        = Xs ) ) ).

% in_set_insert
thf(fact_91_bind__simps_I1_J,axiom,
    ! [B: $tType,A: $tType,F: B > ( list @ A )] :
      ( ( bind @ B @ A @ ( nil @ B ) @ F )
      = ( nil @ A ) ) ).

% bind_simps(1)
thf(fact_92_map__tailrec__rev_Ocases,axiom,
    ! [A: $tType,B: $tType,X2: product_prod @ ( A > B ) @ ( product_prod @ ( list @ A ) @ ( list @ B ) )] :
      ( ! [F2: A > B,Bs: list @ B] :
          ( X2
         != ( product_Pair @ ( A > B ) @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ F2 @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ ( nil @ A ) @ Bs ) ) )
     => ~ ! [F2: A > B,A3: A,As: list @ A,Bs: list @ B] :
            ( X2
           != ( product_Pair @ ( A > B ) @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ F2 @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ ( cons @ A @ A3 @ As ) @ Bs ) ) ) ) ).

% map_tailrec_rev.cases
thf(fact_93_butlast_Osimps_I1_J,axiom,
    ! [A: $tType] :
      ( ( butlast @ A @ ( nil @ A ) )
      = ( nil @ A ) ) ).

% butlast.simps(1)
thf(fact_94_in__set__butlastD,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ ( butlast @ A @ Xs ) ) )
     => ( member @ A @ X2 @ ( set2 @ A @ Xs ) ) ) ).

% in_set_butlastD
thf(fact_95_rotate1_Osimps_I1_J,axiom,
    ! [A: $tType] :
      ( ( rotate1 @ A @ ( nil @ A ) )
      = ( nil @ A ) ) ).

% rotate1.simps(1)
thf(fact_96_arg__min__list_Ocases,axiom,
    ! [B: $tType,A: $tType] :
      ( ( linorder @ B )
     => ! [X2: product_prod @ ( A > B ) @ ( list @ A )] :
          ( ! [F2: A > B,X: A] :
              ( X2
             != ( product_Pair @ ( A > B ) @ ( list @ A ) @ F2 @ ( cons @ A @ X @ ( nil @ A ) ) ) )
         => ( ! [F2: A > B,X: A,Y2: A,Zs: list @ A] :
                ( X2
               != ( product_Pair @ ( A > B ) @ ( list @ A ) @ F2 @ ( cons @ A @ X @ ( cons @ A @ Y2 @ Zs ) ) ) )
           => ~ ! [A3: A > B] :
                  ( X2
                 != ( product_Pair @ ( A > B ) @ ( list @ A ) @ A3 @ ( nil @ A ) ) ) ) ) ) ).

% arg_min_list.cases
thf(fact_97_sorted__wrt_Ocases,axiom,
    ! [A: $tType,X2: product_prod @ ( A > A > $o ) @ ( list @ A )] :
      ( ! [P2: A > A > $o] :
          ( X2
         != ( product_Pair @ ( A > A > $o ) @ ( list @ A ) @ P2 @ ( nil @ A ) ) )
     => ~ ! [P2: A > A > $o,X: A,Ys2: list @ A] :
            ( X2
           != ( product_Pair @ ( A > A > $o ) @ ( list @ A ) @ P2 @ ( cons @ A @ X @ Ys2 ) ) ) ) ).

% sorted_wrt.cases
thf(fact_98_successively_Ocases,axiom,
    ! [A: $tType,X2: product_prod @ ( A > A > $o ) @ ( list @ A )] :
      ( ! [P2: A > A > $o] :
          ( X2
         != ( product_Pair @ ( A > A > $o ) @ ( list @ A ) @ P2 @ ( nil @ A ) ) )
     => ( ! [P2: A > A > $o,X: A] :
            ( X2
           != ( product_Pair @ ( A > A > $o ) @ ( list @ A ) @ P2 @ ( cons @ A @ X @ ( nil @ A ) ) ) )
       => ~ ! [P2: A > A > $o,X: A,Y2: A,Xs2: list @ A] :
              ( X2
             != ( product_Pair @ ( A > A > $o ) @ ( list @ A ) @ P2 @ ( cons @ A @ X @ ( cons @ A @ Y2 @ Xs2 ) ) ) ) ) ) ).

% successively.cases
thf(fact_99_splice_Ocases,axiom,
    ! [A: $tType,X2: product_prod @ ( list @ A ) @ ( list @ A )] :
      ( ! [Ys2: list @ A] :
          ( X2
         != ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( nil @ A ) @ Ys2 ) )
     => ~ ! [X: A,Xs2: list @ A,Ys2: list @ A] :
            ( X2
           != ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( cons @ A @ X @ Xs2 ) @ Ys2 ) ) ) ).

% splice.cases
thf(fact_100_shuffles_Ocases,axiom,
    ! [A: $tType,X2: product_prod @ ( list @ A ) @ ( list @ A )] :
      ( ! [Ys2: list @ A] :
          ( X2
         != ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( nil @ A ) @ Ys2 ) )
     => ( ! [Xs2: list @ A] :
            ( X2
           != ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs2 @ ( nil @ A ) ) )
       => ~ ! [X: A,Xs2: list @ A,Y2: A,Ys2: list @ A] :
              ( X2
             != ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( cons @ A @ X @ Xs2 ) @ ( cons @ A @ Y2 @ Ys2 ) ) ) ) ) ).

% shuffles.cases
thf(fact_101_list__bind__cong,axiom,
    ! [B: $tType,A: $tType,Xs: list @ A,Ys: list @ A,F: A > ( list @ B ),G: A > ( list @ B )] :
      ( ( Xs = Ys )
     => ( ! [X: A] :
            ( ( member @ A @ X @ ( set2 @ A @ Xs ) )
           => ( ( F @ X )
              = ( G @ X ) ) )
       => ( ( bind @ A @ B @ Xs @ F )
          = ( bind @ A @ B @ Ys @ G ) ) ) ) ).

% list_bind_cong
thf(fact_102_butlast_Osimps_I2_J,axiom,
    ! [A: $tType,Xs: list @ A,X2: A] :
      ( ( ( Xs
          = ( nil @ A ) )
       => ( ( butlast @ A @ ( cons @ A @ X2 @ Xs ) )
          = ( nil @ A ) ) )
      & ( ( Xs
         != ( nil @ A ) )
       => ( ( butlast @ A @ ( cons @ A @ X2 @ Xs ) )
          = ( cons @ A @ X2 @ ( butlast @ A @ Xs ) ) ) ) ) ).

% butlast.simps(2)
thf(fact_103_butlast__append,axiom,
    ! [A: $tType,Ys: list @ A,Xs: list @ A] :
      ( ( ( Ys
          = ( nil @ A ) )
       => ( ( butlast @ A @ ( append @ A @ Xs @ Ys ) )
          = ( butlast @ A @ Xs ) ) )
      & ( ( Ys
         != ( nil @ A ) )
       => ( ( butlast @ A @ ( append @ A @ Xs @ Ys ) )
          = ( append @ A @ Xs @ ( butlast @ A @ Ys ) ) ) ) ) ).

% butlast_append
thf(fact_104_in__set__butlast__appendI,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Ys: list @ A] :
      ( ( ( member @ A @ X2 @ ( set2 @ A @ ( butlast @ A @ Xs ) ) )
        | ( member @ A @ X2 @ ( set2 @ A @ ( butlast @ A @ Ys ) ) ) )
     => ( member @ A @ X2 @ ( set2 @ A @ ( butlast @ A @ ( append @ A @ Xs @ Ys ) ) ) ) ) ).

% in_set_butlast_appendI
thf(fact_105_maps__simps_I2_J,axiom,
    ! [B: $tType,A: $tType,F: B > ( list @ A )] :
      ( ( maps @ B @ A @ F @ ( nil @ B ) )
      = ( nil @ A ) ) ).

% maps_simps(2)
thf(fact_106_surj__pair,axiom,
    ! [A: $tType,B: $tType,P3: product_prod @ A @ B] :
    ? [X: A,Y2: B] :
      ( P3
      = ( product_Pair @ A @ B @ X @ Y2 ) ) ).

% surj_pair
thf(fact_107_prod__cases,axiom,
    ! [B: $tType,A: $tType,P: ( product_prod @ A @ B ) > $o,P3: product_prod @ A @ B] :
      ( ! [A3: A,B4: B] : ( P @ ( product_Pair @ A @ B @ A3 @ B4 ) )
     => ( P @ P3 ) ) ).

% prod_cases
thf(fact_108_Pair__inject,axiom,
    ! [A: $tType,B: $tType,A2: A,B2: B,A5: A,B3: B] :
      ( ( ( product_Pair @ A @ B @ A2 @ B2 )
        = ( product_Pair @ A @ B @ A5 @ B3 ) )
     => ~ ( ( A2 = A5 )
         => ( B2 != B3 ) ) ) ).

% Pair_inject
thf(fact_109_prod__cases3,axiom,
    ! [A: $tType,B: $tType,C: $tType,Y: product_prod @ A @ ( product_prod @ B @ C )] :
      ~ ! [A3: A,B4: B,C3: C] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ C ) @ A3 @ ( product_Pair @ B @ C @ B4 @ C3 ) ) ) ).

% prod_cases3
thf(fact_110_prod__cases4,axiom,
    ! [A: $tType,B: $tType,C: $tType,D: $tType,Y: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) )] :
      ~ ! [A3: A,B4: B,C3: C,D2: D] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) ) @ A3 @ ( product_Pair @ B @ ( product_prod @ C @ D ) @ B4 @ ( product_Pair @ C @ D @ C3 @ D2 ) ) ) ) ).

% prod_cases4
thf(fact_111_prod__cases5,axiom,
    ! [A: $tType,B: $tType,C: $tType,D: $tType,E4: $tType,Y: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E4 ) ) )] :
      ~ ! [A3: A,B4: B,C3: C,D2: D,E5: E4] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E4 ) ) ) @ A3 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ E4 ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ E4 ) @ C3 @ ( product_Pair @ D @ E4 @ D2 @ E5 ) ) ) ) ) ).

% prod_cases5
thf(fact_112_prod__cases6,axiom,
    ! [A: $tType,B: $tType,C: $tType,D: $tType,E4: $tType,F3: $tType,Y: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ F3 ) ) ) )] :
      ~ ! [A3: A,B4: B,C3: C,D2: D,E5: E4,F2: F3] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ F3 ) ) ) ) @ A3 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ F3 ) ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ ( product_prod @ E4 @ F3 ) ) @ C3 @ ( product_Pair @ D @ ( product_prod @ E4 @ F3 ) @ D2 @ ( product_Pair @ E4 @ F3 @ E5 @ F2 ) ) ) ) ) ) ).

% prod_cases6
thf(fact_113_prod__cases7,axiom,
    ! [A: $tType,B: $tType,C: $tType,D: $tType,E4: $tType,F3: $tType,G2: $tType,Y: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) ) ) )] :
      ~ ! [A3: A,B4: B,C3: C,D2: D,E5: E4,F2: F3,G3: G2] :
          ( Y
         != ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) ) ) ) @ A3 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) ) @ C3 @ ( product_Pair @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) @ D2 @ ( product_Pair @ E4 @ ( product_prod @ F3 @ G2 ) @ E5 @ ( product_Pair @ F3 @ G2 @ F2 @ G3 ) ) ) ) ) ) ) ).

% prod_cases7
thf(fact_114_prod__induct3,axiom,
    ! [C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ C ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ C )] :
      ( ! [A3: A,B4: B,C3: C] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ C ) @ A3 @ ( product_Pair @ B @ C @ B4 @ C3 ) ) )
     => ( P @ X2 ) ) ).

% prod_induct3
thf(fact_115_prod__induct4,axiom,
    ! [D: $tType,C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) )] :
      ( ! [A3: A,B4: B,C3: C,D2: D] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ D ) ) @ A3 @ ( product_Pair @ B @ ( product_prod @ C @ D ) @ B4 @ ( product_Pair @ C @ D @ C3 @ D2 ) ) ) )
     => ( P @ X2 ) ) ).

% prod_induct4
thf(fact_116_prod__induct5,axiom,
    ! [E4: $tType,D: $tType,C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E4 ) ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E4 ) ) )] :
      ( ! [A3: A,B4: B,C3: C,D2: D,E5: E4] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ E4 ) ) ) @ A3 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ E4 ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ E4 ) @ C3 @ ( product_Pair @ D @ E4 @ D2 @ E5 ) ) ) ) )
     => ( P @ X2 ) ) ).

% prod_induct5
thf(fact_117_prod__induct6,axiom,
    ! [F3: $tType,E4: $tType,D: $tType,C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ F3 ) ) ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ F3 ) ) ) )] :
      ( ! [A3: A,B4: B,C3: C,D2: D,E5: E4,F2: F3] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ F3 ) ) ) ) @ A3 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ F3 ) ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ ( product_prod @ E4 @ F3 ) ) @ C3 @ ( product_Pair @ D @ ( product_prod @ E4 @ F3 ) @ D2 @ ( product_Pair @ E4 @ F3 @ E5 @ F2 ) ) ) ) ) )
     => ( P @ X2 ) ) ).

% prod_induct6
thf(fact_118_prod__induct7,axiom,
    ! [G2: $tType,F3: $tType,E4: $tType,D: $tType,C: $tType,B: $tType,A: $tType,P: ( product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) ) ) ) ) > $o,X2: product_prod @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) ) ) )] :
      ( ! [A3: A,B4: B,C3: C,D2: D,E5: E4,F2: F3,G3: G2] : ( P @ ( product_Pair @ A @ ( product_prod @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) ) ) ) @ A3 @ ( product_Pair @ B @ ( product_prod @ C @ ( product_prod @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) ) ) @ B4 @ ( product_Pair @ C @ ( product_prod @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) ) @ C3 @ ( product_Pair @ D @ ( product_prod @ E4 @ ( product_prod @ F3 @ G2 ) ) @ D2 @ ( product_Pair @ E4 @ ( product_prod @ F3 @ G2 ) @ E5 @ ( product_Pair @ F3 @ G2 @ F2 @ G3 ) ) ) ) ) ) )
     => ( P @ X2 ) ) ).

% prod_induct7
thf(fact_119_old_Oprod_Oexhaust,axiom,
    ! [A: $tType,B: $tType,Y: product_prod @ A @ B] :
      ~ ! [A3: A,B4: B] :
          ( Y
         != ( product_Pair @ A @ B @ A3 @ B4 ) ) ).

% old.prod.exhaust
thf(fact_120_old_Oprod_Oinducts,axiom,
    ! [B: $tType,A: $tType,P: ( product_prod @ A @ B ) > $o,Prod: product_prod @ A @ B] :
      ( ! [A3: A,B4: B] : ( P @ ( product_Pair @ A @ B @ A3 @ B4 ) )
     => ( P @ Prod ) ) ).

% old.prod.inducts
thf(fact_121_List_Oinsert__def,axiom,
    ! [A: $tType] :
      ( ( insert @ A )
      = ( ^ [X3: A,Xs4: list @ A] : ( if @ ( list @ A ) @ ( member @ A @ X3 @ ( set2 @ A @ Xs4 ) ) @ Xs4 @ ( cons @ A @ X3 @ Xs4 ) ) ) ) ).

% List.insert_def
thf(fact_122_old_Oprod_Orec,axiom,
    ! [A: $tType,T: $tType,B: $tType,F1: A > B > T,A2: A,B2: B] :
      ( ( product_rec_prod @ A @ B @ T @ F1 @ ( product_Pair @ A @ B @ A2 @ B2 ) )
      = ( F1 @ A2 @ B2 ) ) ).

% old.prod.rec
thf(fact_123_flatten_Osimps_I2_J,axiom,
    ! [A: $tType,A2: list @ A,List: list @ ( list @ A )] :
      ( ( prover12291693latten @ A @ ( cons @ ( list @ A ) @ A2 @ List ) )
      = ( append @ A @ A2 @ ( prover12291693latten @ A @ List ) ) ) ).

% flatten.simps(2)
thf(fact_124_flatten_Osimps_I1_J,axiom,
    ! [A: $tType] :
      ( ( prover12291693latten @ A @ ( nil @ ( list @ A ) ) )
      = ( nil @ A ) ) ).

% flatten.simps(1)
thf(fact_125_product__lists_Osimps_I1_J,axiom,
    ! [A: $tType] :
      ( ( product_lists @ A @ ( nil @ ( list @ A ) ) )
      = ( cons @ ( list @ A ) @ ( nil @ A ) @ ( nil @ ( list @ A ) ) ) ) ).

% product_lists.simps(1)
thf(fact_126_append__butlast__last__id,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( Xs
       != ( nil @ A ) )
     => ( ( append @ A @ ( butlast @ A @ Xs ) @ ( cons @ A @ ( last @ A @ Xs ) @ ( nil @ A ) ) )
        = Xs ) ) ).

% append_butlast_last_id
thf(fact_127_fv_Osimps_I5_J,axiom,
    ! [F: prover2006609834e_form] :
      ( ( prover_Mirabelle_fv @ ( prover946642470e_FAll @ F ) )
      = ( prover1646808149preSuc @ ( prover_Mirabelle_fv @ F ) ) ) ).

% fv.simps(5)
thf(fact_128_last__appendR,axiom,
    ! [A: $tType,Ys: list @ A,Xs: list @ A] :
      ( ( Ys
       != ( nil @ A ) )
     => ( ( last @ A @ ( append @ A @ Xs @ Ys ) )
        = ( last @ A @ Ys ) ) ) ).

% last_appendR
thf(fact_129_last__appendL,axiom,
    ! [A: $tType,Ys: list @ A,Xs: list @ A] :
      ( ( Ys
        = ( nil @ A ) )
     => ( ( last @ A @ ( append @ A @ Xs @ Ys ) )
        = ( last @ A @ Xs ) ) ) ).

% last_appendL
thf(fact_130_last__snoc,axiom,
    ! [A: $tType,Xs: list @ A,X2: A] :
      ( ( last @ A @ ( append @ A @ Xs @ ( cons @ A @ X2 @ ( nil @ A ) ) ) )
      = X2 ) ).

% last_snoc
thf(fact_131_last__ConsR,axiom,
    ! [A: $tType,Xs: list @ A,X2: A] :
      ( ( Xs
       != ( nil @ A ) )
     => ( ( last @ A @ ( cons @ A @ X2 @ Xs ) )
        = ( last @ A @ Xs ) ) ) ).

% last_ConsR
thf(fact_132_last__ConsL,axiom,
    ! [A: $tType,Xs: list @ A,X2: A] :
      ( ( Xs
        = ( nil @ A ) )
     => ( ( last @ A @ ( cons @ A @ X2 @ Xs ) )
        = X2 ) ) ).

% last_ConsL
thf(fact_133_last_Osimps,axiom,
    ! [A: $tType,Xs: list @ A,X2: A] :
      ( ( ( Xs
          = ( nil @ A ) )
       => ( ( last @ A @ ( cons @ A @ X2 @ Xs ) )
          = X2 ) )
      & ( ( Xs
         != ( nil @ A ) )
       => ( ( last @ A @ ( cons @ A @ X2 @ Xs ) )
          = ( last @ A @ Xs ) ) ) ) ).

% last.simps
thf(fact_134_last__in__set,axiom,
    ! [A: $tType,As2: list @ A] :
      ( ( As2
       != ( nil @ A ) )
     => ( member @ A @ ( last @ A @ As2 ) @ ( set2 @ A @ As2 ) ) ) ).

% last_in_set
thf(fact_135_longest__common__suffix,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
    ? [Ss: list @ A,Xs5: list @ A,Ys6: list @ A] :
      ( ( Xs
        = ( append @ A @ Xs5 @ Ss ) )
      & ( Ys
        = ( append @ A @ Ys6 @ Ss ) )
      & ( ( Xs5
          = ( nil @ A ) )
        | ( Ys6
          = ( nil @ A ) )
        | ( ( last @ A @ Xs5 )
         != ( last @ A @ Ys6 ) ) ) ) ).

% longest_common_suffix
thf(fact_136_last__append,axiom,
    ! [A: $tType,Ys: list @ A,Xs: list @ A] :
      ( ( ( Ys
          = ( nil @ A ) )
       => ( ( last @ A @ ( append @ A @ Xs @ Ys ) )
          = ( last @ A @ Xs ) ) )
      & ( ( Ys
         != ( nil @ A ) )
       => ( ( last @ A @ ( append @ A @ Xs @ Ys ) )
          = ( last @ A @ Ys ) ) ) ) ).

% last_append
thf(fact_137_preSuc_Osimps_I1_J,axiom,
    ( ( prover1646808149preSuc @ ( nil @ nat ) )
    = ( nil @ nat ) ) ).

% preSuc.simps(1)
thf(fact_138_snoc__eq__iff__butlast,axiom,
    ! [A: $tType,Xs: list @ A,X2: A,Ys: list @ A] :
      ( ( ( append @ A @ Xs @ ( cons @ A @ X2 @ ( nil @ A ) ) )
        = Ys )
      = ( ( Ys
         != ( nil @ A ) )
        & ( ( butlast @ A @ Ys )
          = Xs )
        & ( ( last @ A @ Ys )
          = X2 ) ) ) ).

% snoc_eq_iff_butlast
thf(fact_139_snoc__listrel1__snoc__iff,axiom,
    ! [A: $tType,Xs: list @ A,X2: A,Ys: list @ A,Y: A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Xs @ ( cons @ A @ X2 @ ( nil @ A ) ) ) @ ( append @ A @ Ys @ ( cons @ A @ Y @ ( nil @ A ) ) ) ) @ ( listrel1 @ A @ R ) )
      = ( ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( listrel1 @ A @ R ) )
          & ( X2 = Y ) )
        | ( ( Xs = Ys )
          & ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y ) @ R ) ) ) ) ).

% snoc_listrel1_snoc_iff
thf(fact_140_subseqs_Osimps_I1_J,axiom,
    ! [A: $tType] :
      ( ( subseqs @ A @ ( nil @ A ) )
      = ( cons @ ( list @ A ) @ ( nil @ A ) @ ( nil @ ( list @ A ) ) ) ) ).

% subseqs.simps(1)
thf(fact_141_concat__eq__append__conv,axiom,
    ! [A: $tType,Xss2: list @ ( list @ A ),Ys: list @ A,Zs2: list @ A] :
      ( ( ( concat @ A @ Xss2 )
        = ( append @ A @ Ys @ Zs2 ) )
      = ( ( ( Xss2
            = ( nil @ ( list @ A ) ) )
         => ( ( Ys
              = ( nil @ A ) )
            & ( Zs2
              = ( nil @ A ) ) ) )
        & ( ( Xss2
           != ( nil @ ( list @ A ) ) )
         => ? [Xss1: list @ ( list @ A ),Xs4: list @ A,Xs6: list @ A,Xss22: list @ ( list @ A )] :
              ( ( Xss2
                = ( append @ ( list @ A ) @ Xss1 @ ( cons @ ( list @ A ) @ ( append @ A @ Xs4 @ Xs6 ) @ Xss22 ) ) )
              & ( Ys
                = ( append @ A @ ( concat @ A @ Xss1 ) @ Xs4 ) )
              & ( Zs2
                = ( append @ A @ Xs6 @ ( concat @ A @ Xss22 ) ) ) ) ) ) ) ).

% concat_eq_append_conv
thf(fact_142_lexord__same__pref__iff,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Zs2: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Xs @ Ys ) @ ( append @ A @ Xs @ Zs2 ) ) @ ( lexord @ A @ R ) )
      = ( ? [X3: A] :
            ( ( member @ A @ X3 @ ( set2 @ A @ Xs ) )
            & ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X3 @ X3 ) @ R ) )
        | ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Ys @ Zs2 ) @ ( lexord @ A @ R ) ) ) ) ).

% lexord_same_pref_iff
thf(fact_143_concat__eq__Nil__conv,axiom,
    ! [A: $tType,Xss2: list @ ( list @ A )] :
      ( ( ( concat @ A @ Xss2 )
        = ( nil @ A ) )
      = ( ! [X3: list @ A] :
            ( ( member @ ( list @ A ) @ X3 @ ( set2 @ ( list @ A ) @ Xss2 ) )
           => ( X3
              = ( nil @ A ) ) ) ) ) ).

% concat_eq_Nil_conv
thf(fact_144_Nil__eq__concat__conv,axiom,
    ! [A: $tType,Xss2: list @ ( list @ A )] :
      ( ( ( nil @ A )
        = ( concat @ A @ Xss2 ) )
      = ( ! [X3: list @ A] :
            ( ( member @ ( list @ A ) @ X3 @ ( set2 @ ( list @ A ) @ Xss2 ) )
           => ( X3
              = ( nil @ A ) ) ) ) ) ).

% Nil_eq_concat_conv
thf(fact_145_concat__append,axiom,
    ! [A: $tType,Xs: list @ ( list @ A ),Ys: list @ ( list @ A )] :
      ( ( concat @ A @ ( append @ ( list @ A ) @ Xs @ Ys ) )
      = ( append @ A @ ( concat @ A @ Xs ) @ ( concat @ A @ Ys ) ) ) ).

% concat_append
thf(fact_146_Cons__listrel1__Cons,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Y: A,Ys: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( cons @ A @ X2 @ Xs ) @ ( cons @ A @ Y @ Ys ) ) @ ( listrel1 @ A @ R ) )
      = ( ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y ) @ R )
          & ( Xs = Ys ) )
        | ( ( X2 = Y )
          & ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( listrel1 @ A @ R ) ) ) ) ) ).

% Cons_listrel1_Cons
thf(fact_147_lexord__cons__cons,axiom,
    ! [A: $tType,A2: A,X2: list @ A,B2: A,Y: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( cons @ A @ A2 @ X2 ) @ ( cons @ A @ B2 @ Y ) ) @ ( lexord @ A @ R ) )
      = ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ A2 @ B2 ) @ R )
        | ( ( A2 = B2 )
          & ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ X2 @ Y ) @ ( lexord @ A @ R ) ) ) ) ) ).

% lexord_cons_cons
thf(fact_148_lexord__Nil__left,axiom,
    ! [A: $tType,Y: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( nil @ A ) @ Y ) @ ( lexord @ A @ R ) )
      = ( ? [A6: A,X3: list @ A] :
            ( Y
            = ( cons @ A @ A6 @ X3 ) ) ) ) ).

% lexord_Nil_left
thf(fact_149_subseqs__refl,axiom,
    ! [A: $tType,Xs: list @ A] : ( member @ ( list @ A ) @ Xs @ ( set2 @ ( list @ A ) @ ( subseqs @ A @ Xs ) ) ) ).

% subseqs_refl
thf(fact_150_Cons__in__subseqsD,axiom,
    ! [A: $tType,Y: A,Ys: list @ A,Xs: list @ A] :
      ( ( member @ ( list @ A ) @ ( cons @ A @ Y @ Ys ) @ ( set2 @ ( list @ A ) @ ( subseqs @ A @ Xs ) ) )
     => ( member @ ( list @ A ) @ Ys @ ( set2 @ ( list @ A ) @ ( subseqs @ A @ Xs ) ) ) ) ).

% Cons_in_subseqsD
thf(fact_151_listrel1I2,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,R: set @ ( product_prod @ A @ A ),X2: A] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( listrel1 @ A @ R ) )
     => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( cons @ A @ X2 @ Xs ) @ ( cons @ A @ X2 @ Ys ) ) @ ( listrel1 @ A @ R ) ) ) ).

% listrel1I2
thf(fact_152_not__listrel1__Nil,axiom,
    ! [A: $tType,Xs: list @ A,R: set @ ( product_prod @ A @ A )] :
      ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ ( nil @ A ) ) @ ( listrel1 @ A @ R ) ) ).

% not_listrel1_Nil
thf(fact_153_not__Nil__listrel1,axiom,
    ! [A: $tType,Xs: list @ A,R: set @ ( product_prod @ A @ A )] :
      ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( nil @ A ) @ Xs ) @ ( listrel1 @ A @ R ) ) ).

% not_Nil_listrel1
thf(fact_154_append__listrel1I,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,R: set @ ( product_prod @ A @ A ),Us2: list @ A,Vs: list @ A] :
      ( ( ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( listrel1 @ A @ R ) )
          & ( Us2 = Vs ) )
        | ( ( Xs = Ys )
          & ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Us2 @ Vs ) @ ( listrel1 @ A @ R ) ) ) )
     => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Xs @ Us2 ) @ ( append @ A @ Ys @ Vs ) ) @ ( listrel1 @ A @ R ) ) ) ).

% append_listrel1I
thf(fact_155_concat_Osimps_I1_J,axiom,
    ! [A: $tType] :
      ( ( concat @ A @ ( nil @ ( list @ A ) ) )
      = ( nil @ A ) ) ).

% concat.simps(1)
thf(fact_156_lexord__linear,axiom,
    ! [A: $tType,R: set @ ( product_prod @ A @ A ),X2: list @ A,Y: list @ A] :
      ( ! [A3: A,B4: A] :
          ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ A3 @ B4 ) @ R )
          | ( A3 = B4 )
          | ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ B4 @ A3 ) @ R ) )
     => ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ X2 @ Y ) @ ( lexord @ A @ R ) )
        | ( X2 = Y )
        | ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Y @ X2 ) @ ( lexord @ A @ R ) ) ) ) ).

% lexord_linear
thf(fact_157_lexord__irreflexive,axiom,
    ! [A: $tType,R: set @ ( product_prod @ A @ A ),Xs: list @ A] :
      ( ! [X: A] :
          ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X @ X ) @ R )
     => ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Xs ) @ ( lexord @ A @ R ) ) ) ).

% lexord_irreflexive
thf(fact_158_concat_Osimps_I2_J,axiom,
    ! [A: $tType,X2: list @ A,Xs: list @ ( list @ A )] :
      ( ( concat @ A @ ( cons @ ( list @ A ) @ X2 @ Xs ) )
      = ( append @ A @ X2 @ ( concat @ A @ Xs ) ) ) ).

% concat.simps(2)
thf(fact_159_lexord__Nil__right,axiom,
    ! [A: $tType,X2: list @ A,R: set @ ( product_prod @ A @ A )] :
      ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ X2 @ ( nil @ A ) ) @ ( lexord @ A @ R ) ) ).

% lexord_Nil_right
thf(fact_160_lexord__append__leftI,axiom,
    ! [A: $tType,U: list @ A,V: list @ A,R: set @ ( product_prod @ A @ A ),X2: list @ A] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ U @ V ) @ ( lexord @ A @ R ) )
     => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ X2 @ U ) @ ( append @ A @ X2 @ V ) ) @ ( lexord @ A @ R ) ) ) ).

% lexord_append_leftI
thf(fact_161_listrel1I1,axiom,
    ! [A: $tType,X2: A,Y: A,R: set @ ( product_prod @ A @ A ),Xs: list @ A] :
      ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y ) @ R )
     => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( cons @ A @ X2 @ Xs ) @ ( cons @ A @ Y @ Xs ) ) @ ( listrel1 @ A @ R ) ) ) ).

% listrel1I1
thf(fact_162_Cons__listrel1E1,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Ys: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( cons @ A @ X2 @ Xs ) @ Ys ) @ ( listrel1 @ A @ R ) )
     => ( ! [Y2: A] :
            ( ( Ys
              = ( cons @ A @ Y2 @ Xs ) )
           => ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y2 ) @ R ) )
       => ~ ! [Zs: list @ A] :
              ( ( Ys
                = ( cons @ A @ X2 @ Zs ) )
             => ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Zs ) @ ( listrel1 @ A @ R ) ) ) ) ) ).

% Cons_listrel1E1
thf(fact_163_Cons__listrel1E2,axiom,
    ! [A: $tType,Xs: list @ A,Y: A,Ys: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ ( cons @ A @ Y @ Ys ) ) @ ( listrel1 @ A @ R ) )
     => ( ! [X: A] :
            ( ( Xs
              = ( cons @ A @ X @ Ys ) )
           => ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X @ Y ) @ R ) )
       => ~ ! [Zs: list @ A] :
              ( ( Xs
                = ( cons @ A @ Y @ Zs ) )
             => ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Zs @ Ys ) @ ( listrel1 @ A @ R ) ) ) ) ) ).

% Cons_listrel1E2
thf(fact_164_lexord__partial__trans,axiom,
    ! [A: $tType,Xs: list @ A,R: set @ ( product_prod @ A @ A ),Ys: list @ A,Zs2: list @ A] :
      ( ! [X: A,Y2: A,Z: A] :
          ( ( member @ A @ X @ ( set2 @ A @ Xs ) )
         => ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X @ Y2 ) @ R )
           => ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ Y2 @ Z ) @ R )
             => ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X @ Z ) @ R ) ) ) )
     => ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( lexord @ A @ R ) )
       => ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Ys @ Zs2 ) @ ( lexord @ A @ R ) )
         => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Zs2 ) @ ( lexord @ A @ R ) ) ) ) ) ).

% lexord_partial_trans
thf(fact_165_lexord__append__leftD,axiom,
    ! [A: $tType,X2: list @ A,U: list @ A,V: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ X2 @ U ) @ ( append @ A @ X2 @ V ) ) @ ( lexord @ A @ R ) )
     => ( ! [A3: A] :
            ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ A3 @ A3 ) @ R )
       => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ U @ V ) @ ( lexord @ A @ R ) ) ) ) ).

% lexord_append_leftD
thf(fact_166_lexord__append__rightI,axiom,
    ! [A: $tType,Y: list @ A,X2: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ? [B5: A,Z3: list @ A] :
          ( Y
          = ( cons @ A @ B5 @ Z3 ) )
     => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ X2 @ ( append @ A @ X2 @ Y ) ) @ ( lexord @ A @ R ) ) ) ).

% lexord_append_rightI
thf(fact_167_concat__eq__appendD,axiom,
    ! [A: $tType,Xss2: list @ ( list @ A ),Ys: list @ A,Zs2: list @ A] :
      ( ( ( concat @ A @ Xss2 )
        = ( append @ A @ Ys @ Zs2 ) )
     => ( ( Xss2
         != ( nil @ ( list @ A ) ) )
       => ? [Xss12: list @ ( list @ A ),Xs2: list @ A,Xs5: list @ A,Xss23: list @ ( list @ A )] :
            ( ( Xss2
              = ( append @ ( list @ A ) @ Xss12 @ ( cons @ ( list @ A ) @ ( append @ A @ Xs2 @ Xs5 ) @ Xss23 ) ) )
            & ( Ys
              = ( append @ A @ ( concat @ A @ Xss12 ) @ Xs2 ) )
            & ( Zs2
              = ( append @ A @ Xs5 @ ( concat @ A @ Xss23 ) ) ) ) ) ) ).

% concat_eq_appendD
thf(fact_168_listrel1E,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( listrel1 @ A @ R ) )
     => ~ ! [X: A,Y2: A] :
            ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X @ Y2 ) @ R )
           => ! [Us3: list @ A,Vs2: list @ A] :
                ( ( Xs
                  = ( append @ A @ Us3 @ ( cons @ A @ X @ Vs2 ) ) )
               => ( Ys
                 != ( append @ A @ Us3 @ ( cons @ A @ Y2 @ Vs2 ) ) ) ) ) ) ).

% listrel1E
thf(fact_169_listrel1I,axiom,
    ! [A: $tType,X2: A,Y: A,R: set @ ( product_prod @ A @ A ),Xs: list @ A,Us2: list @ A,Vs: list @ A,Ys: list @ A] :
      ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y ) @ R )
     => ( ( Xs
          = ( append @ A @ Us2 @ ( cons @ A @ X2 @ Vs ) ) )
       => ( ( Ys
            = ( append @ A @ Us2 @ ( cons @ A @ Y @ Vs ) ) )
         => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( listrel1 @ A @ R ) ) ) ) ) ).

% listrel1I
thf(fact_170_lexord__append__left__rightI,axiom,
    ! [A: $tType,A2: A,B2: A,R: set @ ( product_prod @ A @ A ),U: list @ A,X2: list @ A,Y: list @ A] :
      ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ A2 @ B2 ) @ R )
     => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ U @ ( cons @ A @ A2 @ X2 ) ) @ ( append @ A @ U @ ( cons @ A @ B2 @ Y ) ) ) @ ( lexord @ A @ R ) ) ) ).

% lexord_append_left_rightI
thf(fact_171_lexord__same__pref__if__irrefl,axiom,
    ! [A: $tType,R: set @ ( product_prod @ A @ A ),Xs: list @ A,Ys: list @ A,Zs2: list @ A] :
      ( ( irrefl @ A @ R )
     => ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Xs @ Ys ) @ ( append @ A @ Xs @ Zs2 ) ) @ ( lexord @ A @ R ) )
        = ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Ys @ Zs2 ) @ ( lexord @ A @ R ) ) ) ) ).

% lexord_same_pref_if_irrefl
thf(fact_172_listrel_Ocases,axiom,
    ! [B: $tType,A: $tType,A1: list @ A,A22: list @ B,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ A1 @ A22 ) @ ( listrel @ A @ B @ R ) )
     => ( ( ( A1
            = ( nil @ A ) )
         => ( A22
           != ( nil @ B ) ) )
       => ~ ! [X: A,Y2: B,Xs2: list @ A] :
              ( ( A1
                = ( cons @ A @ X @ Xs2 ) )
             => ! [Ys2: list @ B] :
                  ( ( A22
                    = ( cons @ B @ Y2 @ Ys2 ) )
                 => ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ X @ Y2 ) @ R )
                   => ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Xs2 @ Ys2 ) @ ( listrel @ A @ B @ R ) ) ) ) ) ) ) ).

% listrel.cases
thf(fact_173_listrel_Osimps,axiom,
    ! [B: $tType,A: $tType,A1: list @ A,A22: list @ B,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ A1 @ A22 ) @ ( listrel @ A @ B @ R ) )
      = ( ( ( A1
            = ( nil @ A ) )
          & ( A22
            = ( nil @ B ) ) )
        | ? [X3: A,Y3: B,Xs4: list @ A,Ys3: list @ B] :
            ( ( A1
              = ( cons @ A @ X3 @ Xs4 ) )
            & ( A22
              = ( cons @ B @ Y3 @ Ys3 ) )
            & ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ X3 @ Y3 ) @ R )
            & ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Xs4 @ Ys3 ) @ ( listrel @ A @ B @ R ) ) ) ) ) ).

% listrel.simps
thf(fact_174_listrel_Oinducts,axiom,
    ! [A: $tType,B: $tType,X12: list @ A,X24: list @ B,R: set @ ( product_prod @ A @ B ),P: ( list @ A ) > ( list @ B ) > $o] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ X12 @ X24 ) @ ( listrel @ A @ B @ R ) )
     => ( ( P @ ( nil @ A ) @ ( nil @ B ) )
       => ( ! [X: A,Y2: B,Xs2: list @ A,Ys2: list @ B] :
              ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ X @ Y2 ) @ R )
             => ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Xs2 @ Ys2 ) @ ( listrel @ A @ B @ R ) )
               => ( ( P @ Xs2 @ Ys2 )
                 => ( P @ ( cons @ A @ X @ Xs2 ) @ ( cons @ B @ Y2 @ Ys2 ) ) ) ) )
         => ( P @ X12 @ X24 ) ) ) ) ).

% listrel.inducts
thf(fact_175_lexord__irrefl,axiom,
    ! [A: $tType,R2: set @ ( product_prod @ A @ A )] :
      ( ( irrefl @ A @ R2 )
     => ( irrefl @ ( list @ A ) @ ( lexord @ A @ R2 ) ) ) ).

% lexord_irrefl
thf(fact_176_listrel_ONil,axiom,
    ! [B: $tType,A: $tType,R: set @ ( product_prod @ A @ B )] : ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ ( nil @ A ) @ ( nil @ B ) ) @ ( listrel @ A @ B @ R ) ) ).

% listrel.Nil
thf(fact_177_listrel__Nil1,axiom,
    ! [A: $tType,B: $tType,Xs: list @ B,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ ( nil @ A ) @ Xs ) @ ( listrel @ A @ B @ R ) )
     => ( Xs
        = ( nil @ B ) ) ) ).

% listrel_Nil1
thf(fact_178_listrel__Nil2,axiom,
    ! [B: $tType,A: $tType,Xs: list @ A,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Xs @ ( nil @ B ) ) @ ( listrel @ A @ B @ R ) )
     => ( Xs
        = ( nil @ A ) ) ) ).

% listrel_Nil2
thf(fact_179_listrel__Cons2,axiom,
    ! [B: $tType,A: $tType,Xs: list @ A,Y: B,Ys: list @ B,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Xs @ ( cons @ B @ Y @ Ys ) ) @ ( listrel @ A @ B @ R ) )
     => ~ ! [X: A,Xs2: list @ A] :
            ( ( Xs
              = ( cons @ A @ X @ Xs2 ) )
           => ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ X @ Y ) @ R )
             => ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Xs2 @ Ys ) @ ( listrel @ A @ B @ R ) ) ) ) ) ).

% listrel_Cons2
thf(fact_180_listrel__Cons1,axiom,
    ! [B: $tType,A: $tType,Y: A,Ys: list @ A,Xs: list @ B,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ ( cons @ A @ Y @ Ys ) @ Xs ) @ ( listrel @ A @ B @ R ) )
     => ~ ! [Y2: B,Ys2: list @ B] :
            ( ( Xs
              = ( cons @ B @ Y2 @ Ys2 ) )
           => ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ Y @ Y2 ) @ R )
             => ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Ys @ Ys2 ) @ ( listrel @ A @ B @ R ) ) ) ) ) ).

% listrel_Cons1
thf(fact_181_listrel_OCons,axiom,
    ! [B: $tType,A: $tType,X2: A,Y: B,R: set @ ( product_prod @ A @ B ),Xs: list @ A,Ys: list @ B] :
      ( ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ X2 @ Y ) @ R )
     => ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Xs @ Ys ) @ ( listrel @ A @ B @ R ) )
       => ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ ( cons @ A @ X2 @ Xs ) @ ( cons @ B @ Y @ Ys ) ) @ ( listrel @ A @ B @ R ) ) ) ) ).

% listrel.Cons
thf(fact_182_irrefl__def,axiom,
    ! [A: $tType] :
      ( ( irrefl @ A )
      = ( ^ [R3: set @ ( product_prod @ A @ A )] :
          ! [A6: A] :
            ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ A6 @ A6 ) @ R3 ) ) ) ).

% irrefl_def
thf(fact_183_irreflI,axiom,
    ! [A: $tType,R2: set @ ( product_prod @ A @ A )] :
      ( ! [A3: A] :
          ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ A3 @ A3 ) @ R2 )
     => ( irrefl @ A @ R2 ) ) ).

% irreflI
thf(fact_184_lenlex__append2,axiom,
    ! [A: $tType,R2: set @ ( product_prod @ A @ A ),Us2: list @ A,Xs: list @ A,Ys: list @ A] :
      ( ( irrefl @ A @ R2 )
     => ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Us2 @ Xs ) @ ( append @ A @ Us2 @ Ys ) ) @ ( lenlex @ A @ R2 ) )
        = ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( lenlex @ A @ R2 ) ) ) ) ).

% lenlex_append2
thf(fact_185_Nil__lenlex__iff1,axiom,
    ! [A: $tType,Ns: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( nil @ A ) @ Ns ) @ ( lenlex @ A @ R ) )
      = ( Ns
       != ( nil @ A ) ) ) ).

% Nil_lenlex_iff1
thf(fact_186_lenlex__irreflexive,axiom,
    ! [A: $tType,R: set @ ( product_prod @ A @ A ),Xs: list @ A] :
      ( ! [X: A] :
          ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X @ X ) @ R )
     => ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Xs ) @ ( lenlex @ A @ R ) ) ) ).

% lenlex_irreflexive
thf(fact_187_Nil__lenlex__iff2,axiom,
    ! [A: $tType,Ns: list @ A,R: set @ ( product_prod @ A @ A )] :
      ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Ns @ ( nil @ A ) ) @ ( lenlex @ A @ R ) ) ).

% Nil_lenlex_iff2
thf(fact_188_irrefl__lex,axiom,
    ! [A: $tType,R: set @ ( product_prod @ A @ A )] :
      ( ( irrefl @ A @ R )
     => ( irrefl @ ( list @ A ) @ ( lex @ A @ R ) ) ) ).

% irrefl_lex
thf(fact_189_internal__case__prod__conv,axiom,
    ! [B: $tType,A: $tType,C: $tType,C2: B > C > A,A2: B,B2: C] :
      ( ( produc2004651681e_prod @ B @ C @ A @ C2 @ ( product_Pair @ B @ C @ A2 @ B2 ) )
      = ( C2 @ A2 @ B2 ) ) ).

% internal_case_prod_conv
thf(fact_190_list__ex1__simps_I1_J,axiom,
    ! [A: $tType,P: A > $o] :
      ~ ( list_ex1 @ A @ P @ ( nil @ A ) ) ).

% list_ex1_simps(1)
thf(fact_191_list__ex1__iff,axiom,
    ! [A: $tType] :
      ( ( list_ex1 @ A )
      = ( ^ [P4: A > $o,Xs4: list @ A] :
          ? [X3: A] :
            ( ( member @ A @ X3 @ ( set2 @ A @ Xs4 ) )
            & ( P4 @ X3 )
            & ! [Y3: A] :
                ( ( ( member @ A @ Y3 @ ( set2 @ A @ Xs4 ) )
                  & ( P4 @ Y3 ) )
               => ( Y3 = X3 ) ) ) ) ) ).

% list_ex1_iff
thf(fact_192_Nil__notin__lex,axiom,
    ! [A: $tType,Ys: list @ A,R: set @ ( product_prod @ A @ A )] :
      ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( nil @ A ) @ Ys ) @ ( lex @ A @ R ) ) ).

% Nil_notin_lex
thf(fact_193_Nil2__notin__lex,axiom,
    ! [A: $tType,Xs: list @ A,R: set @ ( product_prod @ A @ A )] :
      ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ ( nil @ A ) ) @ ( lex @ A @ R ) ) ).

% Nil2_notin_lex
thf(fact_194_lex__append__leftI,axiom,
    ! [A: $tType,Ys: list @ A,Zs2: list @ A,R: set @ ( product_prod @ A @ A ),Xs: list @ A] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Ys @ Zs2 ) @ ( lex @ A @ R ) )
     => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Xs @ Ys ) @ ( append @ A @ Xs @ Zs2 ) ) @ ( lex @ A @ R ) ) ) ).

% lex_append_leftI
thf(fact_195_lexl__not__refl,axiom,
    ! [A: $tType,R: set @ ( product_prod @ A @ A ),X2: list @ A] :
      ( ( irrefl @ A @ R )
     => ~ ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ X2 @ X2 ) @ ( lex @ A @ R ) ) ) ).

% lexl_not_refl
thf(fact_196_lex__append__left__iff,axiom,
    ! [A: $tType,R: set @ ( product_prod @ A @ A ),Xs: list @ A,Ys: list @ A,Zs2: list @ A] :
      ( ! [X: A] :
          ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X @ X ) @ R )
     => ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Xs @ Ys ) @ ( append @ A @ Xs @ Zs2 ) ) @ ( lex @ A @ R ) )
        = ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Ys @ Zs2 ) @ ( lex @ A @ R ) ) ) ) ).

% lex_append_left_iff
thf(fact_197_lex__append__leftD,axiom,
    ! [A: $tType,R: set @ ( product_prod @ A @ A ),Xs: list @ A,Ys: list @ A,Zs2: list @ A] :
      ( ! [X: A] :
          ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X @ X ) @ R )
     => ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Xs @ Ys ) @ ( append @ A @ Xs @ Zs2 ) ) @ ( lex @ A @ R ) )
       => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Ys @ Zs2 ) @ ( lex @ A @ R ) ) ) ) ).

% lex_append_leftD
thf(fact_198_can__select__set__list__ex1,axiom,
    ! [A: $tType,P: A > $o,A4: list @ A] :
      ( ( can_select @ A @ P @ ( set2 @ A @ A4 ) )
      = ( list_ex1 @ A @ P @ A4 ) ) ).

% can_select_set_list_ex1
thf(fact_199_Cons__in__lex,axiom,
    ! [A: $tType,X2: A,Xs: list @ A,Y: A,Ys: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( cons @ A @ X2 @ Xs ) @ ( cons @ A @ Y @ Ys ) ) @ ( lex @ A @ R ) )
      = ( ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y ) @ R )
          & ( ( size_size @ ( list @ A ) @ Xs )
            = ( size_size @ ( list @ A ) @ Ys ) ) )
        | ( ( X2 = Y )
          & ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( lex @ A @ R ) ) ) ) ) ).

% Cons_in_lex
thf(fact_200_append__eq__append__conv,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,Us2: list @ A,Vs: list @ A] :
      ( ( ( ( size_size @ ( list @ A ) @ Xs )
          = ( size_size @ ( list @ A ) @ Ys ) )
        | ( ( size_size @ ( list @ A ) @ Us2 )
          = ( size_size @ ( list @ A ) @ Vs ) ) )
     => ( ( ( append @ A @ Xs @ Us2 )
          = ( append @ A @ Ys @ Vs ) )
        = ( ( Xs = Ys )
          & ( Us2 = Vs ) ) ) ) ).

% append_eq_append_conv
thf(fact_201_length__rotate1,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( size_size @ ( list @ A ) @ ( rotate1 @ A @ Xs ) )
      = ( size_size @ ( list @ A ) @ Xs ) ) ).

% length_rotate1
thf(fact_202_listrel1__eq__len,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( listrel1 @ A @ R ) )
     => ( ( size_size @ ( list @ A ) @ Xs )
        = ( size_size @ ( list @ A ) @ Ys ) ) ) ).

% listrel1_eq_len
thf(fact_203_in__set__product__lists__length,axiom,
    ! [A: $tType,Xs: list @ A,Xss2: list @ ( list @ A )] :
      ( ( member @ ( list @ A ) @ Xs @ ( set2 @ ( list @ A ) @ ( product_lists @ A @ Xss2 ) ) )
     => ( ( size_size @ ( list @ A ) @ Xs )
        = ( size_size @ ( list @ ( list @ A ) ) @ Xss2 ) ) ) ).

% in_set_product_lists_length
thf(fact_204_can__select__def,axiom,
    ! [A: $tType] :
      ( ( can_select @ A )
      = ( ^ [P4: A > $o,A7: set @ A] :
          ? [X3: A] :
            ( ( member @ A @ X3 @ A7 )
            & ( P4 @ X3 )
            & ! [Y3: A] :
                ( ( ( member @ A @ Y3 @ A7 )
                  & ( P4 @ Y3 ) )
               => ( Y3 = X3 ) ) ) ) ) ).

% can_select_def
thf(fact_205_Ex__list__of__length,axiom,
    ! [A: $tType,N: nat] :
    ? [Xs2: list @ A] :
      ( ( size_size @ ( list @ A ) @ Xs2 )
      = N ) ).

% Ex_list_of_length
thf(fact_206_neq__if__length__neq,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( ( size_size @ ( list @ A ) @ Xs )
       != ( size_size @ ( list @ A ) @ Ys ) )
     => ( Xs != Ys ) ) ).

% neq_if_length_neq
thf(fact_207_list__induct3,axiom,
    ! [B: $tType,A: $tType,C: $tType,Xs: list @ A,Ys: list @ B,Zs2: list @ C,P: ( list @ A ) > ( list @ B ) > ( list @ C ) > $o] :
      ( ( ( size_size @ ( list @ A ) @ Xs )
        = ( size_size @ ( list @ B ) @ Ys ) )
     => ( ( ( size_size @ ( list @ B ) @ Ys )
          = ( size_size @ ( list @ C ) @ Zs2 ) )
       => ( ( P @ ( nil @ A ) @ ( nil @ B ) @ ( nil @ C ) )
         => ( ! [X: A,Xs2: list @ A,Y2: B,Ys2: list @ B,Z: C,Zs: list @ C] :
                ( ( ( size_size @ ( list @ A ) @ Xs2 )
                  = ( size_size @ ( list @ B ) @ Ys2 ) )
               => ( ( ( size_size @ ( list @ B ) @ Ys2 )
                    = ( size_size @ ( list @ C ) @ Zs ) )
                 => ( ( P @ Xs2 @ Ys2 @ Zs )
                   => ( P @ ( cons @ A @ X @ Xs2 ) @ ( cons @ B @ Y2 @ Ys2 ) @ ( cons @ C @ Z @ Zs ) ) ) ) )
           => ( P @ Xs @ Ys @ Zs2 ) ) ) ) ) ).

% list_induct3
thf(fact_208_list__induct2,axiom,
    ! [A: $tType,B: $tType,Xs: list @ A,Ys: list @ B,P: ( list @ A ) > ( list @ B ) > $o] :
      ( ( ( size_size @ ( list @ A ) @ Xs )
        = ( size_size @ ( list @ B ) @ Ys ) )
     => ( ( P @ ( nil @ A ) @ ( nil @ B ) )
       => ( ! [X: A,Xs2: list @ A,Y2: B,Ys2: list @ B] :
              ( ( ( size_size @ ( list @ A ) @ Xs2 )
                = ( size_size @ ( list @ B ) @ Ys2 ) )
             => ( ( P @ Xs2 @ Ys2 )
               => ( P @ ( cons @ A @ X @ Xs2 ) @ ( cons @ B @ Y2 @ Ys2 ) ) ) )
         => ( P @ Xs @ Ys ) ) ) ) ).

% list_induct2
thf(fact_209_listrel__eq__len,axiom,
    ! [A: $tType,B: $tType,Xs: list @ A,Ys: list @ B,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Xs @ Ys ) @ ( listrel @ A @ B @ R ) )
     => ( ( size_size @ ( list @ A ) @ Xs )
        = ( size_size @ ( list @ B ) @ Ys ) ) ) ).

% listrel_eq_len
thf(fact_210_same__length__different,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( Xs != Ys )
     => ( ( ( size_size @ ( list @ A ) @ Xs )
          = ( size_size @ ( list @ A ) @ Ys ) )
       => ? [Pre: list @ A,X: A,Xs5: list @ A,Y2: A,Ys6: list @ A] :
            ( ( X != Y2 )
            & ( Xs
              = ( append @ A @ Pre @ ( append @ A @ ( cons @ A @ X @ ( nil @ A ) ) @ Xs5 ) ) )
            & ( Ys
              = ( append @ A @ Pre @ ( append @ A @ ( cons @ A @ Y2 @ ( nil @ A ) ) @ Ys6 ) ) ) ) ) ) ).

% same_length_different
thf(fact_211_lexord__sufE,axiom,
    ! [A: $tType,Xs: list @ A,Zs2: list @ A,Ys: list @ A,Qs: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Xs @ Zs2 ) @ ( append @ A @ Ys @ Qs ) ) @ ( lexord @ A @ R ) )
     => ( ( Xs != Ys )
       => ( ( ( size_size @ ( list @ A ) @ Xs )
            = ( size_size @ ( list @ A ) @ Ys ) )
         => ( ( ( size_size @ ( list @ A ) @ Zs2 )
              = ( size_size @ ( list @ A ) @ Qs ) )
           => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( lexord @ A @ R ) ) ) ) ) ) ).

% lexord_sufE
thf(fact_212_lex__append__rightI,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,R: set @ ( product_prod @ A @ A ),Vs: list @ A,Us2: list @ A] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( lex @ A @ R ) )
     => ( ( ( size_size @ ( list @ A ) @ Vs )
          = ( size_size @ ( list @ A ) @ Us2 ) )
       => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Xs @ Us2 ) @ ( append @ A @ Ys @ Vs ) ) @ ( lex @ A @ R ) ) ) ) ).

% lex_append_rightI
thf(fact_213_lenlex__append1,axiom,
    ! [A: $tType,Us2: list @ A,Xs: list @ A,R2: set @ ( product_prod @ A @ A ),Vs: list @ A,Ys: list @ A] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Us2 @ Xs ) @ ( lenlex @ A @ R2 ) )
     => ( ( ( size_size @ ( list @ A ) @ Vs )
          = ( size_size @ ( list @ A ) @ Ys ) )
       => ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( append @ A @ Us2 @ Vs ) @ ( append @ A @ Xs @ Ys ) ) @ ( lenlex @ A @ R2 ) ) ) ) ).

% lenlex_append1
thf(fact_214_lexord__lex,axiom,
    ! [A: $tType,X2: list @ A,Y: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ X2 @ Y ) @ ( lex @ A @ R ) )
      = ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ X2 @ Y ) @ ( lexord @ A @ R ) )
        & ( ( size_size @ ( list @ A ) @ X2 )
          = ( size_size @ ( list @ A ) @ Y ) ) ) ) ).

% lexord_lex
thf(fact_215_Cons__lenlex__iff,axiom,
    ! [A: $tType,M: A,Ms: list @ A,N: A,Ns: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ ( cons @ A @ M @ Ms ) @ ( cons @ A @ N @ Ns ) ) @ ( lenlex @ A @ R ) )
      = ( ( ord_less @ nat @ ( size_size @ ( list @ A ) @ Ms ) @ ( size_size @ ( list @ A ) @ Ns ) )
        | ( ( ( size_size @ ( list @ A ) @ Ms )
            = ( size_size @ ( list @ A ) @ Ns ) )
          & ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ M @ N ) @ R ) )
        | ( ( M = N )
          & ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Ms @ Ns ) @ ( lenlex @ A @ R ) ) ) ) ) ).

% Cons_lenlex_iff
thf(fact_216_length__n__lists__elem,axiom,
    ! [A: $tType,Ys: list @ A,N: nat,Xs: list @ A] :
      ( ( member @ ( list @ A ) @ Ys @ ( set2 @ ( list @ A ) @ ( n_lists @ A @ N @ Xs ) ) )
     => ( ( size_size @ ( list @ A ) @ Ys )
        = N ) ) ).

% length_n_lists_elem
thf(fact_217_length__induct,axiom,
    ! [A: $tType,P: ( list @ A ) > $o,Xs: list @ A] :
      ( ! [Xs2: list @ A] :
          ( ! [Ys7: list @ A] :
              ( ( ord_less @ nat @ ( size_size @ ( list @ A ) @ Ys7 ) @ ( size_size @ ( list @ A ) @ Xs2 ) )
             => ( P @ Ys7 ) )
         => ( P @ Xs2 ) )
     => ( P @ Xs ) ) ).

% length_induct
thf(fact_218_n__lists__Nil,axiom,
    ! [A: $tType,N: nat] :
      ( ( ( N
          = ( zero_zero @ nat ) )
       => ( ( n_lists @ A @ N @ ( nil @ A ) )
          = ( cons @ ( list @ A ) @ ( nil @ A ) @ ( nil @ ( list @ A ) ) ) ) )
      & ( ( N
         != ( zero_zero @ nat ) )
       => ( ( n_lists @ A @ N @ ( nil @ A ) )
          = ( nil @ ( list @ A ) ) ) ) ) ).

% n_lists_Nil
thf(fact_219_in__measures_I2_J,axiom,
    ! [A: $tType,X2: A,Y: A,F: A > nat,Fs: list @ ( A > nat )] :
      ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y ) @ ( measures @ A @ ( cons @ ( A > nat ) @ F @ Fs ) ) )
      = ( ( ord_less @ nat @ ( F @ X2 ) @ ( F @ Y ) )
        | ( ( ( F @ X2 )
            = ( F @ Y ) )
          & ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y ) @ ( measures @ A @ Fs ) ) ) ) ) ).

% in_measures(2)
thf(fact_220_in__measures_I1_J,axiom,
    ! [A: $tType,X2: A,Y: A] :
      ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y ) @ ( measures @ A @ ( nil @ ( A > nat ) ) ) ) ).

% in_measures(1)
thf(fact_221_length__0__conv,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( ( size_size @ ( list @ A ) @ Xs )
        = ( zero_zero @ nat ) )
      = ( Xs
        = ( nil @ A ) ) ) ).

% length_0_conv
thf(fact_222_length__greater__0__conv,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( ord_less @ nat @ ( zero_zero @ nat ) @ ( size_size @ ( list @ A ) @ Xs ) )
      = ( Xs
       != ( nil @ A ) ) ) ).

% length_greater_0_conv
thf(fact_223_list_Osize_I3_J,axiom,
    ! [A: $tType] :
      ( ( size_size @ ( list @ A ) @ ( nil @ A ) )
      = ( zero_zero @ nat ) ) ).

% list.size(3)
thf(fact_224_length__pos__if__in__set,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ( ord_less @ nat @ ( zero_zero @ nat ) @ ( size_size @ ( list @ A ) @ Xs ) ) ) ).

% length_pos_if_in_set
thf(fact_225_measures__less,axiom,
    ! [A: $tType,F: A > nat,X2: A,Y: A,Fs: list @ ( A > nat )] :
      ( ( ord_less @ nat @ ( F @ X2 ) @ ( F @ Y ) )
     => ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ X2 @ Y ) @ ( measures @ A @ ( cons @ ( A > nat ) @ F @ Fs ) ) ) ) ).

% measures_less
thf(fact_226_n__lists_Osimps_I1_J,axiom,
    ! [A: $tType,Xs: list @ A] :
      ( ( n_lists @ A @ ( zero_zero @ nat ) @ Xs )
      = ( cons @ ( list @ A ) @ ( nil @ A ) @ ( nil @ ( list @ A ) ) ) ) ).

% n_lists.simps(1)
thf(fact_227_maxvar_Osimps_I1_J,axiom,
    ( ( prover572158330maxvar @ ( nil @ nat ) )
    = ( zero_zero @ nat ) ) ).

% maxvar.simps(1)
thf(fact_228_count__notin,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ~ ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
     => ( ( count_list @ A @ Xs @ X2 )
        = ( zero_zero @ nat ) ) ) ).

% count_notin
thf(fact_229_count__list_Osimps_I1_J,axiom,
    ! [A: $tType,Y: A] :
      ( ( count_list @ A @ ( nil @ A ) @ Y )
      = ( zero_zero @ nat ) ) ).

% count_list.simps(1)
thf(fact_230_length__code,axiom,
    ! [A: $tType] :
      ( ( size_size @ ( list @ A ) )
      = ( gen_length @ A @ ( zero_zero @ nat ) ) ) ).

% length_code
thf(fact_231_listrel__iff__nth,axiom,
    ! [A: $tType,B: $tType,Xs: list @ A,Ys: list @ B,R: set @ ( product_prod @ A @ B )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ B ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ B ) @ Xs @ Ys ) @ ( listrel @ A @ B @ R ) )
      = ( ( ( size_size @ ( list @ A ) @ Xs )
          = ( size_size @ ( list @ B ) @ Ys ) )
        & ! [N2: nat] :
            ( ( ord_less @ nat @ N2 @ ( size_size @ ( list @ A ) @ Xs ) )
           => ( member @ ( product_prod @ A @ B ) @ ( product_Pair @ A @ B @ ( nth @ A @ Xs @ N2 ) @ ( nth @ B @ Ys @ N2 ) ) @ R ) ) ) ) ).

% listrel_iff_nth
thf(fact_232_nth__Cons__0,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( nth @ A @ ( cons @ A @ X2 @ Xs ) @ ( zero_zero @ nat ) )
      = X2 ) ).

% nth_Cons_0
thf(fact_233_nth__append__length,axiom,
    ! [A: $tType,Xs: list @ A,X2: A,Ys: list @ A] :
      ( ( nth @ A @ ( append @ A @ Xs @ ( cons @ A @ X2 @ Ys ) ) @ ( size_size @ ( list @ A ) @ Xs ) )
      = X2 ) ).

% nth_append_length
thf(fact_234_all__set__conv__all__nth,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o] :
      ( ( ! [X3: A] :
            ( ( member @ A @ X3 @ ( set2 @ A @ Xs ) )
           => ( P @ X3 ) ) )
      = ( ! [I: nat] :
            ( ( ord_less @ nat @ I @ ( size_size @ ( list @ A ) @ Xs ) )
           => ( P @ ( nth @ A @ Xs @ I ) ) ) ) ) ).

% all_set_conv_all_nth
thf(fact_235_all__nth__imp__all__set,axiom,
    ! [A: $tType,Xs: list @ A,P: A > $o,X2: A] :
      ( ! [I2: nat] :
          ( ( ord_less @ nat @ I2 @ ( size_size @ ( list @ A ) @ Xs ) )
         => ( P @ ( nth @ A @ Xs @ I2 ) ) )
     => ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
       => ( P @ X2 ) ) ) ).

% all_nth_imp_all_set
thf(fact_236_in__set__conv__nth,axiom,
    ! [A: $tType,X2: A,Xs: list @ A] :
      ( ( member @ A @ X2 @ ( set2 @ A @ Xs ) )
      = ( ? [I: nat] :
            ( ( ord_less @ nat @ I @ ( size_size @ ( list @ A ) @ Xs ) )
            & ( ( nth @ A @ Xs @ I )
              = X2 ) ) ) ) ).

% in_set_conv_nth
thf(fact_237_list__ball__nth,axiom,
    ! [A: $tType,N: nat,Xs: list @ A,P: A > $o] :
      ( ( ord_less @ nat @ N @ ( size_size @ ( list @ A ) @ Xs ) )
     => ( ! [X: A] :
            ( ( member @ A @ X @ ( set2 @ A @ Xs ) )
           => ( P @ X ) )
       => ( P @ ( nth @ A @ Xs @ N ) ) ) ) ).

% list_ball_nth
thf(fact_238_nth__mem,axiom,
    ! [A: $tType,N: nat,Xs: list @ A] :
      ( ( ord_less @ nat @ N @ ( size_size @ ( list @ A ) @ Xs ) )
     => ( member @ A @ ( nth @ A @ Xs @ N ) @ ( set2 @ A @ Xs ) ) ) ).

% nth_mem
thf(fact_239_gen__length__code_I1_J,axiom,
    ! [A: $tType,N: nat] :
      ( ( gen_length @ A @ N @ ( nil @ A ) )
      = N ) ).

% gen_length_code(1)
thf(fact_240_nth__equalityI,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A] :
      ( ( ( size_size @ ( list @ A ) @ Xs )
        = ( size_size @ ( list @ A ) @ Ys ) )
     => ( ! [I2: nat] :
            ( ( ord_less @ nat @ I2 @ ( size_size @ ( list @ A ) @ Xs ) )
           => ( ( nth @ A @ Xs @ I2 )
              = ( nth @ A @ Ys @ I2 ) ) )
       => ( Xs = Ys ) ) ) ).

% nth_equalityI
thf(fact_241_Skolem__list__nth,axiom,
    ! [A: $tType,K: nat,P: nat > A > $o] :
      ( ( ! [I: nat] :
            ( ( ord_less @ nat @ I @ K )
           => ? [X6: A] : ( P @ I @ X6 ) ) )
      = ( ? [Xs4: list @ A] :
            ( ( ( size_size @ ( list @ A ) @ Xs4 )
              = K )
            & ! [I: nat] :
                ( ( ord_less @ nat @ I @ K )
               => ( P @ I @ ( nth @ A @ Xs4 @ I ) ) ) ) ) ) ).

% Skolem_list_nth
thf(fact_242_list__eq__iff__nth__eq,axiom,
    ! [A: $tType] :
      ( ( ^ [Y4: list @ A,Z4: list @ A] : Y4 = Z4 )
      = ( ^ [Xs4: list @ A,Ys3: list @ A] :
            ( ( ( size_size @ ( list @ A ) @ Xs4 )
              = ( size_size @ ( list @ A ) @ Ys3 ) )
            & ! [I: nat] :
                ( ( ord_less @ nat @ I @ ( size_size @ ( list @ A ) @ Xs4 ) )
               => ( ( nth @ A @ Xs4 @ I )
                  = ( nth @ A @ Ys3 @ I ) ) ) ) ) ) ).

% list_eq_iff_nth_eq
thf(fact_243_nth__butlast,axiom,
    ! [A: $tType,N: nat,Xs: list @ A] :
      ( ( ord_less @ nat @ N @ ( size_size @ ( list @ A ) @ ( butlast @ A @ Xs ) ) )
     => ( ( nth @ A @ ( butlast @ A @ Xs ) @ N )
        = ( nth @ A @ Xs @ N ) ) ) ).

% nth_butlast
thf(fact_244_listrel1__iff__update,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( listrel1 @ A @ R ) )
      = ( ? [Y3: A,N2: nat] :
            ( ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ ( nth @ A @ Xs @ N2 ) @ Y3 ) @ R )
            & ( ord_less @ nat @ N2 @ ( size_size @ ( list @ A ) @ Xs ) )
            & ( Ys
              = ( list_update @ A @ Xs @ N2 @ Y3 ) ) ) ) ) ).

% listrel1_iff_update
thf(fact_245_lex__take__index,axiom,
    ! [A: $tType,Xs: list @ A,Ys: list @ A,R: set @ ( product_prod @ A @ A )] :
      ( ( member @ ( product_prod @ ( list @ A ) @ ( list @ A ) ) @ ( product_Pair @ ( list @ A ) @ ( list @ A ) @ Xs @ Ys ) @ ( lex @ A @ R ) )
     => ~ ! [I2: nat] :
            ( ( ord_less @ nat @ I2 @ ( size_size @ ( list @ A ) @ Xs ) )
           => ( ( ord_less @ nat @ I2 @ ( size_size @ ( list @ A ) @ Ys ) )
             => ( ( ( take @ A @ I2 @ Xs )
                  = ( take @ A @ I2 @ Ys ) )
               => ~ ( member @ ( product_prod @ A @ A ) @ ( product_Pair @ A @ A @ ( nth @ A @ Xs @ I2 ) @ ( nth @ A @ Ys @ I2 ) ) @ R ) ) ) ) ) ).

% lex_take_index
thf(fact_246_list__update__overwrite,axiom,
    ! [A: $tType,Xs: list @ A,I3: nat,X2: A,Y: A] :
      ( ( list_update @ A @ ( list_update @ A @ Xs @ I3 @ X2 ) @ I3 @ Y )
      = ( list_update @ A @ Xs @ I3 @ Y ) ) ).

% list_update_overwrite
thf(fact_247_list__update__nonempty,axiom,
    ! [A: $tType,Xs: list @ A,K: nat,X2: A] :
      ( ( ( list_update @ A @ Xs @ K @ X2 )
        = ( nil @ A ) )
      = ( Xs
        = ( nil @ A ) ) ) ).

% list_update_nonempty
thf(fact_248_length__list__update,axiom,
    ! [A: $tType,Xs: list @ A,I3: nat,X2: A] :
      ( ( size_size @ ( list @ A ) @ ( list_update @ A @ Xs @ I3 @ X2 ) )
      = ( size_size @ ( list @ A ) @ Xs ) ) ).

% length_list_update
thf(fact_249_list__update__id,axiom,
    ! [A: $tType,Xs: list @ A,I3: nat] :
      ( ( list_update @ A @ Xs @ I3 @ ( nth @ A @ Xs @ I3 ) )
      = Xs ) ).

% list_update_id
thf(fact_250_nth__list__update__neq,axiom,
    ! [A: $tType,I3: nat,J: nat,Xs: list @ A,X2: A] :
      ( ( I3 != J )
     => ( ( nth @ A @ ( list_update @ A @ Xs @ I3 @ X2 ) @ J )
        = ( nth @ A @ Xs @ J ) ) ) ).

% nth_list_update_neq
thf(fact_251_take__eq__Nil,axiom,
    ! [A: $tType,N: nat,Xs: list @ A] :
      ( ( ( take @ A @ N @ Xs )
        = ( nil @ A ) )
      = ( ( N
          = ( zero_zero @ nat ) )
        | ( Xs
          = ( nil @ A ) ) ) ) ).

% take_eq_Nil
thf(fact_252_take0,axiom,
    ! [A: $tType] :
      ( ( take @ A @ ( zero_zero @ nat ) )
      = ( ^ [Xs4: list @ A] : ( nil @ A ) ) ) ).

% take0
thf(fact_253_nth__take,axiom,
    ! [A: $tType,I3: nat,N: nat,Xs: list @ A] :
      ( ( ord_less @ nat @ I3 @ N )
     => ( ( nth @ A @ ( take @ A @ N @ Xs ) @ I3 )
        = ( nth @ A @ Xs @ I3 ) ) ) ).

% nth_take
thf(fact_254_list__update__length,axiom,
    ! [A: $tType,Xs: list @ A,X2: A,Ys: list @ A,Y: A] :
      ( ( list_update @ A @ ( append @ A @ Xs @ ( cons @ A @ X2 @ Ys ) ) @ ( size_size @ ( list @ A ) @ Xs ) @ Y )
      = ( append @ A @ Xs @ ( cons @ A @ Y @ Ys ) ) ) ).

% list_update_length

% Type constructors (6)
thf(tcon_fun___Orderings_Oord,axiom,
    ! [A8: $tType,A9: $tType] :
      ( ( ord @ A9 )
     => ( ord @ ( A8 > A9 ) ) ) ).

thf(tcon_Nat_Onat___Orderings_Olinorder,axiom,
    linorder @ nat ).

thf(tcon_Nat_Onat___Orderings_Oord_1,axiom,
    ord @ nat ).

thf(tcon_Set_Oset___Orderings_Oord_2,axiom,
    ! [A8: $tType] : ( ord @ ( set @ A8 ) ) ).

thf(tcon_HOL_Obool___Orderings_Olinorder_3,axiom,
    linorder @ $o ).

thf(tcon_HOL_Obool___Orderings_Oord_4,axiom,
    ord @ $o ).

% Helper facts (3)
thf(help_If_3_1_T,axiom,
    ! [P: $o] :
      ( ( P = $true )
      | ( P = $false ) ) ).

thf(help_If_2_1_T,axiom,
    ! [A: $tType,X2: A,Y: A] :
      ( ( if @ A @ $false @ X2 @ Y )
      = Y ) ).

thf(help_If_1_1_T,axiom,
    ! [A: $tType,X2: A,Y: A] :
      ( ( if @ A @ $true @ X2 @ Y )
      = X2 ) ).

% Conjectures (3)
thf(conj_0,hypothesis,
    ~ ( member @ nat @ u @ ( set2 @ nat @ ( prover_Mirabelle_sfv @ ( cons @ prover2006609834e_form @ ( prover946642470e_FAll @ f ) @ s ) ) ) ) ).

thf(conj_1,hypothesis,
    ! [A10: set @ prover_Mirabelle_U,B5: nat > ( list @ prover_Mirabelle_U ) > $o,E6: nat > prover_Mirabelle_U] :
      ( ( prover1043414700is_env @ ( product_Pair @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o ) @ A10 @ B5 ) @ E6 )
     => ( prover1899965912_SEval @ ( product_Pair @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o ) @ A10 @ B5 ) @ E6 @ ( append @ prover2006609834e_form @ s @ ( cons @ prover2006609834e_form @ ( prover48307765_finst @ f @ u ) @ ( nil @ prover2006609834e_form ) ) ) ) ) ).

thf(conj_2,conjecture,
    ! [E5: nat > prover_Mirabelle_U] :
      ( ~ ( prover1043414700is_env @ ( product_Pair @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o ) @ a @ b ) @ E5 )
      | ( prover1899965912_SEval @ ( product_Pair @ ( set @ prover_Mirabelle_U ) @ ( nat > ( list @ prover_Mirabelle_U ) > $o ) @ a @ b ) @ E5 @ ( cons @ prover2006609834e_form @ ( prover946642470e_FAll @ f ) @ s ) ) ) ).

%------------------------------------------------------------------------------
